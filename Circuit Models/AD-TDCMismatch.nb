Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"<<", "Neurogrid`"}], "*)"}]], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.63859000852374*^9, 3.638590010629114*^9}, {
  3.6392384395879908`*^9, 3.6392384406103773`*^9}, {3.649179361374536*^9, 
  3.649179373058601*^9}}],

Cell[CellGroupData[{

Cell["ADC mismatch analysis", "Title",
 CellChangeTimes->{{3.638910828170273*^9, 3.638910835014668*^9}, {
  3.639841425366589*^9, 3.639841427578998*^9}}],

Cell[CellGroupData[{

Cell["Universal Code", "Chapter",
 CellChangeTimes->{{3.6491764463113537`*^9, 3.649176448254445*^9}}],

Cell[CellGroupData[{

Cell["Plot Explorer Code", "Section",
 CellChangeTimes->{{3.6465716719543962`*^9, 3.646571680770255*^9}, {
  3.646587234739262*^9, 3.646587236112948*^9}}],

Cell["\<\
The following code was taken from: \
http://mathematica.stackexchange.com/questions/7142/how-to-manipulate-2d-\
plots
More notes about how to navigate with this feature is written at this link.\
\>", "Text",
 CellChangeTimes->{{3.6465718318638163`*^9, 3.646571839402296*^9}, {
  3.646587238947261*^9, 3.646587253078614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "PlotExplorer", "]"}], "=", 
   RowBox[{"{", "HoldFirst", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotExplorer", "[", "defPlot_", "]"}], ":=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "held", ",", "head", ",", "plot", ",", "range", ",", "zoomRange", ",", 
       "defRange", ",", "defSize", ",", "defEpilog", ",", "size", ",", "pt1", 
       ",", "pt2", ",", "spt1", ",", "dist", ",", 
       RowBox[{"rect", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"dragged", "=", "False"}], ",", 
       RowBox[{"overButton", "=", "False"}], ",", 
       RowBox[{"pushedButton", "=", "False"}], ",", 
       RowBox[{"overHor", "=", "False"}], ",", 
       RowBox[{"overVer", "=", "False"}], ",", 
       RowBox[{"activeHor", "=", "False"}], ",", 
       RowBox[{"activeVer", "=", "False"}], ",", 
       RowBox[{"xPos", "=", ".5"}], ",", 
       RowBox[{"yPos", "=", ".5"}], ",", 
       RowBox[{"minDistance", "=", "0.1"}], ",", 
       RowBox[{"sliderRatio", "=", "0.05"}], ",", 
       RowBox[{"panFactor", "=", "10"}], ",", "reset", ",", "distance", ",", 
       "slider", ",", "replot", ",", 
       RowBox[{"coord", "=", "None"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"held", "=", 
       RowBox[{"Hold", "@", "defPlot"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"head", "=", 
       RowBox[{"Part", "[", 
        RowBox[{"held", ",", "1", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plot", "=", "defPlot"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"defEpilog", ",", "defRange"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Epilog", ",", "PlotRange"}], "}"}], "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{"AbsoluteOptions", "@", "plot"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"defEpilog", "=", 
       RowBox[{"defEpilog", "/.", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"size", "=", 
       RowBox[{"defSize", "=", 
        RowBox[{"Rasterize", "[", 
         RowBox[{"plot", ",", "\"\<RasterSize\>\""}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"range", "=", 
       RowBox[{"zoomRange", "=", "defRange"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Deploy", "@", 
       RowBox[{"EventHandler", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", 
          RowBox[{
           RowBox[{"MouseAppearance", "[", 
            RowBox[{
             RowBox[{"Show", "[", 
              RowBox[{"plot", ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"Dynamic", "@", "range"}]}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"defEpilog", ",", 
                  RowBox[{"(*", 
                   RowBox[{"Original", " ", "epilog"}], "*)"}], 
                  RowBox[{"(*", 
                   RowBox[{"Replot", " ", "button"}], "*)"}], 
                  RowBox[{"EventHandler", "[", 
                   RowBox[{
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Graphics", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"Opacity", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"overButton", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"pushedButton", ",", ".2", ",", ".1"}], "]"}], 
                    ",", "0"}], "]"}]}]}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"RoundingRadius", "\[Rule]", 
                    RowBox[{"Offset", "@", "5"}]}]}], "]"}], ",", "Black", 
                    ",", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"Opacity", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"overButton", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"pushedButton", ",", ".9", ",", ".7"}], "]"}], 
                    ",", "0"}], "]"}]}]}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{"\"\<Replot\>\"", ",", "Center"}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{"ImageSize", "\[Rule]", "50"}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                    RowBox[{"Scaled", "@", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"Scaled", "@", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<MouseEntered\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"overButton", "=", "True"}], ")"}]}], ",", 
                    RowBox[{"\"\<MouseExited\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"overButton", "=", "False"}], ")"}]}], ",", 
                    RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"pushedButton", "=", "True"}], ")"}]}], ",", 
                    RowBox[{"\"\<MouseUp\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pushedButton", "=", "False"}], ";", 
                    RowBox[{"replot", "@", "plot"}]}], ")"}]}]}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"(*", 
                   RowBox[{"Zoom", " ", "rectangle"}], "*)"}], 
                  RowBox[{"FaceForm", "@", 
                   RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Opacity", "@", ".1"}]}], "}"}]}], ",", 
                  RowBox[{"EdgeForm", "@", 
                   RowBox[{"{", 
                    RowBox[{"Thin", ",", "Dotted", ",", 
                    RowBox[{"Opacity", "@", ".5"}]}], "}"}]}], ",", 
                  RowBox[{"Dynamic", "@", "rect"}], ",", 
                  RowBox[{"(*", 
                   RowBox[{"Range", " ", "sliders"}], "*)"}], 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "xPos"}], ",", 
                    RowBox[{"Dynamic", "@", "overHor"}], ",", 
                    RowBox[{"Dynamic", "@", "activeHor"}], ",", "size", ",", 
                    "True"}], "]"}], ",", 
                    RowBox[{"Scaled", "@", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"Scaled", "@", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "0"}], "}"}]}]}], "]"}], ",", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "yPos"}], ",", 
                    RowBox[{"Dynamic", "@", "overVer"}], ",", 
                    RowBox[{"Dynamic", "@", "activeVer"}], ",", "size", ",", 
                    "False"}], "]"}], ",", 
                    RowBox[{"Scaled", "@", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
                    RowBox[{"Scaled", "@", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".5"}], "}"}]}]}], "]"}]}], "}"}]}]}], 
              "]"}], ",", 
             RowBox[{"(*", "cursor", "*)"}], 
             RowBox[{"Which", "[", 
              RowBox[{"dragged", ",", "\"\<FrameRisingResize\>\"", ",", 
               RowBox[{"CurrentValue", "@", "\"\<AltKey\>\""}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Antialiasing", "\[Rule]", "False"}], ",", 
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"coord", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", "8"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                 RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "*", 
                   "8"}]}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}], "&&", 
                RowBox[{"!", "overHor"}], "&&", 
                RowBox[{"!", "overVer"}]}], ",", "\"\<ZoomView\>\"", ",", 
               RowBox[{
                RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], "&&", 
                RowBox[{"!", "overHor"}], "&&", 
                RowBox[{"!", "overVer"}]}], ",", "\"\<DragGraphics\>\"", ",", 
               
               RowBox[{
                RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], "&&", 
                RowBox[{"(", 
                 RowBox[{"overHor", "||", "overVer"}], ")"}]}], ",", 
               "\"\<LinkHand\>\"", ",", "True", ",", "Automatic"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"dragged", ",", "plot"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<MouseMoved\>\"", "\[RuleDelayed]", 
            RowBox[{"(", 
             RowBox[{"coord", "=", 
              RowBox[{"MousePosition", "@", "\"\<Graphics\>\""}]}], ")"}]}], 
           ",", 
           RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"!", "overButton"}], "&&", 
               RowBox[{
                RowBox[{"CurrentValue", "@", "\"\<MouseClickCount\>\""}], 
                "\[Equal]", "2"}]}], ",", 
              RowBox[{"reset", "[", "]"}]}], "]"}]}], ",", 
           RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"!", "overHor"}], "||", 
                RowBox[{"!", "overVer"}]}], ")"}], ",", 
              RowBox[{
               RowBox[{"pt1", "=", 
                RowBox[{"MousePosition", "@", "\"\<Graphics\>\""}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"spt1", "=", 
                RowBox[{
                "MousePosition", "@", "\"\<GraphicsScaled\>\""}]}]}]}], 
             "]"}]}], ",", 
           RowBox[{"\"\<MouseDragged\>\"", "\[RuleDelayed]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"!", "overHor"}], "&&", 
                  RowBox[{"!", "overVer"}]}], "||", "dragged"}], ")"}], "&&", 
               
               RowBox[{"!", "overButton"}], "&&", 
               RowBox[{"!", "pushedButton"}], "&&", 
               RowBox[{"!", "activeVer"}], "&&", 
               RowBox[{"!", "activeHor"}]}], ",", 
              RowBox[{
               RowBox[{"dragged", "=", "True"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}], ",", 
                 RowBox[{
                  RowBox[{"dist", "=", 
                   RowBox[{
                    RowBox[{"Last", "@", 
                    RowBox[{
                    "MousePosition", "@", "\"\<GraphicsScaled\>\""}]}], "-", 
                    RowBox[{"Last", "@", "spt1"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"range", "=", 
                   RowBox[{"zoomRange", "*", 
                    RowBox[{"10", "^", "dist"}]}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                  "\"\<GraphicsScaled\>\"", " ", "is", " ", "required", " ", 
                   "below", " ", "as", " ", "\"\<Graphics\>\"", " ", "would", 
                   " ", "give", " ", "jumpy", " ", "results", " ", "as", " ", 
                   "the", " ", "plot", " ", "range", " ", "is", " ", 
                   "constantly", " ", 
                   RowBox[{"modified", "."}]}], "*)"}], 
                 RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], ",", 
                 RowBox[{
                  RowBox[{"pt2", "=", 
                   RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Rescale", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MousePosition", "@", "\"\<GraphicsScaled\>\""}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "zoomRange"}], "}"}]}], "]"}], "-", "pt1"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"range", "=", 
                   RowBox[{"zoomRange", "-", "pt2"}]}]}], ",", "True", ",", 
                 RowBox[{
                  RowBox[{"pt2", "=", 
                   RowBox[{"MousePosition", "@", "\"\<Graphics\>\""}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"rect", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"pt2", "===", "None"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{"pt1", ",", "pt2"}], "]"}]}], "]"}]}]}]}], 
                "]"}]}]}], "]"}]}], ",", 
           RowBox[{"\"\<MouseUp\>\"", "\[RuleDelayed]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}]}], "&&", 
                 RowBox[{"!", 
                  RowBox[{"CurrentValue", "@", "\"\<ControlKey\>\""}]}], "&&",
                  "dragged", "&&", 
                 RowBox[{
                  RowBox[{"distance", "[", 
                   RowBox[{"pt1", ",", "pt2", ",", "zoomRange"}], "]"}], ">", 
                  "minDistance"}]}], ",", 
                RowBox[{
                 RowBox[{"rect", "=", 
                  RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"range", "=", 
                  RowBox[{"Transpose", "@", 
                   RowBox[{"Sort", "@", 
                    RowBox[{"{", 
                    RowBox[{"pt1", ",", "pt2"}], "}"}]}]}]}], ";"}]}], "]"}], 
              ";", 
              RowBox[{"zoomRange", "=", "range"}], ";", "\[IndentingNewLine]", 
              RowBox[{"dragged", "=", "False"}]}], ")"}]}]}], "}"}], ",", 
         RowBox[{"PassEventsDown", "\[Rule]", "True"}], ",", 
         RowBox[{"PassEventsUp", "\[Rule]", "True"}]}], "]"}]}]}], ",", 
     RowBox[{"Initialization", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"slider", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "pos_", "]"}], ",", 
           RowBox[{"Dynamic", "[", "over_", "]"}], ",", 
           RowBox[{"Dynamic", "[", "active_", "]"}], ",", "size_", ",", 
           "hor_"}], "]"}], ":=", 
         RowBox[{"EventHandler", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{
             RowBox[{"LocatorPane", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"hor", ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"pos", ",", ".5"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pos", "=", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"First", "@", "#"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"range", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], ",", 
                    RowBox[{
                    RowBox[{"First", "@", "zoomRange"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"pos", "-", ".5"}], ")"}], "*", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"First", "@", "zoomRange"}]}], "]"}], "*", 
                    "panFactor"}]}], ",", 
                    RowBox[{
                    RowBox[{"First", "@", "zoomRange"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"pos", "-", ".5"}], ")"}], "*", "2"}], 
                    ")"}]}]}]}], "]"}]}]}], ")"}], "&"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{".5", ",", "pos"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pos", "=", 
                    RowBox[{"Clip", "[", 
                    RowBox[{
                    RowBox[{"Last", "@", "#"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"range", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CurrentValue", "@", "\"\<ShiftKey\>\""}], ",", 
                    RowBox[{
                    RowBox[{"Last", "@", "zoomRange"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"pos", "-", ".5"}], ")"}], "*", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"Last", "@", "zoomRange"}]}], "]"}], "*", 
                    "panFactor"}]}], ",", 
                    RowBox[{
                    RowBox[{"Last", "@", "zoomRange"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"pos", "-", ".5"}], ")"}], "*", "2"}], 
                    ")"}]}]}]}], "]"}]}]}], ")"}], "&"}]}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"(*", 
                RowBox[{
                "Locator", " ", "below", " ", "is", " ", "required", " ", 
                 "inside", " ", "Graphics", " ", "as", " ", "LocatorPane", 
                 " ", "inside", " ", "Inset", " ", "looses", " ", "the", " ", 
                 "crosshair", " ", 
                 RowBox[{"image", "."}]}], "*)"}], 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Opacity", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"over", "||", "active"}], ")"}], "&&", 
                    RowBox[{"!", "dragged"}]}], ",", ".1", ",", "0"}], 
                    "]"}]}], ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"RoundingRadius", "\[Rule]", 
                    RowBox[{"Offset", "@", "5"}]}]}], "]"}], ",", 
                   RowBox[{"Opacity", "@", "1"}], ",", 
                   RowBox[{"Locator", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"hor", ",", 
                    RowBox[{"{", 
                    RowBox[{"pos", ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "pos"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"over", "||", "active"}], ")"}], "&&", 
                    RowBox[{"!", "dragged"}]}], ",", "Automatic", ",", 
                    "None"}], "]"}]}]}], "]"}]}], "}"}], ",", 
                 RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
                 RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{"hor", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "*", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "20"}], "}"}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "*", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "0"}], "}"}]}], "&"}]}], "]"}], "@", 
                   "size"}]}], ",", 
                 RowBox[{"AspectRatio", "\[Rule]", 
                  RowBox[{"If", "[", 
                   RowBox[{"hor", ",", 
                    RowBox[{
                    RowBox[{"1", "/", "sliderRatio"}], "/", 
                    RowBox[{"First", "@", "size"}]}], ",", 
                    RowBox[{"sliderRatio", "*", 
                    RowBox[{"Last", "@", "size"}]}]}], "]"}]}]}], "]"}], ",", 
               
               RowBox[{"Enabled", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"over", "||", "active"}], ")"}]}], ",", 
               RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
               RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
               RowBox[{"ContentPadding", "\[Rule]", "False"}]}], "]"}], ",", 
             RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{"pos", ",", "over", ",", "active", ",", "dragged"}], 
               "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{"active", "=", "True"}], ")"}]}], ",", 
             RowBox[{"\"\<MouseUp\>\"", "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{"active", "=", "False"}], ")"}]}], ",", 
             RowBox[{"\"\<MouseEntered\>\"", "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{"over", "=", 
                RowBox[{"!", 
                 RowBox[{"If", "[", 
                  RowBox[{"hor", ",", "activeVer", ",", "activeHor"}], 
                  "]"}]}]}], ")"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "The", " ", "value", " ", "of", " ", "`active`", " ", "must", 
                " ", "be", " ", "public", " ", "so", " ", "that", " ", "one", 
                " ", "slider", " ", "can", " ", "check", " ", "whether", " ", 
                "the", " ", "other", " ", "is", " ", "dragged"}], ",", 
               RowBox[{
               "not", " ", "to", " ", "pop", " ", "up", " ", "if", " ", "the",
                 " ", "other", " ", "locator", " ", "is", " ", "moved", " ", 
                "over", " ", "this", " ", 
                RowBox[{"slider", "'"}], "s", " ", 
                RowBox[{"area", "."}]}]}], "*)"}], 
             RowBox[{"\"\<MouseExited\>\"", "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{"over", "=", "False"}], ")"}]}]}], "}"}], ",", 
           RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"replot", "[", "p_", "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "temp", "}"}], ",", 
           RowBox[{"Switch", "[", 
            RowBox[{"head", ",", "Plot", ",", 
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"ReplacePart", "[", 
                RowBox[{"held", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"held", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"range", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"range", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Replace", " ", "plot", " ", "range", " ", "or", " ", "insert",
                 " ", "if", " ", "nonexistent"}], "*)"}], 
              RowBox[{"plot", "=", 
               RowBox[{"ReleaseHold", "@", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"temp", ",", "PlotRange", ",", "Infinity"}], "]"}],
                   ",", 
                  RowBox[{"temp", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{"PlotRange", ",", "_"}], "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"PlotRange", "\[Rule]", "range"}], ")"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"temp", ",", 
                    RowBox[{"PlotRange", "\[Rule]", "range"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}]}], ",", 
             
             RowBox[{
             "DensityPlot", "|", "ContourPlot", "|", "RegionPlot", "|", 
              "StreamPlot", "|", "StreamDensityPlot", "|", "VectorPlot", "|", 
              "VectorDensityPlot", "|", "LineIntegralConvolutionPlot"}], ",", 
             
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"ReplacePart", "[", 
                RowBox[{"held", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"held", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"range", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"range", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"held", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"range", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"range", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"plot", "=", 
               RowBox[{"ReleaseHold", "@", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"temp", ",", "PlotRange", ",", "Infinity"}], "]"}],
                   ",", 
                  RowBox[{"temp", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{"PlotRange", ",", "_"}], "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"PlotRange", "\[Rule]", "range"}], ")"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"temp", ",", 
                    RowBox[{"PlotRange", "\[Rule]", "range"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], ";"}], 
             ",", "_", ",", "Null"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"reset", "[", "]"}], ":=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"range", "=", 
            RowBox[{"zoomRange", "=", "defRange"}]}], ";", 
           RowBox[{"xPos", "=", 
            RowBox[{"yPos", "=", ".5"}]}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Quiet", " ", "suppresses", " ", "error", " ", "message", " ", 
           "when", " ", 
           RowBox[{"Rescale", "[", 
            RowBox[{"y", ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "x"}], "}"}]}], "]"}], " ", "where", " ", 
           "y"}], "\[NotEqual]", 
          RowBox[{
           RowBox[{"x", ".", "EuclideanDistance"}], " ", "then", " ", 
           "defaults", " ", "to", " ", "Infinity", " ", "which", " ", "is", 
           " ", 
           RowBox[{"fine", "."}]}]}], "*)"}], 
        RowBox[{
         RowBox[{"distance", "[", 
          RowBox[{"p1_", ",", "p2_", ",", 
           RowBox[{"{", 
            RowBox[{"r1_", ",", "r2_"}], "}"}]}], "]"}], ":=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"N", "@", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"p1", ",", "r1"}], "]"}], ",", 
             RowBox[{"Rescale", "[", 
              RowBox[{"p2", ",", "r2"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
       ")"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.646571682198885*^9, 3.64657169620198*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Function definitions for distributions", "Section",
 CellChangeTimes->{{3.6398403052591753`*^9, 3.639840317003191*^9}}],

Cell[TextData[{
 "From Ben\[CloseCurlyQuote]s device analysis, we know that the mismatch \
parameter comes from a log-normal distribution.  The log-normal distribution \
comes from a normal distribution.  In other words, if ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 " comes from a normal distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"X", "\[Distributed]", 
     RowBox[{"\[ScriptCapitalN]", "(", 
      RowBox[{
       SubscriptBox["\[Mu]", "n"], ",", 
       SuperscriptBox[
        SubscriptBox["\[Sigma]", "n"], "2"]}], ")"}]}], ")"}], 
   TraditionalForm]]],
 ", then ",
 Cell[BoxData[
  FormBox["Y", TraditionalForm]]],
 " is defined as a log-normal distribution according to the following \
equation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "=", 
    SuperscriptBox["\[ExponentialE]", "X"]}], TraditionalForm]]],
 ".  The log-normal statistics ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Sigma]", "l"]}], TraditionalForm]]],
 " & ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "l"], TraditionalForm]]],
 ") are related to normal\[CloseCurlyQuote]s  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Sigma]", "n"]}], TraditionalForm]]],
 " & ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "n"], TraditionalForm]]],
 ") according to the following two equations:"
}], "Text",
 CellChangeTimes->{{3.639277327035478*^9, 3.639277431116534*^9}, {
   3.6392779879706984`*^9, 3.639278014169705*^9}, {3.63928226986278*^9, 
   3.6392823159296913`*^9}, 3.6398468640987463`*^9, {3.639846924299205*^9, 
   3.6398469388067617`*^9}, {3.6398470594431477`*^9, 3.639847139941945*^9}, {
   3.639847423414013*^9, 3.6398474737914267`*^9}, {3.639847572630828*^9, 
   3.639847741943297*^9}, {3.639847838142336*^9, 3.639847875493497*^9}, {
   3.639847971691917*^9, 3.639847994750896*^9}, {3.6398490031575747`*^9, 
   3.63984901978442*^9}, 3.639849521095355*^9, {3.649189446801957*^9, 
   3.649189448148431*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]LogNormal", "[", 
    RowBox[{"\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"LogNormalDistribution", "[", 
     RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]LogNormal", "[", 
    RowBox[{"\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{"Log", "[", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}], "]"}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "l"], "\[Rule]", " ", 
   RowBox[{"\[Mu]LogNormal", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "n"], ",", 
     SubscriptBox["\[Sigma]", "n"]}], "]"}]}], "]"}], "\n", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Sigma]", "l"], "\[Rule]", " ", 
   RowBox[{"\[Sigma]LogNormal", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "n"], ",", 
     SubscriptBox["\[Sigma]", "n"]}], "]"}]}], "]"}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.638669041491548*^9, 3.6386691586559143`*^9}, {
  3.638669188957786*^9, 3.6386692389466267`*^9}, {3.6388408283599377`*^9, 
  3.638840840531711*^9}, {3.638840937083275*^9, 3.638840977039003*^9}, {
  3.638843075209982*^9, 3.6388430889838676`*^9}, {3.639277445605468*^9, 
  3.6392774484484987`*^9}, {3.639277484180571*^9, 3.6392774964136257`*^9}, {
  3.6392775431924753`*^9, 3.639277646476193*^9}, {3.6392779038306007`*^9, 
  3.639277965014453*^9}, {3.6392782614565573`*^9, 3.639278401085579*^9}, {
  3.639278456943461*^9, 3.639278480330368*^9}, {3.6398490757124777`*^9, 
  3.639849108029077*^9}, {3.639849257565898*^9, 3.639849295736497*^9}, {
  3.639849554970765*^9, 3.639849566632103*^9}, {3.64917726204885*^9, 
  3.649177265314911*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Mu]", "l"], "\[Rule]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SubscriptBox["\[Mu]", "n"], "+", 
       FractionBox[
        SubsuperscriptBox["\[Sigma]", "n", "2"], "2"]}]]}], TextForm]], 
   "InlineText"],
  Text[Subscript[$CellContext`\[Mu], $CellContext`l] -> 
   E^(Subscript[$CellContext`\[Mu], $CellContext`n] + 
     Rational[1, 2] 
      Subscript[$CellContext`\[Sigma], $CellContext`n]^2)]]], "Output",
 CellChangeTimes->{
  3.63984929690594*^9, {3.639849564033856*^9, 3.639849568196363*^9}, 
   3.639861404486896*^9, 3.639942714004016*^9, 3.6447055162631407`*^9, 
   3.645894723663775*^9, 3.6459093836796293`*^9, 3.64597690276343*^9, 
   3.645982759476829*^9, 3.6459852592296963`*^9, 3.645987650504002*^9, 
   3.645990716449874*^9, 3.6459928005107727`*^9, 3.646164483009885*^9, 
   3.646167385801979*^9, 3.646406842527172*^9, 3.6464352682984324`*^9, 
   3.646494553046002*^9, 3.646524523475379*^9, 3.646570902935*^9, 
   3.64659939803671*^9, 3.6466640019955072`*^9, 3.646665353069531*^9, 
   3.646688484360854*^9, 3.6467457398972692`*^9, 3.6467591587942867`*^9, 
   3.646764459665954*^9, 3.64702870823517*^9, 3.6470323768022327`*^9, 
   3.6470946369558773`*^9, 3.647095348831093*^9, 3.647108499857706*^9, 
   3.647111356866109*^9, 3.648818945228599*^9, 3.648837934214053*^9, 
   3.648845981815771*^9, 3.648846173782343*^9, 3.6491755573996067`*^9, 
   3.649177266131941*^9, 3.649179180895947*^9, 3.6491794067646093`*^9, 
   3.6491795748924713`*^9, 3.6491804624223347`*^9, 3.649687734885251*^9}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Sigma]", "l"], "\[Rule]", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SubscriptBox["\[Mu]", "n"], "+", 
        FractionBox[
         SubsuperscriptBox["\[Sigma]", "n", "2"], "2"]}]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         SubsuperscriptBox["\[Sigma]", "n", "2"]]}]]}]}], TextForm]], 
   "InlineText"],
  Text[Subscript[$CellContext`\[Sigma], $CellContext`l] -> 
   E^(Subscript[$CellContext`\[Mu], $CellContext`n] + 
      Rational[1, 2] Subscript[$CellContext`\[Sigma], $CellContext`n]^2) (-1 + 
      E^(Subscript[$CellContext`\[Sigma], $CellContext`n]^2))^
     Rational[1, 2]]]], "Output",
 CellChangeTimes->{
  3.63984929690594*^9, {3.639849564033856*^9, 3.639849568196363*^9}, 
   3.639861404486896*^9, 3.639942714004016*^9, 3.6447055162631407`*^9, 
   3.645894723663775*^9, 3.6459093836796293`*^9, 3.64597690276343*^9, 
   3.645982759476829*^9, 3.6459852592296963`*^9, 3.645987650504002*^9, 
   3.645990716449874*^9, 3.6459928005107727`*^9, 3.646164483009885*^9, 
   3.646167385801979*^9, 3.646406842527172*^9, 3.6464352682984324`*^9, 
   3.646494553046002*^9, 3.646524523475379*^9, 3.646570902935*^9, 
   3.64659939803671*^9, 3.6466640019955072`*^9, 3.646665353069531*^9, 
   3.646688484360854*^9, 3.6467457398972692`*^9, 3.6467591587942867`*^9, 
   3.646764459665954*^9, 3.64702870823517*^9, 3.6470323768022327`*^9, 
   3.6470946369558773`*^9, 3.647095348831093*^9, 3.647108499857706*^9, 
   3.647111356866109*^9, 3.648818945228599*^9, 3.648837934214053*^9, 
   3.648845981815771*^9, 3.648846173782343*^9, 3.6491755573996067`*^9, 
   3.649177266131941*^9, 3.649179180895947*^9, 3.6491794067646093`*^9, 
   3.6491795748924713`*^9, 3.6491804624223347`*^9, 3.649687735004158*^9}]
}, Open  ]],

Cell[TextData[{
 "When ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "n", "2"], "\[LessLess]", "1"}], 
   TraditionalForm]]],
 ", these simplify to"
}], "Text",
 CellChangeTimes->{{3.6392794064935703`*^9, 3.639279421205902*^9}, {
  3.639280321134543*^9, 3.639280333670005*^9}, {3.639280451519827*^9, 
  3.639280454079338*^9}, {3.639280507532919*^9, 3.639280525578074*^9}, {
  3.639280837811816*^9, 3.639280851249703*^9}, {3.6392808818385067`*^9, 
  3.639280910795855*^9}, {3.639281701453292*^9, 3.639281706928315*^9}, {
  3.639851663952334*^9, 3.63985166705272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]LogNormalApprox", "[", "\[Mu]n_", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"\[Mu]LogNormal", "[", 
       RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]n", "+", 
        FractionBox[
         SuperscriptBox["\[Sigma]n", "2"], "2"]}], ")"}], "\[Rule]", " ", 
      "\[Mu]n"}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]LogNormalApprox", "[", 
    RowBox[{"\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"\[Sigma]LogNormal", "[", 
       RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]n", "+", 
        FractionBox[
         SuperscriptBox["\[Sigma]n", "2"], "2"]}], ")"}], "\[Rule]", " ", 
      "\[Mu]n"}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "l"], "\[Rule]", " ", 
   RowBox[{"\[Mu]LogNormalApprox", "[", 
    SubscriptBox["\[Mu]", "n"], "]"}]}], "]"}], "\n", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Sigma]", "l"], "\[Rule]", " ", 
   RowBox[{"\[Sigma]LogNormalApprox", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "n"], ",", 
     SubscriptBox["\[Sigma]", "n"]}], "]"}]}], "]"}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.63927943291812*^9, 3.6392794516661158`*^9}, {
  3.639280336839242*^9, 3.639280352415469*^9}, {3.639280528020693*^9, 
  3.639280652556939*^9}, {3.639280857008593*^9, 3.639280868270129*^9}, {
  3.6392809465634727`*^9, 3.6392809952624598`*^9}, {3.6392811465143967`*^9, 
  3.639281150009194*^9}, {3.639281589438613*^9, 3.639281685572974*^9}, {
  3.639281719925475*^9, 3.639281808747953*^9}, {3.639281839082593*^9, 
  3.6392818557597837`*^9}, {3.639282087800102*^9, 3.639282093628846*^9}, {
  3.639851677587667*^9, 3.6398517645635033`*^9}, {3.649177256808647*^9, 
  3.649177285689289*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Mu]", "l"], "\[Rule]", 
     SuperscriptBox["\[ExponentialE]", 
      SubscriptBox["\[Mu]", "n"]]}], TextForm]], "InlineText"],
  Text[Subscript[$CellContext`\[Mu], $CellContext`l] -> 
   E^Subscript[$CellContext`\[Mu], $CellContext`n]]]], "Output",
 CellChangeTimes->{{3.639851746365367*^9, 3.639851765148573*^9}, 
   3.6398614064846973`*^9, 3.639942716341502*^9, 3.644705518460726*^9, 
   3.645894725537643*^9, 3.645909384090156*^9, 3.64597690326269*^9, 
   3.645982760159974*^9, 3.6459852599686613`*^9, 3.6459876510582237`*^9, 
   3.6459907170644913`*^9, 3.645992801112564*^9, 3.6461644835489807`*^9, 
   3.6461673863992863`*^9, 3.646406843175281*^9, 3.646435269017869*^9, 
   3.646494561060309*^9, 3.64652452348838*^9, 3.6465709106363363`*^9, 
   3.6465994056981916`*^9, 3.646664009681881*^9, 3.646665360442004*^9, 
   3.646688492106319*^9, 3.6467457472431803`*^9, 3.646759166290163*^9, 
   3.646764467328603*^9, 3.647028716249516*^9, 3.647032384673892*^9, 
   3.647094644534875*^9, 3.647095359551435*^9, 3.647108509265752*^9, 
   3.647111367570705*^9, 3.6488189568786373`*^9, 3.648837945091206*^9, 
   3.648845993304996*^9, 3.648846185539674*^9, 3.649175593556612*^9, 
   3.649177293074316*^9, 3.649179215235973*^9, 3.649179442150815*^9, 
   3.649179609902451*^9, 3.649180497288994*^9, 3.649687735211071*^9}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Sigma]", "l"], "\[Rule]", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       SubscriptBox["\[Mu]", "n"]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         SubsuperscriptBox["\[Sigma]", "n", "2"]]}]]}]}], TextForm]], 
   "InlineText"],
  Text[Subscript[$CellContext`\[Sigma], $CellContext`l] -> 
   E^Subscript[$CellContext`\[Mu], $CellContext`n] (-1 + 
      E^(Subscript[$CellContext`\[Sigma], $CellContext`n]^2))^
     Rational[1, 2]]]], "Output",
 CellChangeTimes->{{3.639851746365367*^9, 3.639851765148573*^9}, 
   3.6398614064846973`*^9, 3.639942716341502*^9, 3.644705518460726*^9, 
   3.645894725537643*^9, 3.645909384090156*^9, 3.64597690326269*^9, 
   3.645982760159974*^9, 3.6459852599686613`*^9, 3.6459876510582237`*^9, 
   3.6459907170644913`*^9, 3.645992801112564*^9, 3.6461644835489807`*^9, 
   3.6461673863992863`*^9, 3.646406843175281*^9, 3.646435269017869*^9, 
   3.646494561060309*^9, 3.64652452348838*^9, 3.6465709106363363`*^9, 
   3.6465994056981916`*^9, 3.646664009681881*^9, 3.646665360442004*^9, 
   3.646688492106319*^9, 3.6467457472431803`*^9, 3.646759166290163*^9, 
   3.646764467328603*^9, 3.647028716249516*^9, 3.647032384673892*^9, 
   3.647094644534875*^9, 3.647095359551435*^9, 3.647108509265752*^9, 
   3.647111367570705*^9, 3.6488189568786373`*^9, 3.648837945091206*^9, 
   3.648845993304996*^9, 3.648846185539674*^9, 3.649175593556612*^9, 
   3.649177293074316*^9, 3.649179215235973*^9, 3.649179442150815*^9, 
   3.649179609902451*^9, 3.649180497288994*^9, 3.649687735329545*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume we only have access to a log-normal distribution ",
 Cell[BoxData[
  FormBox["Y", TraditionalForm]]],
 ", defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "~", 
    RowBox[{"ln\[ScriptCapitalN]", "(", 
     RowBox[{
      SubscriptBox["\[Mu]", "n"], ",", 
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "n"], "2"]}], ")"}]}], TraditionalForm]]],
 ", but we don\[CloseCurlyQuote]t know the underlying normal distribution\
\[CloseCurlyQuote]s statistics ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Mu]", "n"], ",", " ", 
     SubscriptBox["\[Sigma]", "n"]}], ")"}], TraditionalForm]]],
 ".  We can get the mean and standard deviation of the distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Mu]", "l"], ",", " ", 
     SubscriptBox["\[Sigma]", "l"]}], ")"}], TraditionalForm]]],
 " and then calculate/approximate the underlying normal\[CloseCurlyQuote]s \
mean and standard deviation based on the following two equations:"
}], "Text",
 CellChangeTimes->{{3.639850312976664*^9, 3.6398504511507053`*^9}, {
  3.6398504924547358`*^9, 3.639850496014679*^9}, {3.639850555169937*^9, 
  3.639850608213583*^9}, {3.6398507384547567`*^9, 3.639850749610553*^9}, {
  3.6398515498596888`*^9, 3.639851635531848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Normal", "[", 
    RowBox[{"\[Mu]l_", ",", "\[Sigma]l_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Sigma]l", "2"], "\[Equal]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]LogNormal", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "/.", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Mu]n", "+", 
               FractionBox[
                SuperscriptBox["\[Sigma]n", "2"], "2"]}]], " ", "\[Rule]", 
             " ", "\[Mu]l"}]}], ")"}], "2"]}], ",", "\[Sigma]n"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}], "&&", 
       RowBox[{"\[Mu]l", ">", "0"}], "&&", 
       RowBox[{"\[Sigma]l", ">", "0"}], "&&", 
       RowBox[{"\[Sigma]n", ">", "0"}]}]}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]Normal", "[", 
    RowBox[{"\[Mu]l_", ",", "\[Sigma]l_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]l", "\[Equal]", 
          RowBox[{"\[Mu]LogNormal", "[", 
           RowBox[{"\[Mu]n", ",", 
            RowBox[{"\[Sigma]Normal", "[", 
             RowBox[{"\[Mu]l", ",", "\[Sigma]l"}], "]"}]}], "]"}]}], "&&", 
         RowBox[{"\[Mu]l", ">", "0"}]}], ",", "\[Mu]n"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}], "&&", 
       RowBox[{"\[Mu]l", ">", "0"}], "&&", 
       RowBox[{"\[Sigma]l", ">", "0"}]}]}], "]"}], "\[LeftDoubleBracket]", 
    "2", "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "n"], "\[Rule]", " ", 
   RowBox[{"\[Mu]Normal", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "l"], ",", 
     SubscriptBox["\[Sigma]", "l"]}], "]"}]}], "]"}], "\n", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Sigma]", "n"], "\[Rule]", " ", 
   RowBox[{"\[Sigma]Normal", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "l"], ",", 
     SubscriptBox["\[Sigma]", "l"]}], "]"}]}], "]"}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.639277665999312*^9, 3.639277861303575*^9}, {
  3.639278080924713*^9, 3.639278107306633*^9}, {3.639278139309194*^9, 
  3.639278169753366*^9}, {3.6392785082707453`*^9, 3.6392785905480423`*^9}, {
  3.639278641008483*^9, 3.639278673774889*^9}, {3.63927871156111*^9, 
  3.63927886331848*^9}, {3.6392789062048073`*^9, 3.639278924947418*^9}, {
  3.639279253350355*^9, 3.639279285221961*^9}, {3.6392793509118843`*^9, 
  3.639279355829028*^9}, {3.6398493159670553`*^9, 3.639849422381221*^9}, {
  3.639849594486272*^9, 3.639849648656499*^9}, {3.6491772508995123`*^9, 
  3.6491772546925983`*^9}, {3.649177287029998*^9, 3.649177287646472*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Mu]", "n"], "\[Rule]", 
     RowBox[{"Log", "[", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["#1", "2"]}], " ", 
           SubsuperscriptBox["\[Mu]", "l", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubsuperscriptBox["\[Mu]", "l", "2"], "+", 
             SubsuperscriptBox["\[Sigma]", "l", "2"]}], ")"}]}]}], "&"}], ",",
         "4"}], "]"}], "]"}]}], TextForm]], "InlineText"],
  Text[Subscript[$CellContext`\[Mu], $CellContext`n] -> Log[
     Root[-#^2 
       Subscript[$CellContext`\[Mu], $CellContext`l]^4 + #^4 (
        Subscript[$CellContext`\[Mu], $CellContext`l]^2 + 
        Subscript[$CellContext`\[Sigma], $CellContext`l]^2)& , 
      4]]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeLim7JWZXKvHc/9VwsA0U9n7hauAdLiOwuPLwbS/55s
i92p/trRhXU+xz/N144G8nqGrFqvHeWuiGiqAekT/yxYNYH0l0s7bLWAtJpc
f4Y2kNZZefm5DpBW6Qp9owuky+K3HGgE0lUz6rSbgXTQ0yniP4D07WVXfrBq
v3Z8dNb5rRKQnhA4q9cQSG/zeWHiAaKvbJMLA9Isk8NWlQJpbwWB4DIgHZ/f
NK8RSFtEZE+eC6Sdll5RWAKkpTjLty8D0um1m/ep67x2jBN16NQE0iwbV753
B9JvRMI8PYC0gOfGLX5A2iueRyoASO/+d+/RRP3Xjqe2u2nMBtIFL3LE5gNp
Nr98PRDNEW7I7mAA9I+20x0QraB59bQjkP531eAFiI76YPQXRH8JlcxxAtKz
3ETErQxfOwIAQLOf7Q==
  "]],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Sigma]", "n"], "\[Rule]", 
     SqrtBox[
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["\[Mu]", "l", "2"], "+", 
         SubsuperscriptBox["\[Sigma]", "l", "2"]}], 
        SubsuperscriptBox["\[Mu]", "l", "2"]], "]"}]]}], TextForm]], 
   "InlineText"],
  Text[Subscript[$CellContext`\[Sigma], $CellContext`n] -> 
   Log[Subscript[$CellContext`\[Mu], $CellContext`l]^(-2) (
       Subscript[$CellContext`\[Mu], $CellContext`l]^2 + 
       Subscript[$CellContext`\[Sigma], $CellContext`l]^2)]^
    Rational[1, 2]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeLim7JWZXKvHc/9VwsA0U9n7hauAdLiOwuPLwbS/55s
i92p/trRhXU+xz/N144G8nqGrFqvHeWuiGiqAekT/yxYNYH0l0s7bLWAtJpc
f4Y2kNZZefm5DpBW6Qp9owuky+K3HGgE0lUz6rSbgXTQ0yniP4D07WVXfrBq
v3Z8dNb5rRKQnhA4q9cQSG/zeWHiAaKvbJMLA9Isk8NWlQJpbwWB4DIgHZ/f
NK8RSFtEZE+eC6Sdll5RWAKkpTjLty8D0um1m/ep67x2jBN16NQE0iwbV753
B9JvRMI8PYC0gOfGLX5A2iueRyoASO/+d+/RRP3Xjqe2u2nMBtIFL3LE5gNp
Nr98PRDNEW7I7mAA9I+20x0QraB59bQjkP531eAFiI76YPQXRH8JlcxxAtKW
phLiVoavHQE9TJ9/
  "]]
}, Open  ]],

Cell[TextData[{
 "Similar to the LogNormal analysis above, for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "l", "2"], "\[LessLess]", "1"}], 
   TraditionalForm]]],
 ", the equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "n"], TraditionalForm]]],
 " simplifes as written below.  For ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "n"], TraditionalForm]]],
 ", we don\[CloseCurlyQuote]t simplify it based on this assumption, because \
if we did ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "n"], TraditionalForm]]],
 " would always equal 0, which is obviously incorrect."
}], "Text",
 CellChangeTimes->{{3.6392794064935703`*^9, 3.639279421205902*^9}, {
  3.639280321134543*^9, 3.639280333670005*^9}, {3.639280451519827*^9, 
  3.639280454079338*^9}, {3.639280507532919*^9, 3.639280525578074*^9}, {
  3.639280837811816*^9, 3.639280851249703*^9}, {3.6392808818385067`*^9, 
  3.639280910795855*^9}, {3.6392810287686567`*^9, 3.639281073329151*^9}, {
  3.6392819259505463`*^9, 3.639281926510743*^9}, {3.639851870231304*^9, 
  3.639851894229025*^9}, {3.639851968462714*^9, 3.639852017120428*^9}, {
  3.645896296452631*^9, 3.645896304570064*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]NormalApprox", "[", "\[Mu]l_", "]"}], "=", 
   RowBox[{"\[Mu]n", "/.", 
    RowBox[{
     RowBox[{"Refine", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"\[Mu]l", "\[Equal]", 
          RowBox[{"\[Mu]LogNormalApprox", "[", "\[Mu]n", "]"}]}], ",", 
         "\[Mu]n"}], "]"}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}]}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "n"], "\[Rule]", " ", 
   RowBox[{"\[Mu]NormalApprox", "[", 
    SubscriptBox["\[Mu]", "l"], "]"}]}], "]"}], "\n", 
 RowBox[{"Text", "[", 
  RowBox[{
   SubscriptBox["\[Sigma]", "n"], "\[Rule]", " ", 
   RowBox[{"\[Sigma]Normal", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "l"], ",", 
     SubscriptBox["\[Sigma]", "l"]}], "]"}]}], "]"}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{
  3.639281046729466*^9, {3.639281111002026*^9, 3.639281117622232*^9}, {
   3.6392811573886003`*^9, 3.639281159588361*^9}, {3.639281251257927*^9, 
   3.6392812691226587`*^9}, {3.6392814061250963`*^9, 3.63928140658963*^9}, {
   3.639281484031258*^9, 3.6392815053995934`*^9}, {3.63928204303419*^9, 
   3.639282068824505*^9}, {3.639282120564455*^9, 3.639282131669071*^9}, {
   3.639282179435074*^9, 3.639282211631159*^9}, {3.639851791335947*^9, 
   3.6398518361659718`*^9}, {3.6491771828078127`*^9, 3.6491772458759937`*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Mu]", "n"], "\[Rule]", 
     RowBox[{"Log", "[", 
      SubscriptBox["\[Mu]", "l"], "]"}]}], TextForm]], "InlineText"],
  Text[Subscript[$CellContext`\[Mu], $CellContext`n] -> Log[
     Subscript[$CellContext`\[Mu], $CellContext`l]]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBWKh5mfp5XKvHY3aHwnXAOmUtcuPLwbS56Qex+5Uf+1Y
ZHuc45/ma8dX950MWbVeO+qrqGmqAemUXF9WTSDNxHXFVgtIP0hfmqENpJ9L
v36uA6TbFHLe6AJpccbzBxqBdO6ESdrNQLqrYbX4DyC90fjjD1bt147+twLe
KQFp97fzeg2B9EnZO6YeQJpp/QL5MCB9pNlzdSmQPpHNHFIGpBMOlM5vBNLh
nElT5gLp+1wnFZcA6TO5hTuWAemguXv3q+u8djw/yaFLE0i38P/84A6ko3NK
vDyAtFXR4q1+QDrpG6t0AJCui///eKL+a8dF71w1ZwNpG/la8flA2rygWh9E
L3H9xeFg8Nrxz47yMyA6a8WvCyD69PPF90D0DstFZx2B9LcHDK9ANPNv4f8g
es7SF7lOQNo6QVncyvC1IwDAkakq
  "]],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    RowBox[{
     SubscriptBox["\[Sigma]", "n"], "\[Rule]", 
     SqrtBox[
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["\[Mu]", "l", "2"], "+", 
         SubsuperscriptBox["\[Sigma]", "l", "2"]}], 
        SubsuperscriptBox["\[Mu]", "l", "2"]], "]"}]]}], TextForm]], 
   "InlineText"],
  Text[Subscript[$CellContext`\[Sigma], $CellContext`n] -> 
   Log[Subscript[$CellContext`\[Mu], $CellContext`l]^(-2) (
       Subscript[$CellContext`\[Mu], $CellContext`l]^2 + 
       Subscript[$CellContext`\[Sigma], $CellContext`l]^2)]^
    Rational[1, 2]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBWKh5mfp5XKvHY3aHwnXAOmUtcuPLwbS56Qex+5Uf+1Y
ZHuc45/ma8dX950MWbVeO+qrqGmqAemUXF9WTSDNxHXFVgtIP0hfmqENpJ9L
v36uA6TbFHLe6AJpccbzBxqBdO6ESdrNQLqrYbX4DyC90fjjD1bt147+twLe
KQFp97fzeg2B9EnZO6YeQJpp/QL5MCB9pNlzdSmQPpHNHFIGpBMOlM5vBNLh
nElT5gLp+1wnFZcA6TO5hTuWAemguXv3q+u8djw/yaFLE0i38P/84A6ko3NK
vDyAtFXR4q1+QDrpG6t0AJCui///eKL+a8dF71w1ZwNpG/la8flA2rygWh9E
L3H9xeFg8Nrxz47yMyA6a8WvCyD69PPF90D0DstFZx2B9LcHDK9ANPNv4f8g
es7SF7lOQPpIhrq4leFrRwDFKam/
  "]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temporal ADC", "Chapter",
 CellChangeTimes->{{3.649104969439454*^9, 3.649104971737989*^9}}],

Cell["\<\
It was determined that the Gray-code Algorithmic ADC (GA-ADC) requires too \
many transistors that had to be sized too large to be a feasible solution \
that would work with high probability.  In other words, the GA-ADC required \
large transistors to keep the mismatch to a minimum to ensure that there \
wouldn\[CloseCurlyQuote]t be any dropped codes.  As such, Kwabena recommended \
looking at a time-based ADC which takes input current, converts it to some \
form of time (or frequency) and then uses that time to adjust the duration of \
a series of inverters connected to a counter.  This change in the time \
required for a signal to propogate through the series of inverters can be \
used to decode the level of the current when compared to a reference current \
related to 1 LSB\[CloseCurlyQuote]s worth of current.

The goal is for us to get an ADC that has a sampling time of, at most, \
20\[Mu]s (the same as a 50kHz sampling frequency); we may want the ADC to be \
able to sample more frequently than once every 20\[Mu]s.  This means that we\
\[CloseCurlyQuote]ll be able to take at least 50 samples per spike for a \
spike train with a maximum 1kHz firing rate. \
\>", "Text",
 CellChangeTimes->{{3.64910460806465*^9, 3.649104700762388*^9}, 
   3.649104983644046*^9, {3.649105025328198*^9, 3.6491051522988863`*^9}, {
   3.649105214675462*^9, 3.6491052724986*^9}, {3.649105383869766*^9, 
   3.649105645343276*^9}}],

Cell[CellGroupData[{

Cell["Background", "Subchapter",
 CellChangeTimes->{{3.649190115116666*^9, 3.649190118680793*^9}}],

Cell[TextData[{
 "The image below shows the ring oscillator part of the AD-TDC \
(Analog-to-Digital Time to Digital Converter).  In this naive current-based \
implementation, the input current, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "in"], TraditionalForm]]],
 ", will determine how much current ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Px"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Nx"], TraditionalForm]]],
 " will pull.  Based on the state of the inner inverter, the wire\
\[CloseCurlyQuote]s capacitance will either be charging at a rate \
proportional to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Px"], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Nx"], TraditionalForm]]],
 ".  As an example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "0"], "=", "0"}], TraditionalForm]]],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "1"], "=", "1"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "2"], "=", "0"}], TraditionalForm]]],
 ", in steady state.  As such, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["PI", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["NI", "2"], TraditionalForm]]],
 " would both be on and active.  Therefore, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "P1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "N2"], TraditionalForm]]],
 " would determine the charging and discharging rates of the capacitance on \
nets ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "2"], TraditionalForm]]],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.649188190564691*^9, 3.649188330852579*^9}, {
  3.64918855227227*^9, 3.649188704466689*^9}, {3.6496874418949003`*^9, 
  3.649687459587941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\</home/noza/work/Schematic \
Pictures/CurrentBasedRingOscillator.png\>\"", "]"}], ",", "600"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.649188106536215*^9, 3.649188110235339*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQVcVNn7h1W6uxslbBEFEVvX7lZM7F4Ve127O9auFbGVtbtbTEAUCxAQ
kU5F3T3/78vO7H+c3yAzCAxx9vN5Fpzizn3Pfd/n3HvuOXbe4zoPLVemTJmJ
qvhf54FTGk+YMHBaF0X8o8k0nyHeCvjFqWyZMj3xGnqQMcYpxXz79q1sbGys
+oEDB6o2bdp0eq9evealpKRoynu7OMWbf/75R+7bwMl77L58+VLu69evZeW9
LRwO2mG5tLQ0xb///lvu28Lh5IYwf3748EHr8OHDtbt27TrHxMTkgZKSUlL3
7t194Vda8t5GTvGEfD05OVn16dOnJklJScry3h6O9FBe+PTpk2JwcLDp6tWr
G1+4cMEKNY07FqfQobaYlZVVLiIiQm/Hjh0NVq1a1So9PZ3nE06Rhdrs58+f
y4WGhuquX7++fqdOnVbAq4IVFRXTVFRUEh0dHa/Nnj27T0ZGBm/HHJmgcx3R
0dEa+/btqzFo0KBp9evX3/jw4UNrfh6r6EMOBRdWun37ttX8+fN7u7q6HtbT
03u8dOnSxvwcFqcwoXyB+qPw6NEjo4ULF7Zu2rTpVgMDg5c9evTYxK+rcIoi
Aq9SgFcZrly5soWHh8cmLS2tVwoKChnwqo/Ozs5nfXx8ht25c6dCcnKyCq+J
HGkQngeFV2n7+fnVadeu3UJDQ8PH8PUUKyurm/fv37fnbanoIvAqlUuXLpUf
OnToEHt7+zNqamofKS8YGRk92rp1qzudj5T3dnJKPgKvUoJXmc+cObNr1apV
96ItRlJb1NTUjBw9evT09PR0VXlvJ4cjhNpsamqq4uPHj83gVZ3hVb7wqghq
sxoaGu/hVUfgVX3u3r1rnZaWpozX81zKyRXBdSSF4OBg/XXr1jVp27btGnjV
c7SrdPh6gqWl5eXB+C88PFyL+1XRg85JJSQkqMGrKsGrxtva2l5VUlJKLFeu
XLqenl7IL7/8snr79u0NaVwmjx+nICHHR1tUvn37ti28agC86hi8KkZQo8Jc
XV13LViwoD2dG+DXqjlFAfIkeJXyjRs3rMeOHdsXHnUUfYCYsmXLfkUOzaDz
/6tWreoUEBBgSuMGeQ7lSIPI+BzjhQsXtkU72oF29ZZyIXJiLHLjyenTpw9C
3baPj49X5uNRixbkVZGRkZq7du2q2bVr15k2Njb34FUpINXc3PxRixYt5m/b
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
c83Z2fnh3r17W2J/l0PfX79nz557EdcwxOStII5SYWVl9UZdXT25TJkyf8Ov
jsGv9OT9HTnFA/St9Rs1anRESUkpbdiwYSsyMzNVP3/+rDJhwoRFtFYtrQ0F
PsvIF7TFf+BXEfCretyvOMUN8qslS5b00NHRiUFdzKDaCNKkRVVVNQPHwd8q
KioZK1asGEF+lZiYqIc+ywkFBYXPPXr0WJWamirTeiCcggd1WBl9xOmIXWaF
ChWuPXv2zJLW1v7tt986IB8m4PF/4NyfBG1CFjL19fXj4dqDuF8VLA8ePKgJ
JwqHEyVu2bKlK/nVx48fjRo3bnyZ4idYIzQZJEkJvTaVjmtHR8eDjx8/5uev
OFJBfoV+2jG0uayhQ4euFvrV+PHjF+GxL6gPSXD4W+i7XZGBm9TXq1Klyqmj
R49W537FKW5Qm0U/tcLmzZsHbty4cRgYDAZJy++//z7TyMiI1h1MhV8NFPOr
LO5XRRMRv/ok5ldt4Ffx8ObEIUOGLN2wYcMwQbuQluGo9YPxeZXoWrG8v2dJ
5gd+dYmu8Xl6ev61Zs2afohJLynpTdd1KQf4+vo2j4uL4+edOVKRg18pw69m
kedXrVr17qVLl1yCgoIsZMAa2COX2CQlJanK+ztyOHlBOGYqL6D9V0F9fgW/
SoZf9cnNr0TXZpBlrRBOnuIqupbRd/v6B37Vktbt1tbWfrd///4GNIYiL+2C
u1X+ILoWlfjx8gO/ukjnjr29vRfSsUePy4AwhuX4sckRQm2P5mKIiYnRAfof
PnzQpnU1hXPc/sCvfie/cnNzu0brSsv7e3A4xQk6TyGNX9HxSXPUXb9+3XHd
unWNZ82a1Xb9+vX179+/b0vrjfJzv/kH3ctDuTAgIMDS19fXY/bs2a2XLFnS
BP1HZ+RBLcqJ0vjVwYMH+ZgHOUBeg/qkEBISYoT4uSF+nXG8dPvjjz8aUExp
fSmKcW5+NWjQoAUZGRn8HBQnzwjm0FPfuXOnm5eX1+R69ert9vT09KcxmyNH
jhxz5MiRKnS/H3yL+xWHk89I41fwKq0DBw5UwWMLLSwsAjQ0NGLoGhR+Rjk4
OFwbNWrURNQNG6rv8v4+xR06T3Xr1i1T1NZh9vb253V0dCJo7g1VVdUYc3Pz
R507d15x7NixmuHh4RotWrTgflXEoHoWERGhOX/+/LY1a9bcr6ur+xrxS0BM
6D71d46OjmfHjBkz4NGjR4b37t1z5X7FKSjo2H/x4oWBt7f3OCMjo0C0qXQa
c07XnuknvCnV1NT0zowZM/oGBQXZNGjQgPsVh5OP5OZX7du3X7dy5cpmNjY2
5/HvDBybn1EPPmpqalLdT6C5dmjso7u7++7z58875feaH5Ioqdc96LzUtWvX
rD08PNaTI1EOpH2LfR2ppqYWS/c6IwaZdnZ21+mcFvLhLO5XRYvIyEiNwYMH
D9PS0npJ91xRDUP8wsFbmgtIENOYZs2azYdTtUB/hfsVp0BAW9Ts3bv3JOSO
GMrThoaGodWrV9+PvLGhYsWK/mij4dQe9fT03gwZMuTXatWqneV+xeHkHz/y
K+rnODg4HINbXaT7bXE8RjZp0mTNqlWr2u/Zs6fe9OnTe9SpU2cP1Q0cg+l4
bn1gYKBhQfkP+UNYWJju/fv3acykJbZTtSS5VkREhHaHDh3mYV8mY5+mIt8d
hS/18/Pza7h8+XKEpO0yxOAt1W0TE5ObBgYGe8uUKfOZ+1XRAPVIAcdGax0d
nVCqZ3Cn+/379x+7c+dOTxwvbhMnTuzn7Ox8GvHNQHw/urq6bqP7frlfcfIb
6udu27atKdzpJbUltLVjaIMNX716pQdPUg8ODjZaunRpO2tr6xuUT1RVVV+i
TdJruV9xOPnEj/wKx9031IkPdI5EQ0PjA+rD6Ldv3+rRWF2q258+fVIICAiw
aNGixVIcgzTfQ+Ts2bPb0NgTGh+dR8pIgmqXv79/jXr16m22s7N7gP7X5V9/
/XUk+mh6tC05vU8OyPzdCNqnW7duraerq0u1ORPfc+udO3fssS8V6fvR8+Rf
Y8aM6a+pqfmOvArEgm85+dWBAwfqCcY55zUWHCmhGIWGhhp5eHjsJbcyMzO7
D69qRGNb6LwkPU/zYl+8eLFy9erV/ek1qGV0PivrR36F96jK+7vlhmg+oXGa
yAvlcoKuf4u+XpbPx+/ZfaycPhs5opxof+IfQd7Ac0o5IXq+neKEx5SBShFC
NS9ER0fro6+2hq43oH/8+Pjx4+7Ydwqi+4bma1+2bFkb9NnCKI8AapNfJflV
rVq1brx588amCOyPn4a+F+93cgqDXPzqH5qrkDzLxcXlAF5r8o/Y+SLKSRcu
XKiIY/geHcvu7u6b/fz8ap44caJKLtQAtUBtEVxBZVBRnI0bN7pXrlz5IF0j
oznraLvgEFFDhgwZAe+S+B45UAm4CL6HOC45fTfi8OHDVVu2bLmIrv8ZGho+
Q1+zNjmV6L6mfY8cp9ekSZPNdG5RsB/+EfOrVuRXqNkxU6dO7Y+8Wg2fXzWP
0HbXBZ5ypq6grdQoYChG7qCBCPUFj0mK6X9gP9eaMmVKT7hvGPU1hg0b9iut
KSJ+vFGfZM2aNW1R06IRO0ZI8ivyr+bNm+9Eu6iHz3cripw8edKN5oahnEHf
jWrWlStXzCdMmNAa/YCO4owdO7YDcoOLsM6TO718+bL8qVOnmuPzWoiDz28W
HBxsI6yFSUlJKvCB+vic7vi8HuJMnz69HT7vv/PncXFxSgsXLmyF5yaDqeKg
f/YrcpczfT7db3Dz5k1TbPtEPLegiLAYrASrZKVPnz7rkEdeUTvq2LHjivj4
eA1J+f/58+cG8P2DAr9iYn5F818toGuGJiYm7wYOHPgHPntJcWfGjBmTkUct
xGsZh5PfSOFXDMdX5vDhw33ofl5JnxETE6PdoEGD7Xj9VxyfSTo6Os/19PSe
5UIoeC3GK8FzQeKgbr1ArsgQ1iQBfysrK8fo6uoGS3qPHAgWfK9XEniZ03cj
6DvQNSOa67VOnTrH3759ayBpXyPnKU6cOHEAYpIi2AfiftVeML/oF1qPEp/9
/Ceg7abPiJAz4YL2EVoIhIFIECWAfn+bQ0y/A54URccA9ns0+gP16VyOePwo
p58/f94OtS9A4MeS/OqyYM7fJLSLMMHfL3IYGBi8HjBgwLrU1NTs2k3nglav
Xt0B3/8t5QFx6J6YQYMGrU1PT8+e7wX9B6WlS5dONDY2jsbnxYmDfRSBPsJw
tPnsvBMZGWmI/ttBtP1EfF6yOGZmZiFXr151F57zQg3VgDtswHNp1G8RR01N
7T3+fmfabuz7MohBNXjvc1rDoIhA4/e+5AV8P+p//U3nwnv37j0WuVtRUj5J
Tk5WxfMrBP01SX5F1ya+UnsUbI+898lPY2lpGQKXdhE/98rh5DfS+BXqfgby
3Bha407SZ8TGxmo2atRoI9UW4X0pUpBO41AkkCbp9ZQjBestiPrVP5Q/pPx7
hUGa4DtkSiDH7yb4fqmCNSj+btas2RE4q8S5t6nvP3ny5F54T3IOfpU9f7sg
t9I+TvkJhN+pKEDbk1wICL+3KPR4Um5gf6fRfqf7auFXHj/wKxu4w91c/Oof
ui4v+OzEogitedqjR48dKSkpmvTdyFPwvVvBcx7r6+u/FQff+fXo0aMX07qL
9Hqam23ZsmXjTE1N6flIcYyMjF4i7wyhPgW9nq55NWnSZAu87gWeDxXH0dHx
mmjdfPfunRqOpWl47ia4Iw7+7jn4YBPabjp/5e/vb488ttvDw+NCEeEyuJkX
atSocRv+GE/XFLp37z6HPEpSPqExB/Xq1dtB1yhy8Kvs+dvRv010dXWl7TlT
3EFt2/H06dMK3K84BY00fkVeg5y/MTw8XEf8nCr9OzAw0Kpq1aoXqA9UpUqV
s8ihQ3FcDsyFkWCiGPTfcDBEnBH4r2LFigfJQ4R1icbbd+rUac6vv/76P6+X
E8PABDBJAhMEzw+SxKhRo4bi+x0mx7Kysrpz5coVB8r54vGKj49X79mz5zwa
n5ODX2XP3061r02bNnOxb/ri8/vkkYGCbZY31J7oe/QsBOjveItA+6A36P4j
sJ+7d+jQYTKdEyEfwzEwmMa3iMePrvlu2rSpMd279YPrg5cEx9IhfE5XfH6H
osiECRPa79q1q5aw30W5ICwsTP/cuXOuZ86ccZeAG3KFPX1PwetpjXLrs2fP
euK5+hKoGxISYiG8Pkh/59atW+XxeA3gIs6lS5doLicNkX1d9tGjR7p4zhxY
iIO/a/bmzRs1YU6D9ymiX2Pw/v174yKCCTDLC0+ePKnQoEGDPXR90MnJ6fLF
ixcdhHOJirbF/fv3u9HcDdQvoGuEEsZfZc/f7uLicvvhw4dV8NlGxR2a64vW
r5Z37eWUfHLxKzrmyGe+6ujovFy4cGEbGq8rzEd0vEZFRWniGByOGhFH8zWM
GzeuP42ToHGluaBI5/0loCiJ9PR0pdOnT5fHds2he+iQN761aNHiMPK5IeXd
nN4nByR9J9HvJnF/oBYroy/fAf3E9/CjpN69e09G7dER5kTa57QPtm7dWp/O
D1BMAF0v/Tun8e1+fn4NaHy8FLHILU5FgZ/5DvlBuR9B46tRyy0qVapEx80X
e3v7iwcPHqxOY9r/EdzDQPG5ffu2taen53Y6r4DXpVMccxrfPmDAgIU4FtVy
+9vyRHy8uqCt/mi8uvhr8/X1ErYlV+SdgwsCOmbmz5/fncZh0jnY1q1br4Z/
lk9OTlZJS0ujHK+GfFrNzc3NTzDvC83/EkXXFfn9gxxO/pDb/AyGhobXUKuf
0XkVU1PTAPTTB969e9cxNDTU4tixY1V79uw5Ce71mvpJ1apVO4b6YSPpvEt+
QK6Bv2tcv379vZQH+vbtuxv1S+K4zeLIixcvTGm+C5oLg+YX69ix40zkwOr4
zubYr/bw2x62trZXqDarqqq+Qcwu0D0/fH6GogGNT5w8eXJvxC6KrlsjLqcQ
j8737t2rEBgYaLd27dqmqFM7EZ9kAg52VE1N7SOfn4GT35A3BgUFGcHl19PY
CnIsJyen88jX0/r06TOoc+fOc5BLbtE4NOSS+IYNG65Ee7zM52fgcPKP3OYX
/eWXXzYOHDhwMOr1C+qX07FoZ2f3EP30KyYmJkE0XoXqPR67Rfej5zRGK7+I
j4/XbtGixa6S6FfkR6izbpaWlnT/GI29STMzM3uGfX2J7s9EHaY+5hca8zx4
8OBfa9WqtaCkzC/6zz/ZlCXkvS15/w7Zc7froT7NhGPFUJ8E/vQBx8YjR0fH
AC0trXd0rCgrKyc3b9586+bNmztaWFhElBS/EsavOMewJEHnFi9cuFC+bt26
G9DGPlDuIO+ncZmUX6hPjDwR0b1793lXrlypjH7rcUU+vyiHk2/k5lc49lY9
f/7ccOHChe2dnZ1P0jxYON7oGP2MOp5BczHR3O1//vlnXbiOckFvb0n2KyI1
NVVxz549rjT/FXkU9jHlws/4vp/gtnEODg6XZ86c2RtxM8R+mFES/Orvv1nZ
ly+ZzblzrMGtW6xGZiYrNk4hDl2jgmMZoC4NsbW1vY7jKg7xyCTgVUnGxsaP
cUzNePDggU1JWh8nK4uVu3+flT97ljW4cYNVychgEu815hQu5FhBQUHGc+fO
7d2wYUM/9N3uo88WDK+/A+/aunjx4vbh4eG6NO6spKw/+O0bKxsXx5RjYphK
aipToL6bvLeJUzqRZv3BlJQUNRpHEhAQYLV+/fp2w4YNm9S6deu5U6ZMGbdh
w4amISEhxjQWozC2t6T7FUHjTmndMF9f34aTJk0a27x583k9e/acjlzY9dat
W/ZpaWnK2A8lZn1n1GbF+fPZWBMT9rZhQ3bk3TtmIu9t+hnoPBaNc7l8+XIF
xKzztGnTJvj4+EyaP3++15EjR6p++PBBneJSktZ3Rj1Tbd+ezTQwYOEeHmzn
mzdMT97bxPkXao90XeHdu3d6d+/eLY8cUunOnTu2YWFh2oK5oOke8BKzvjO8
SnfAADamQQM2d9Mm5vHlC+Pr4nLkgjR+lZqamn0/NR2HdC8zjTOh+k7HLP27
MMeIlga/EkLjzWh8OmquSlJSkhJ5l3BfJyQklCS/Upo+nU1XUmKZNWqwq+Hh
zFze25Qf0DhEihmNNaY44ncF0XiUJL+KjWVqjRqxpWXLss+VKrG/Xr5kEudv
48iXnMb1lyS/Qv6wqlmT3VNWZsnTprER1H+T9zZxSiey+FVRoDT51Y8oin5F
1/kIWcfflFS/yo2i5ld0HUUkhjK9l/tV8SY3v3J1db3+4sULK5pzREaUCUn3
mRYUyB/WLi7sIfJJOvxqFPcrTl6hfgicQys0NLQ82r8DsAO20nLy5MlfrK2t
w+FXKfCrftyvigc/8Kvs9XFonofVq1d3DQkJoTjbSAm9tgK1paSkJG1Zticl
hakePcpcd+1iDZ48YdZUo6V9L/criX6V1bVr1w2PHz+uLDiupcUROL1+/dqC
1uKRdlvIp8LCmLqvL3NDDOs/eMDMZIkh96vizQ/8itabz9LX13/Trl27WagH
42VgEvitX79+Y69du2Ypy3WOr1+ZQkYGU6WxmLK0Q4L7FSe/oOtzmzZtalOl
SpU7Tk5OQeABuC8tdnZ2gcrKyp/gV+nwq2Hcr4oHP/CrdjS/KN0bZG5u/gwx
visD1CYCq1evHrBv3z6q91LX59evmYWrKzuhq8veLF7MRn75In1O4371v/OL
0txzOjo6Hx0dHYMFx7W0UMxD8Bkb0CakdmTUsDL+/qy8qSm7pKPDQn//nfWW
pS5xvyreCPzqL7jUZ7H525fQ/O00v7vgnsNMGfmspaX1evfu3XWlPZeOtlju
6lVWe9gwttDHh01CPpBpPCb3K05+QWM6FixY0JvuTaL51un4gCtlygLeS8dA
0urVq4V+pdupU6cjampqKV5eXku5XxU9yK/Qn5xM13UrVap0gea5Jr+aNWtW
Ow0NjRiKKZ77JEs7gJfRnJd/I+4ZGzduHCaLX716xaxRV+8qK7NP8+axydyv
cufhw4c1ypcvH6Krqxu5ffv2juRXcXFxhs2bNz8riEkGSJMWxDxNsI7c39bW
1sfw+VKPMSe/OnyYOWlrsyDEIRV1aTD3q9ID2p12165dl9nY2NyYPHny+E+f
PikjnyjPnj17Ah57YmFh8RTcA3elRVtb+5VgPc4Iur9cWr/69o0pbNnC+mlq
skRbW/b04UNWUZbvwv2Kk1/Q+Fn4VReaOx0kdu/efc2iRYsmLF68eLyU0Gsn
L1u2bPz9+/dd6BjAsaVy+PDhDkuXLh177NixhkVpLQHuV/9C134OHjzovmTJ
kl83b97cA/lRi8bDX79+3YHiRjEFPmCitIwdO3apnp5eLPwqDX7lzf2qYImJ
iTHcsGFD7xUrVgx48uSJPc3tkJGRob53795uiCsdl2PAMGmZM2fOmCpVqtDa
hV/hV3/BrySuYSkJ7lelG6oj6KOZoAbQfYUGVAcEc40Y47GK9+7dcwb2wE4a
aB2jkSNHjqF5dGm9b/iVqyx+tXkzG6CuztKsrdkz+FUlWb4L9ytOfiHwq3Zw
qzi04/AdO3bUgw8pff36VVFW0P7/u4+Vais9JlwrrKjA/er/odgIYqcgHNtA
OSwvsScCAgKqoi4/h1+lwq/6c78qWKh+UewI0dojPPaEsZWWhIQErU6dOq2j
a8Pcrzh5QdIYKWnWGBKHzqXTehPU50ddegO/qsn9ilPcEPcrtGOP4nBPfl7h
flVwPHr0qJKNjU0I96viSUpKinrnzp3Xcr/iyBuqS9yvOMUd7lfcr/KLouhX
nz+zcmlpTEkERZorXHz+AJoTAnm5XEYGU6TX4TUl9hjIiaLqV/gcBdEYpqcz
xa9fv48h/U5xxXMqeI06UEXs+dzbxRTuV5ySAPcr7lf5RVHzK6rBfn6ser9+
bJyXF/MBE/H76CVLWPuAAGaFv5G9fXAq5XPnmDNycpthw9iI/v3ZCH9/Zok8
Lfd9WpgURb8i5z10iLkjbuOFMRwyhI3cuJG1vnuXmZFT0WseP2aWy5axTojd
zL592RqwYM4c1jEkhBnQeify3rcc2SiKfkX5IiKCmSJX2QqwAWbR0Uwdz/E2
xvkfuF9xv8ovippfff7MFH182CBVVRZpasqu2Noyfysrdl5fnwXVqcMOXrzI
qpKDBQcz+1q12GFDQ/ZYU5O9xuvfzJ/P6pa2nFkU/QoxUPr9d+ajpsaiTEzY
RcTwL9TMS4hhMGK269IlViE5makNGsQmmZuzW4j/kbZt2XZHR3YG2/IMv88J
DWW6/DxW8aIo+lVkJDPo0IH9UaUKu43nL4NLVauyk82ascV79rDq6KdJne84
pQPuV9yv8oui6FcTJ7Kh8KaXGzeytsizJjduMNuxY9ko1N6wrl3ZvIQEphYW
xvRXrGAdV61iTVu2ZL+RX2Eb6nG/KjJ+NQU+9QzxaSKIYfk+fdgU1M8I/JwQ
Hc008Fy97duZR0gIM46LY1pXrjC7Bg3YH3hfyL59rD4/h1W8KIp+9eYNM4VP
nXVyYjfQ/xqydCkb2K0bW0Rts2JFduTWLWZN4wwEZI85oLULBedYefsrhXC/
4n6VX8jiV5R/KOcIzyvk5FdUt3PLTbn5lakpe3HhAqsnzHtPnjBbZ2d2s2lT
duTjR6ZHn085kMZmDR3KBsKvXnG/yt2vRGP4I78Srpnzo8/Kza+MjFjg8ePM
hWJIn4W/VVFXlz329GTb4FdadO7g69f//xs0Zmv2bNYN2/N2wQLWleIr7/3L
kZ6i6lfVqrGzv/zCfNFe9eh6YWQk04bjz6L+2h9/sNbx8UwLnlUDOcby2jXm
tHAh64j223XvXlYFuUaZn0ctXXC/Kh5+Rfcs03wK5CwSoMfL5rR+BM2bQa8T
nT+jIJDWr2js+M2bzHjnTlbtwweWPfesJL+ieokcZe7ry6q8f89UcspN0voV
1WW6HnjlCqtoY8Puw6/2Ief95xCZmUxh2LCC8aufjR29rqDXQZfFr2jf0Pgn
ik1CQvYaJBL9ivrviLX12bOsYno6U8rp86T1K4oh3bOwYwdzxd8KbtiQbYiJ
YZrin5eUxFQHDWITDAzYs/37WQN+/iB/2qPwfQWdS2TxK8oL8GslHL+KAueX
6FfUdtCHUs7tvofc/Kp5c7YbHpW9tgF5/NKlrC9c/93q1czr6lVWGe33nJMT
24g+3H5bW3bO2Jjdo/EJS5awZp8+8WuIpQnuV8XDr6Kjo9W3bdvWZu3atYPA
YBEGgm47duyoQ/P7ff78WVE0N9IaYCdOnGi6bt26gWfOnPEoyLlepfWrlBRW
bvx41hy57+SaNaw11V1xvyJnCglhhugrLqlenW2AExlJ4VcZ8KsrEq4Pvtm0
ifVHna+xcSNr2KEDW6WhwcJRf8dhW/5b/7ig/CojI0P58OHDjRAnb7HY0b97
7tq1q8HTp08taD1b0dhlZmYq+vv7u1GMfX19myUmJhboWs2y+BWd65syhXW2
t2fH169nDfBvBXG/ov3/9Ckzr1+f/dGiBVuKuOT4eSJ+9QntwF/C9cFQtJXu
dG4AP5vWqsW2aGqysKlT2QC6n/D7/c0U/vyTeaB9Xa9dm20ODmaG/LyBaOzS
NA4cONBeLJfQ7wNA1927d7sHBQUZo/19d/zSWuFox7+sX79+4JUrV9xluf4v
K7L41bt3TAPtzWvhQtYK3qMsya/IrZ4/Z4ZjxrAhW7YwT7SZHLc9N79q0oT5
4TVGyB1qgYHMvFkztkZHh73eto01RT+uGvoCQXp67D5yXLfz55k95Rxsx5UG
DdgObKuOvOPPKTy4XxV9v6Kae+vWLRO4y2lVVdVU+EsyrTknIAH/jtPS0npb
u3btIytWrGgTFxf333pEycnJ2l26dPFFbBO9vLyWF+RaRdL6FZ3rgDsZtWvH
Vjo6suMnT7JqyH22on4VHc20Bw9mw01M2DX0D9uI11BR6FzXqlVsQJUq7HrH
jmwj3mtIjwv9SkWFJdjYsCD0KW9TX9LcnN3p1InNR622EL1uVVB+9eHDB+0m
TZpso7ghfinisdPW1o6oWLHi2SlTpni9e/dOW+hYaKtqrVq1WoDXJFSrVm1f
aGiofkG2M1n8imIYEMDM3d3ZFsRtP+qKw4EDzFnoV/CewWFhTLd/fzbZzo5d
Rr1rROcNcvo81EWVfv3YmIoV2Y02bbJdTEcQW6WZM9lUxCQJNeqpIIb30S5u
9e3LpsPLv/NuiuHu3awG2tURbNfxgwdZdX5t8HuioqLMPT09L9NxKimXoD2+
qV69+sFVq1a1jImJURW2R7RjfbTj/Zqamgnjxo1b+OnTJ9WC2kZZ/Iru3+va
lU2xtGTndu1idai/JupXDx6wSh8/MvVx49gICwt2Bb7TlM6B5vS30fasatZk
d5E3EtFvGy42/uqcqSl7ij7aEhp7Va8eOwC3eom+wQYa+3fpEquK5590786W
0XlVapuJiUy1Tx82H9t39fr17DFacm8DnMKB+1Xx8KsbN26Y4r8rZcuW/WJn
Z3eN1vrq2bPn4h49eqyoV6/efuTE17QWqrGxcdAff/zRhs5j0XuTkpJ02rVr
d4jW2u7evfs6+JV6QW2nLOOv6HoNzYmA/uCRpk3ZhsOHmTtqa7Zfoc84ffFi
1hq58Kq3NxsXFcV+GCMakxMXx3RCQ5k1cqOpcN4FoV/p6rKwSZPYhJ07WQvk
30YnTrCKyH1a4teMCsqvUKN0ECNfWndGR0fncdu2bVdQ7BCPZahzfxoZGQXT
2rdw5PAxY8Z4o41mn6ciT27atOkyvO+zk5OT/4sXLwp0zk1Zx1/Rtb8jR5gL
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
YlUDuK5Zs6Zds2bNtqqqqibhe6W0adNmdnR0dPb3KmS/qgq/ekWegDo9OTk5
Wbmg/lZxQsSvvlhaWh5evnx5HUHsaq5cubJ5w4YNl9G1QcQoE79vEc7DIAe/
0kLc/BC/r3nxK07xQOhXaG+fWrVqtWL79u21BO2x1rJly9qjn7aT6oGSklKy
l5fXNJonhN4nB7/qLfCrOGxbO1nmNBWsT1Mmv71aOI5ditdI2p4SW1c5kuF+
Vbz8qkyZMn8jv9FYuVfgJXitrq4eg8fS8fND3bp1N128eNGOrg3Se+XlVx07
dpzK/epfRPzqG/YNzTf0Whg7NTW1aMQmDcdfgqur68Fjx45Vp7F09D7uV5yC
QOBXd9Cu/oZDxYnkkjdojx/QHtPRV3vfqFGj9Xfv3rUW1oPi5FccTlGA+1Wx
86tvqM9vzczMrpmbm18FlytUqHCiZcuWa+fNm9ctKCjIhK4XCt/7I78SXFtU
oGuN79+/10xISFD9mdhzv5KM6PxXqGfvjY2Nrwtj5+joeBrtccuYMWMG3Llz
x/rz58//XcfMya+oPVCMsX9VETe96OhoY/zUpfsQEb88byf3q9KBiF9909TU
fC2SSy45OzufaNu27Zq5c+d2QfyN6N4L4fu4X3E4ssH9qnj5FblL69atF1++
fNn29u3b5qjJpo8fPzb4+PGjBvKdgvi6YTn5FeJe9ubNmzbIoz0GDRr0e/36
9TeMHz9+GM2Bk9ftFPjVS+5X3yM6/qp8+fK+hw8fLi+IndnTp08NETtNtENF
cTfKya/S0tKUtmzZ4tmvX79ZiNsefPZx8OfQoUO979+/byw8dykron6FOP6F
eHK/KoGIXB/M7NWr15xr167ZCHNJYGCgAXKkOnm+eC6Rg191o/O6qEsfUZfa
cr/iFDcEfiW8T+Md2nE97ldFC0n3D6LGKtPjQnJ6b05+BfdRwPfvj8+8g37r
TTU1tahWrVrtS0hIyPP6WKjHDqjLj7lffY/4+PbXr1+r5xY3Iie/io2N1W3Z
suV6R0fH4/ChRWPHjp2BerlXU1MztEOHDrOioqL+594maRAd3+7m5nbk7du3
fK20Eoj4/YPwJCVp2mMh+1VZ+FUT1KUPqEsfUJdaluS6xCmZCOa/6iSY/0rq
+2CLKyXFr8TnZ8iJnPwqKyur7NmzZ238/f1d9+7d6+Lg4HAGfrX/J/3KCn51
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
JX7kV95UY1CDUuC+p1B//MAeMfwQt/N0/lFLS4vOX7WgY1P88+jY9Pf3r4l6
xc9fcWQGfmVZtWrVm3Qtz9TU9G6fPn3WDB06dKU4/fv3X29tbR1Izu/q6nrw
5cuX+pI+LyoqSrNx48Zrqd/A/YrD+R7uV0UboV8pKSl9sbOzu7V69eoWvr6+
buLs2LGjDt0TSPfvw40iNm3a1AzvVRD9LOF69n379v1d0N+k8x//cL8q0Pgp
wK96Iy7J2KcvERdP1Cod1B9tUeixQ4cO1bKwsHhC468aNmy4GjHRFz0WKX4x
MTGa8KYpdA8DH3/FkRX4lRn86hKdL/Xw8FhE98RkZmaqikPXA9F+ptLaNrq6
um+WLVvWiuYoFvWj9PR0BbQ7TyMjo0BBW6RrhN+4X3E4/8L9qmgj4ldZtWrV
OhUeHm5M8REHcSwLH6pqaGj4kO7td3FxOXj27FlnGtMunO8btVlt+vTpbZDr
ggXzKtE5rC/crwo0fuRXvcivaMzUsWPHquc0vz25Exx5EZ3Dojk0evTo4fPo
0SMr1DVV1DKVp0+fmkyYMMEb8XtF9RHxo7qWyv2KIy2ifuXp6TkPbU5Z0uso
Z5w5c8bF2to6gF5rbm5+HXWiXXBwsFFERITGixcvDNDXa4o+32m6l1VFReUd
ctQTyifcrzicf+F+VbQR96t3794Z5fTa6OhotT59+kxEbY6ncdLVqlU7BZ/q
5+/vX3f79u2NvLy8plKeI7dCnzMYn7eL+qfcrwo0flL7FV27PX36dGXE4zSd
w6L5RatUqXK6f//+i4YNGza/Ro0aR2j+KxpLbGlpedfNzW0CPjea+xVHWqT1
K4LGrk+bNm0A2u1byhmamprhcCf/mjVrbkS7PKijo5Pt+dQX6NSp0294zJfP
f8Xh/D/cr4o2svgVxS00NNS0Z8+eS1BzP1AdRo1OQm4L19LSiiLnosf09fWD
Ro4c2XfGjBkj+fztBR4/qf2KSEtLU4QL16YxL+TJFC+6Rx7vpzncv6AdJCNe
Zzds2PDLnDlz+PztHJmQxa/IhaKiorRmzZrVz9zc/A55kuA+jOx7NKhvhn7a
oyFDhoy6dOmSVYMGDfj6OByOCNyvijay+BVBsXv58qURrTvo7Ox8BjU9AjU4
kWo1cuHzZs2a7dy6dWsTmsty+fLlfP3Bgo+fTH5FZGVlKTx48MBqypQpA+rV
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
PU/4bd3RGjVq7Lt7924p0T2ryLdWr17dxsLC4m7jxo1XbNmypVX//v3Hm5iY
3MX1/Rf6mBLtf8f9KnfIVWkuNY0LUp5v1arVclqDiXJct27dxtO+FzRGs23b
ttqiHkxtf+nSpbXwe0eRc/6Bi91BXrqJunSU1WcryH5F92ap/wBfoLUYXi5Z
sqQtrVUeEBDgAHf69iw8cvjmkJCQ77mL5rqsWbPGzcXFZXfXrl1njho1qivc
t2eVKlV2ofxDcX39lpSUpNLrOdD+o7j269CeezQGhe83mtZiePLkiTE8fjXN
q6Z1R8+ePesi3s+iGCIch6E4TGs+SRKPKRdu2LChfsWKFY/S84kODg7B1Be8
evVq6cLsV8JxwTp16nwrd1zrp/39/Z3RTmnPrBaCvTdo3dEB4uOEwjoQr4uC
7GH03WieWlhYWMmtW7fW7tix4xLEzke0xo2xsfET+FUN7geSw/0qewTjgmVo
XJCuTfQL1wj3VqFy2717d23qmwrWHf1hPRvEMUNvb+8duJ7PXLp0yYGOj4yM
NGjRosUiONe148ePu0myhyj3q9xBmZTE31tAa4Ujb108c+ZMBcF62bTuaKny
5cvvo1zv4eGxC5/x+1x3Kn/kPF06hvbvxjmW2dnZXeN+lbtfUfmePHmyEo0L
0ngs+rdz37x5823MS/A8YXM413Nad/T333//vj8hvR8aGqpDz3nS/lM0Ryk9
PV0NOa8sznUVbXw3rhNDRZdFXhGs0W4Dh/m+1i3anDV9b3LL/fv3VypVqtS3
+yjoB8wVHSekckNcsDt06JD9nTt3zOh5ZR8fn5a0bzk8qERuc9nCw8P1goOD
bVC+ln379l1vY2NzubD7FY0Ljh07tjf1jfX19V/gnG2oz0xlgj6uHtrtdBqX
sLS0vOnr61tVuLcD1SPqwAAxvtzjx4+NUS+uqIvm6KM1oDX482u/yPxC4FVq
aDsmy5Yta0r7kaC8wmhvI9p3DDnw3IQJEwah/RgVZL+UNdyvsofWuEO+mSPY
W+UqrrXKonurxMbGavfo0WM0lR2tqwnfr0v3R6j9IX+4Wltb36S9WWiuibCs
0cenfYZDp02b1l6Sa5T7Vc7QuCCtYUlrWdJed7Nnz+5Oe98J36d7CcuXL69v
aGj4WLA/4aj3799/nxMknAeM/qxWr169FnG/yt2vqLyE44LUr6VxwQsXLnzf
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
xeUP1apV2xEUFGQvXPuKSE9P10QMcbt27ZrXzZs3KyEX6AjvTdHcN/x+e/z+
M4rrNWrU2I6Yw/d1lhBl8yt6LhHnLioKtbPCvr67IHcWo/tORE51RHFNcFwx
8TkLgnVMvr1H9zvo3zSfWXgc/aT/pzwtLbdv3y6F/ut5wXxKPv/xx3L/Xnc5
zUtDvX6vZ/E6FqlXNXnMRUEs1enQocMaGpPhflWwkaI9ShRLZJ1v6W9dv37d
08rKKhp5KQ55qWVh8Kv/fXfZHhcVFaXXrVu3aZqamok0F87T03N9YGCgI7mX
sN5E95gQ1ntMTIwO+s2tbWxs7gruf93Ztm2bl+j9L07OKJtfxcczjY0bmdv8
+aw2sWAB8969m3ncuMGc37xhJci3FF1migD9QO1Vq1Y1mT9/fu9Fixb1wPXh
ll07Dw0NtcB10WnFihXtIyIivu91QH3Mc+fOOS5YsKD78uXLW7948cJAlp8R
/U4r+FUQ96sfQf+wuK+vrzfVHei1d+9eD1pLRvw4inEhISEGS5cubYs67nLl
yhUb0fmoT548scR7ndEOOtHzA7L+nNyvCgepqak627dvb07tEbGgx4kTJ8pm
FUso1wYHB1svWbKk89q1a9u9ffv2+3gxji965MgRZ/r9NWvWtIyOjtaT5WfM
wq9aFRa/kjUUQxBXrHFtr6b5tmpqaqkVKlQ4hPzQ+NmzZ4Y01keuTMeRdycl
JWnevHnTvn///uMNDQ2f0nwPY2Pjx9OnT++YkJDAY7oUKJtfPX3KTNzc2C4d
HRZmbMxumJiwa9bW7Gbp0uxS8+Zs2tWrzPzffxVfbvkJ5VbkWnPkvBOopyRc
IwnVq1ffTuuWiPcbKS4dPXq0jqmpaShi0314WBVhn4T6K2PGjOmhra0dZWFh
ce3s2bNlZNnvxOexhl9dED4PzP3qf8TGxurXr19/E/Ufqf6cnJxOoV4c6F6V
6HH0/3v27HE1MjK6o6ur+xLXZVPROaZ+fn71EefCSpUq9ezy5cuesr6HBb/S
RQzewscHCzZRUVGWNWvWDEB7TKZYUqtWrU3ok/205xzlWh8fn8YlS5Z87ujo
eA/twU0YL+Boar169fpNS0srxt7e/gLysYMsY4mYXyUgL3XgfpV3KH7AlUs3
aNCAHCuO7kcZGBi8qFq16vapU6cO2LJlS2PUdZ2NGze2HTBgwBRnZ+cg1G0S
jQmamZndg1t1E13fgSMZyuZXT54wMxcXdqJ6dXZu2zbWcN8+5rlpE2vSsiVb
rqfHXowezfpLu5apqkNxC/kUSmRxnp7xIOBI0bguOmZkZKiLHVv08OHDDXDt
xJiYmIT7+/tXE/WrkSNH9qX+C3L4w9OnT7vK2K/s4Vc36P4H/GoJn9/+P9Dv
N/D29valuf9UdzRPdPDgwaOonyh6HPnVrl27ysGtnuF6fD9r1qyWon71zz//
NNbT03trbm4effHixVpy8Cs9+NUu1N8XPr+94PLmzRtr9M+uoz1+iyX0vD2N
A9F6CqLHkV9t3ry5uY6OTiycPuzOnTsVRf2qW7dug9FW0q2tre/cuHHDSY5+
lYy81I371a9B4xe4ps3hT8PgTHfV1dXTybPonhbq+C14A97j9UyK4cgx7+Bf
e+Be3rTfDp9zJT3S+pVwzDcnv5JkXDg3v2rThu1NSGAGNKeP1jK9eJFVKl2a
3e/ShS1KSWGFKm+L+dUXEIvr4kOFChUO4nqxEm33CvYrB/jVLYFfLeN+9T9E
/OoLyuY9fmbY2dldCQwMLCt6rXG/4uQHAr+6Ru0RseQdxRIvL6+9T58+NReN
B9yvCh4UY96/f6+1d+9e9z59+kx0cnI6Z2pqGo6ckC7o+1F9PqxTp87W6dOn
d7l//74ln2+VdyT1q0+fWLFnz5gB0KX55tn51cePrNj9+8zw3Tumk5Nn5eZX
TZowv8ePmembN0wrIoLpr1jBWpqZsUcjR7LR6ensp7krBRlRv0IszIQb7URd
PaP+Be1jkJGRoSFyLPcrJUPoV3Sv3cXF5Qji2Q3EseTBgwdPTExM/F5G3K84
+YHQr8iNECN2aGlpPUc8iZk4cWJXeNP3++HcrwouNN8KsUeT5tchrnja29sf
oHlWrq6uASdOnKjx+vXrkqLz3zl5QxK/Ik+CP+k3b84mdurExr56xfThQz/5
Fc09p729a9dmy6ZNY+3T0rIfx8vJr8qUYScNDdkTd3e2skYNtrhqVbbJwoJd
r1yZ7cb5XUSfUy0MiPoVxbPGjRtPaNCgwQJ6FqRChQqnkAdLizwHwv1KyRD6
FeqL9pVYibw0Bn6VgNxxG/3ISnTfno7jfsXJD4R+RfGjY8eO4xo1arSM1gB1
dnY+Qs9UCGMC9yvFQPmW7iHExzOtlBRWXN75Du1BB+3h+/6DkZGRP83F4+QN
Se9fJSWx4lOmsB7m5uzSH3+wrqh7bVG/evSIlYMzGTVpwuaWLs1OHzjA3Glc
L7u/++IFs/HyYmfgTW+WLmVDxf3K2Jg99/RkW7292UYct9vWll2tUIH57d/P
atA9MkWXW34i7lc9e/YcsWnTpurwp7va2trxf/3112DhenDcr5QPUb8aOnTo
YvQPXV1cXM5QPTRv3nwm4lsJOo77FSc/EPWrMWPGDPLz8/OCxzygec+jR4/+
DbHk2/1w7leKgfYkXL6cITSwuX/+yQYg95aQ59+LiorSEd3fmfuV7JDUr8ip
nz9nJdu3ZzPs7NjZLVtYzfnzWV+hX124wNyHD2f94EuX58xhHcm7c/q7GRlM
68oV5nHuHGsE1yotXINWOD7YrBnb/+wZs3r7lulFRTHDgweZB7wrwMOD7YDH
mSi63PITcb/q06fP8OfPn+t17dp1soaGRoqdnV3QqVOnnKjeuF8pH6J+NXz4
8MXx8fF6M2bM6ENrIVM94JqrQfewuF9x8gNRvxo/fvxA5Ff97t27z6D/d3Z2
PnflyhV7aovcrxQD5cbBg9lcDQ2WVr8+O/nunXzzHfcr+SHN/Ha6T3npEitd
qRLbAXZ168amFi/OUqyt2YuRI9nQUqVYUPfubOKrV0xPkjnu5FQCvr8m9Ku2
bdleeLu+8PX4eFYCr620sWHBFy+ysoVpvVFxv6J9pKiPef78+XIODg5X6Xm0
3r17j6E9KrhfKR/ifkXrrj948MC6cuXKh1EXaeioLkHO0+N+xckPxP0qMzNT
4+jRoxUtLS1v0XoNo0ePpvhSnPuVYiC/GjSILVBXZx/r1WNnuV+pLtI+P0hj
czt2MA84lb+uLrtXtCj7gHaQrKfH7lSvzjbduvXjOv7SIuJX/yQksJI0xpiZ
ydTu32dWVaqwfXZ27M7t26yMosstP8nKr9LT09Vp74IRI0aMRt0lIsZdP3Hi
hButpcz9SrkQ9yvkM01a02/GjBmdaZ0N1EUorrs69JwO9yuOvBH3K9qHmZ4p
6969+594LdnJyekS/nOhtsf9Kv/hflVwyMv6V/Ce4pMmsa7wq3D41ddixdin
UqXY+f37WRV6zvBXPo/I+leX4XG9Nm9mHYcPZ781bszWweHCW7ZkC6Oj//++
VmEgO7+iekKedXJwcAikccLevXtPQZwskRe/op+0JxXl/ZiYGK3Xr19rZWRk
SFWX3K+yJiu/ovIODg42q1y58m56Nrp58+brXr16ZZgXv6L3qN6io6N1cQ5j
YBQXF6cpnDcvKdyvCgdZ+RU9T3b06FEXS0vLS2h7yXCtP9CedLhf5T/crwoO
efErGpsLD2f6Q4awUS1asH2tWjHfpUtZ8+TkX183gebIe3uz1ba27AY864Kz
MzsPdwt0cmJHfvuN/XH5MitV2PbIyc6v6D3kxOIjRowYSPWHOHfv2LFjVQ8c
ONBQGr8iKDevXr26Ls41vH79+ovhA7POnTtnL8las0K4X2VNVn5Fr+On2owZ
M1oif0Wivl7Onz+/KfJZeWn8ivLi1atXS/3xxx/9a9euvaZq1ap+iJF7UP5/
oS2UozqX9HNyvyocZOVX9Hp8fLzmkCFDRtAYoamp6c09e/ZU2rBhQwvuV/kL
96uCQ17Xb6c9alJTmRatAZqYyPQ/fJDNmlTCscBr15izCA537zIz/B3NwrY2
A5GTX9GcnQsXLtg6OjqeoGesW7ZsOW/58uVtpPErqm/ag8ze3v44cvd15Pcn
+P1QPz8/D+5Xv052fkVl/+jRI2O8t5nuYVWqVGn7hAkT6tDaZpL6FdqBGnJi
V+S4wJo1a27u2LHj9Fq1aq1B/T0oX778kYCAABdJ65D7VeEgO7+i9njr1i37
cuXKnaP32rRpM2P27Nkd8+JX4v+W1r24X3G/Kgjk1a/kCd0fywpFl5XiyiN7
vyKQF9X/+OOPHhQH9fX1nzRt2nQK7Xcgzf2rkJCQkmvXrvU4depUhYEDB/6F
95/Arzy5X/062fkVQdfftm3bGqC8w7W0tN4gt9Ezoc8l9Suas7V//36Hffv2
VUBcRF8nsfjz58/1+/fvPxDXcwTqexCNHUryOblfFQ6y8ysCcUVj0qRJtK9g
nLGx8cPGjRtP09TUfCepXxGUr4ODg03QFrVCQ0PN8Z4rvM3u3bt32pJ6Fvcr
7lcFAWX0K86P5OZX9P6TJ08sPTw89uP9DMTGe7hWUqSZf0X3wWi+DtqD+vz5
80fgdx9zv5INOfkVgXxn0KxZs5VUt+BBkSJF4qWZf0X1RuOEwvNRXR4+fLiq
mZnZkx49ekxOS0vLca0UIdyvCgc5+RXFg9u3b9vA849SLIFbUSxJk9SvEJeK
jR07tnW1atV80Ocb4OXltdPFxSXI0dExYOjQoWOQyw0k+Yzcr7hfFQS4Xyk/
ufkVQTFy8eLF7XV1daMEexT+l5fnB5GruV/JmNz8ip753L59e026Zyiou39/
5flB2i9pypQpvQwMDJ5NnDixi6RzsLhfFQ5y8iuCYsukSZO6op/2VhhLJPUr
XPNqaEND0H5j7e3tj40YMWLItm3b2uC11fD9R2vXrm0ubNM5wf2K+1VBgPuV
8iP0K0tLyyBaL+m3334bJu5XdMzTp09NPTw8dpDf4Fr5z9TU9Lm4X40aNaoP
4mqKsbHxA+5X+QP5Ve3atXdqaGhkIt8sEvcr4vXr17rNmjWbh7rJoLqjtbRn
z579k1/p6+vHwLOjsvOrT58+qZ08edK9bNmy55BDd9++fdta0jEZ7leFA/Ir
5FNaNy+F7jGJ+5XgHpa5m5vbXrSFz9Qe0R5Cxf2qe/fugyge2djY3Bb3Kxrr
/vPPP/smJCRoUf8hICDADR52bdCgQVPh/7neTy1MfkXPa9H+KJmZ/3v2Pju/
+vyZFU1MZMV/9Rl9cbhfyQ/uV8qPYPzPsG/fvnPgLftWrFjRPKt7EoiTdB+k
bseOHXe1bdv2SO/evTcEBwc7CfMwzdXZuHFjg/bt2+/t2bPnSuRPG+5X8icx
MVFn0qRJY5F39m/YsOE31MNPz4LQGN+BAwcqdOrUaQvVHepw5759+6oJx/2o
DuHYlbt167Yd7WBrSEhIWXG/ovo9depU+apVq/6Dejjl4+NTA22CPz/I+YH4
+Hjj8ePHL0Rd7926dWtj5ICf2ggcSG316tUNESv2UHscMGDA+vDwcDthvEAf
odiSJUuaUDzq16/f0tDQUEtRv6K5W4gflQR7ShS5efOmGdrUyf79+y/DuXON
C4XFr75+ZUX8/Znpb7+xQZs3s+ofPzK1rPwKxxW9cYPZ9e/Phu/axVxwnMxy
NPcr+cH9SjWg/Iv8p5uUlGRA/b/s7kkgx6ojxunjuJKUL/F7P8ROxMXieN8A
0Hs/xSvuV7KHckVaWpoOlTvKP9s5vnTvieqF6o7qEA79g4fR3Dh6HfWqT/Uk
9rvkVmXhVrtQB2fXrFlTOzU1VaJ57UIEfrWT+1XBhjwF7VFX0B6zvZeE9vdD
LIHrf48l1IYpDlE8Erz3LZYI/crR0fEO+nYuwmPhVyZoU8fgVyvy4FdJyEtd
CqJf0XP48CbTmjXZ2sqV2R64lmNqKtMW9avYWGby4gUzatuWzXV1ZccPHmRu
slyjiPuV/OB+xRFrDz/4lei86dyAX9kit19Bfv4Iv5qHWKul6O9TGBC4lQvc
agfK3x9uVZ/2T5L2mXjkyRLIjevJj5ELj8CvSir6u3FUC6FfOTs73wkJCZGV
X71HXmpdEP2KoPG+nTuZe+nS7FTr1mzegwfMcuDA//erx49ZqUmTWD8bG3Z5
5kzWMS0t5719pYX2l4dfrSW/qlKlyqGIiIhCtb+vPOF+xSEoRz9+/Fj/xo0b
5iNGjJhQsmTJZ7Te5a1bt4yfP3+uI4lnwa+skN+DkJ8/wK+mI9b+NM+II1uo
Xs6dO+eAfucOXL+3BwwY0CUoKMji9u3bxsSLFy9KSLH+lQ5y4xruV5y8wv0q
b6SkMI3p01k7MzN2adAgNqxzZ7aC/MrDgwVOmcI6WVqyoN692cSYGMn29pUU
uu944cKFsk5OTqfgV19RR3d8fX29aZ0ORZdJQUDgV53gVwlox5FoxzW5XxU+
oqOjDVu0aDEL19chQ0PDu+rq6u9NTU2D4Et+yNm9kXtzvd7gVzY4/qLg/tVc
fv9K/lAcHDRoEK3f/1ZDQyPMzMzsOOrgEGFvb+83atSofjhG0vUZ6P7VZprT
zP2KkxfIrzp16jTQxcXlGvzq2z6xAr8ytrOzO4hYsoSPD2b1fVmRiAimS3uU
wKWugotFi7LPhobsmbU1C6hTh226c+fX9vbNooxp3UPLBg0abKPnaooUKcKo
b4W4EQjHqv/s2TOn0NBQZcSZQN/R9sOHDzK9lydraG4j/KoH7TmFdhyDdtyY
+1XhIz4+Xvfvv//u3bdv3ylgKpgm+Dl5xYoVDRATc53LA7+yQ16/TvkZfrUC
sVZH0d+roEPPOaxfv97rt99+myyorylC6DW815jm0UhyLsH8q92C+VfcrzhS
k5mZWXTVqlXuEyZMGBgVFfVtHg/lceRCnXHjxnXdsmVLE5ojmtt5xPwqBXmp
e0H2q/99Z1bk0SNm5e3NNqmpsSTozn9wrA/29izgn39Ylc+fZfvcIM3pXbdu
XSNdXd1ocish5FjW1tYvXV1dH5UtW1YZCSHq1at39OHDh86y3JdJ1gj8qqfA
r96iHTfhflX4oHiG2KhB9zrEoRwuSRsW86uV3K/ypd7ouVG1rOqNoGfvpVyf
YQ/3K05eEbZHiiWieYT+Teuyia8FkcN5Cp1fEV++sGInT7JKVaqwo1ZW7Imd
Hbs6dy5rk5Ymm/3nRKGxq2XLlrXV1taOF/UrWu9MXV09E06QpozQOoK0ZoiN
jc2zW7duVeB+xSkMCPzqGr9/pZoI/MqX/MrR0fHwgwcPuF9xFILArzzgV1GF
YXxQlMxMph4czEpfv87K377NysTHMy157A9Hef7MmTNu8JRrNPdK6Fa033zP
nj1nwwuGzps3b4gyQZ8JMcpHQ0Pjgwr5VXf4VRIfH+T8CvAra/jVecH6DAv4
+gyqhXD+lZqa2ucmTZocjI2NlWgvEw5H1gj8qgb86jXyUjzyUrvC4lf/+/75
s+8uPYM0f/78DoaGhiG0b4Suru5ruNWo0NDQkvQsOfmBMkFrB27atKk3HDBF
RfyK5re3ov040I7foB3X5X7FyQvwKwv41TnB/PbZfH67aiHwq43kV+3btz9A
6yMp+jNxCidifkXPD7YtTH6Vn7x48ULf3d19U9GiRT9XqFDh6KNHjyxoD1NF
f66soDbg4+PTU8X8qhn8Kg7t+DXacW3uV5y8wP1KteF+xVEWuF/lH2Lri+6P
jIw0UvRnyg7uV5zCCvcr1Yb7FUdZ4H6Vf3C/kh/crziygvuVasP9iqMscL/K
P7hfyQ/uVxxZwf1KteF+xVEWuF/lH9yv5Af3K46s4H6l2nC/4igL3K/yD+5X
8oP7FUdWcL9SbbhfcZQF7lf5B/cr+cH9iiMruF+pNtyvOMoC96v8g/uV/OB+
xZEV3K9UG+5XHGWB+1X+wf1KfnC/4sgK7leqDfcrjrLA/Sr/4H4lP7hfcWQF
9yvVhvsVR1ngfpV/cL+SH9yvOLKC+5Vqw/2Koyxwv8o/uF/JD+5XHFnB/Uq1
4X7FURa4X+Uf3K/kB/crjqzgfqXacL/iKAvcr/IP7lfyg/sVR1Zwv1JtuF9x
lAXuV/mHuF9FREQYkwNIQTEhIvVXRPi+LP0nP/xK9LuJtkeR7ylx2Xz8+FFt
zpw5zblfFT5E24ywjQqui2J54c6dO1bcr/K1/oqI1F/RX62/pKQkPXjVJu5X
HGn58uVLUeRlvcePH5uHh4eX/PTp07eYEhsbq/vkyZNSeJ2woPclISQkxGLP
nj3NzMzMopGX4pGX2nG/kg/wqxLwq/Xwq892dnaXV65c2XnXrl3NpKA16HT0
6NGmiBl6dE7Uu+H+/fvr79u3r0FkZKSprBxI3n714cMH9XPnzpXD96l3/Phx
19TUVLWvX79Sbiuze/du+p6tQENQXxLQbht27tx5orq6ehLacRT+vx73q4IP
5WPEPVvEsLZ79+5t/vz5cwNBPDQ5cOBAO7SNHqALXTeSAk8fZGJi8gB+9Ql+
tQDXmraiv2dBheoK9WeE+muD+muP+rOmOkX9aaH+GqE+eoLuoJukbN68uW/1
6tUDUH9f4FcHuV9xJCU+Pr54jx49Bjs7Ox9v1qzZjFevXhnAsdTmzp3bztXV
NcDJyekyOAfOSAry53XkpQ/IS8nIS125X8kH+JU+/MoHfvUV1z6Vd5yurm6s
hLwD70FS5cqVbz579syZ4tDFixc94GrBlpaWj48cOdJQVk4hb7+Ki4vTQ/td
o6en96patWrLXrx4UQLOpTFp0qSJJUuWjBF8V/oZLSnFixePL1KkyL8o11i0
4+a8HRd80N9UW7VqVSdjY+NXcKJ7W7duLUt90MuXL9ewt7d/hnaRCpLpupEU
avOUm3GdfoFfrUZ+1lH09yyoUF2hn+mO+ntiamr6ctu2bS3xWrFLly6Zo/5O
C+qPSJEUXP+pyGefUH//wa8Ocb/iSMq7d++069atuwRt52O5cuWOwPdNPn78
qD527NhhaFNplF9o/InelwI6/jPaZiLyUjeel+TD27dv9Zo3b77cysoqCj4U
Iw0WFhZv4SIpFDPKlCmDLt8TV/KroKAgb8SlKH19/Tj091qoil+hHRugHe+m
dod2vBXtWBd+VRzteCbFRrTjz/j5Hs70Tkrew8+e+Pr6NuLtuOBDfrV06dIe
mpqaSdra2uEbN24sTzn7woULnmZmZq8pHqINx+L6Ccd1JCkvwGtcp6/69es3
OyUlhd+/kl/9FV2yZEl11N9r1NP7TZs2tSW/On/+vAXq74Kg/hIE9fdcCl7R
nJf+/ftvRv3pKfp7clQDgV8tJSdCXjoq8Cs15KUByEepGhoa8e7u7luaNm06
TwoWglVt27Zd4u/vX1U4Bs6RLXSf8cGDB05Xr16tKS0XL16sM2LEiGWo3w/w
qwfwK6cC6FcaaMcT0I4zkStDe/bs2WPmzJkNZ82aJSmNQYv58+c3RDnLbKyU
o7zk4FdVkJ+fFytWLL1Vq1aTAgMDq+I6cpcCD+Lp06d2NG6t6O9ZUMnBr1B9
ZudpDhzqbyPqrwbqo4oUVAeeqL8yqD81RX9PjmqQg1/1RF5KRt89dM+ePdXj
4+O1ExIStCSEji0BdOhemKK/Y0GGcj55kbR8/vxZY/HixSMRhzLgV/fhV44F
1K/GoR1nGBoa3jly5Ig9nJS+uzQUI/D5FV7XHPmTg19VQn4OVVNTSxkwYEDX
9PR0tbxcd4r+fgWd3PwK9fcB9TcT9afF648jb3LzK+SlZ8ePH6/E21bBAjFH
vbD5FdqxHb8HxckJSf0qIyOD34NSQiT1K9SfpqI/K6fgw/2qcML9isP5Ge5X
qg33K44ywf2qcML9isP5Ge5Xqg33K44ywf2qcJKffkVOk5iYqDl9+vQR+Htp
OP+LQ4cO1aR5TbL6PtyvOLKA+5Vqw/1KORHMEy50xMbG5upXx44dqyRcz1vV
UXQ7UxYk8at9+/a1pLYgnOOdV+BWxadNm9bS0tLyFq3VhRiXWbNmTV/kLCc4
0C+dW0hUVJRhnTp19uTgV3ePHDniQM9c4nhOwUE9F6Q6X2ZmZvFFixb1ysmv
+vXr1z05OVlDQd9H1ihr/eXpfKg/9YULF3rm5Fe0RgatQaYE3z1HxPahKEJt
Dv1IHeTsn6DX6X1hjqPfTUpK0sru+Li4OG2KvcLz0/GI03Seknj/J3A8rYup
ITyenoFNSEgwwPHGeP8ncLwhjlcXHFskJCSkREBAgAWwVFKsgDWwkQArSc97
4MABh4oVK24Q+NVx5CVTgV/1Rl5K0dPTC58zZ04jf39/ic+prFy6dMkEbY4/
W5uzX9WGX8Xg9ZRu3brNmjlzZrtZs2a1/RVGjx7d29ra+iK5VZEiRRhBa6tV
r1599ZQpU1rhmOa/ysSJEzvZ2dmdpzUc0Y63i/sVcuXLnj17jsH36YXjOQWD
weB3MDob6L1B4DdJmTFjRv9mzZptELQZ8qsKAr+qivz8olixYpnu7u7r0F/o
J815JaQ/GJnD95E1VD4DQB8FMUjwOcaIMQoMFJSHVKD+BjRt2nQ26i8BfpUI
v+ok8CtzwfoMn1F/R1F/g/Ny/vxi3rx5vW7evGkvHDei51Xxmevhv2XoR64S
h16fPn1604yMjG/5LSUlReePP/4YXrdu3Z+OJZo3bz4LZeIgfC4abqU9cuRI
On4P3v9HnFatWm25ceNGZeHngVcZDRo0aAGOP4H3f6Jt27ab79+/TzmFPrv6
0KFDu6H8A0xMTC4rKVfAVXBNAq5Iel4jI6NrGhoaUbTuGvJSIPKSpWB90SGU
A5GvMvX19e9Jc05lBd9vI9qIJb+PlaNf1YNfvaP2QOuf0RrmvwrOk0jeI3Qr
IYh1GWh7tOZn3K9C67TR2raCdrwL7Vhf1K/w+lfB90nmFBjSQEYuUJ2nSAra
UQrdX0V7+U/gVxXF1hf9jxyLjpPmvFKQLsF3kiWKvCZSBZ8hUwyp602s/tIF
64imwq96ia0vSvX3Ecfl6fz5hZ6eXuTq1avbCddKgy9pdOrUaRTdPxWs3/0D
eD21a9euk1NTU4vT8QkJCUboJ5yg75rV8QYGBi/8/PxqCe+RxcbG6sOLttI+
IDQGII6xsXHsqVOnmgr96vXr1xY1atQIQDl+pPWbxbG0tHxy8eLFbz6Wlpam
0bt379E4NpHuHyoxVI6fc4GO+SjNeQW57z/kpQu0X5PAr4ajnNKF7VEJvvuv
kmltbX3pypUrpblf5ehXdeFXsXSvSUtLi/bRifhVSpQo8YrGmqktCd2Kzo/8
Rfv5vJEFtEcg6jhD4Fe+4n6Fv/cB3+cljg3lFBieg/BcoOOeSQOuiRhqR1n4
VSS9jjxBe6tKdU4peJ7PSF0+MoT+dlgW0OtP8grq7yXt10DP0sCveoqv3059
OtTf01/5G/LGxMTkxrp165oK/QqOojZmzJjWFSpU2Ofm5nZYHLzuN27cuM50
r4iOT05O1h08ePDf5cuXP5TV8R4eHpvPnDlTVuhX8fHxWn369OmH4zfg/U3i
1KxZc/mlS5fKC/0qMTFRf+7cuSOHDh26fMiQIT/xxx9/TAkNDbWh4+ET9GyT
B46diPemKCnTwAKwNBeWgFngb0lAmc6Ca15Fu6NxlTPIS+YCv+pP/X201ffw
4HWSnk+Jmfbnn3/2x/cryf0q1/HBaOSWxN9//32sr6+v565duzx+ha1bt9ak
vZIRN15S/wjxLd3R0fESrs/uOH8dHPPLIBY1d3V19ReMD24THx9EPH08fvz4
pvh75XE8R/WpACoB91yg49wkZceOHRV69uxJa/6nZrN+e1q9evXGI1+Ul+a8
UkDfqUo+UVlQlvL4HpIgrMeKYtDrrsBFWlB/rj169OiE+ouBX8XDr9qLr9+O
+luD+quQl/PnF3v37nV69uyZnsh8KtoPTSs8PNwYse0n6HW8ry0c74OXFY2O
jtbP7vgXL14Y0n0lYT6g46OioorjeB28/xMvX77UFo49EgJvKp6ZmamVFYi9
mqL7idG8V5rbqORoZvd9xNCU9JyRkZEGtWvXXpHT+u0HDx6sRs9bKMH3/yUo
38pqvQFVR5L57fv37/+2NyqV2a9A1y6uT/158+Y1g2dNHjZs2KizZ89WonvZ
v3puIYgtJevUqZPj84PHjh2jvUm+xSqOyiNN+5D4vJQHlixZkuPzg/379++K
3FRMCb6XLFDGeszz+Wh/BsS1HJ8fRP3NRP1pKsF3zxF+H0D14eszFE7ye/0r
ihV0nzglJaV4enq6zD2Xr8/AkQV8fQbVhq/PwFEmuF8VTvLbr+QN9yuOLOB+
pdpwv+IoE9yvCifcrzicn+F+pdoUNL/67z+aG8WKEvRvRX8ejnQUJL+i9peZ
yYolJjL1pCSm/vkzU/rPrCi4X3E4P1PQ/Ipi4rt3zODBA+by8CFzRGxUCa/4
hforUH715g3T27yZVd6wgVUOD2f63LFUi4LkV58+saKbNjG3Nm3YqG7dWN9b
t5gRb49Zw/2Kw/mZguZXX76wYmvWsJZlyrCb5cqxUwcPMsd//1X855Jj/RUY
v0LuQrtjNWxs2C0zM3b78GFWC3WnEvGY8z8Kkl99+MDwuVkvDQ0WZ2TE7pw4
wVwKul9RveSFz58/ayxatGhUYfKrY8eO2f/7v32epEbR34+TP0jiV/379+9G
62nn9drLz+/z+TNTmzuXdS9enCWVKMFCd+xg5Qq7X6H+ZqH+tJS9/sivgoJY
bVNTFq2vz2IOHGANuV+pFjn4VS/yKwMDg+ebN2+u8+LFC1ozw0hC6FjziIgI
s7S0NK38+i7kV2PGsL7q6izF0JA9hF+5FmS/gj+o0Zpv8IamR48ebQTqgNqS
cPjw4Xr9+vVbrqGh8QF+9QB+5VRA/epPtONMXV3dp1OnTm2H7+4hBTVBg5Mn
T3q/fv3aiN/7Kvjk4FfuyM/htOdA48aN5/v5+bVE22guIS1AK1ynrW7dulWe
9paT9nNRHKN8K20843713a+E++N8Qv3tQf1RLGgpBVR/rVF/1alvmse6kyqW
cr9SfbLxK1pfdBDtj0Pr7tvZ2flXqFDhANgvIbSe7JkaNWocQZusJ02Oprb4
6RNT//iRFafYIM13KWx+FRMTo9ewYcOVhoaGsSVLliTegNcS8obWEKU11eFX
0KsnLgXQr4qjHc9AO6Y9Ij6WKFGCvvdLKXgFYqysrB7u3bu3wb8i6+VxCiY5
+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
qT506NCR+Gzp6urqKWXLlr0s/OxVq1YNsrCwuKetrf1/7Z0HWFRH18cTKUuv
IiBFaYqIIFFjQVBBMIgYsUEoFgSiYFdIVBQrMaIxgjURMbZYiCXviwoq2MCC
BFGICCg2BBWxl7z5vne+/yG7+dbN7oKA7iLX5/k/K7v33p29c+ac38ydOXOP
cozA7k6tW7euN81Rb8h3cnwl/yKfdurUKVS/USblpSJpaWkVJyQk9BUdByG/
ROvAKFcCOKyU1gY2Z76ivVkRm93V1FgZYveNuDgW8PIlU+SfA9tnnxsZsVzw
VE1Mx3eqenqyaLyH/hkrVFVld8ENcxG7673PTEVFhXbv3r23Un4Zqju04YqY
mBjae0hR+Djiq23bttlpaGgUoT0+WLhwoXdz56u0NOZoaMgu83js4bBhLKay
8q84SZ8dO8a6m5qy36Ki2OjXr5ki2NnM1ZWlWFiwjE8/ZclQkrExO4Pzz8bH
Mx9BvTd33b5926Rbt25nYI81vgSM9fvWrVudaR268HHEVz/++KMX4mUlmL/4
woULDs2dr/bvZ4Pw3gN8Vh0QwGIePPjrujinxeTJzL91a1aEPpurKF/J8/7l
9eUrAwOD8r179w7E+YbE7LArw6ysrLZxcXGDbWxsanIcg2GOwG7M5WEMS5iv
wH55O3fu7Cooe1lZmRFipc2cOXNGoz0UUAxzcXH5kcZvG/KdHF/Jv0T46n8h
ylH0CjF7fUlJyRv59jm++idfzZvHPJWU2F1c97a9PTtw6hQzJx9HfLVoERvW
siW78ssvzJNiOj1PQiz2jI1lfkuXssBWrVhBSAhb2Eh89Sf0nHIAd+rU6Vfc
LzPhuuP46p98dfgw66yvzwpx3ZvgpHO7d7Ou/BhF45I9wcEF06ezEOIryrmV
lMS8cK12sCUdSHvtWuZiYsLOdu3KdpWWspbv617Ks4T4inj/GdrrS29v7wTE
mjfqm+Mr8Xylo8Nu4bMzsKvsX39lXcgeBXwFnr8q4Ct6lvj778waagWfY7Jm
DXOF+uP/Vm+T7/Rdq758ZWhoePvkyZM9hOML2QeNV82ePTuYclcjDt0EgznL
A1MI8xVi43nExrYisZN8tfrw4cMpX9UrxLKc7OzsBu3lzPGV/EuEr16pqqr+
S0lJ6Q5s/MaqVas+o/k9Qsc2Kb4S7stJ4iu+b5N6nTrw1TU1NbYeyvvySxb6
+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
d08H5bOWUHYL8KAR+sNqwvm6hMVnKyuw1UawVSY4zIPmIEr6Tm7+VdMQ8dS1
a9dMYQNW8GPa4uqIbBl+UQ02YkH2guPbUq5wMXX+rviqNY2n0N4D4Kt5sDu5
yNsra1E8Ql/ICPVijfbdUtx6G6o7ul84pg3VHV4tHz58qC7sn/hsZQi2WgK2
OhsVFRUIW1BrrDVd4Cs18FUCjaFxfPXhCjykeOvWLTPYmBXYX1uSPVZVVamT
HZI9Xr9+vS36ADXtWcBX+vr6v1HOLIH/gL1qeXl5bUEfcDPOk7gfUl0khq98
OL56N3pbvmoMyYKvGiqavwy2sgRbbaC13GArL9pHpZZzOL5qZuL4qumJ/FFe
Xl4rsNVCPluNpjXQjblenuMrTnWRCF914/iqaet98hU9bwO3K+M7NePi4txU
VVVLBg8ePBH2oo2+pyqtz5P1/RAn2lsjIyPDvHv37ut0dHRy4H/9i4qK9GkN
LYnmP4s7j+Or5iOK0eivqqDvqh0dHT1WT0+vZNOmTZ+Xl5drPnr0iNfQfXQ4
vno3IoYqLCzU9/b2jtXU1MwfPXr0ZLCW4d27d2vaNs11ofbf0O/h+IpTXcTx
1Yel98lXsBGlCRMm+Pbu3TvRysoqRUFBocrAwOBYz5491/j4+JBf03hfOdbe
RoibiohptObjPpjwoqOj40b8hjWkvn37JmzcuNEbPvgfY3AcXzUfIR6rIzaH
OTs7rwEH0b4sVR06dDjg4uKSOGfOnMDnz583iIc4vno3orlZ8+fP91FTU7uJ
Oiuxs7PbTHXIb9+J/v7+o8vKyhp8rzm+4lQXCdYPtmzZMgd81VWEr2iO6CaO
r5qO3idfVVVVKYWGhg6lfFvdunVbB22gV/y9dsCAAVPgc+SWr8aNGzeEyony
rqdXgXr16pW4YcMGjq+aucrLy9UDAgLCKdeJsG137959dXR0dJAgj1p9xfHV
uxH46uMVK1Y4o4+XSG0bWivUvtcMGzZszPXr1zm+4vReRPFhz549Xfv37x9z
4MCBtoJ4AftRnTJlSoifn9+YW7duNeb6QY6v3qHeJ1+BzWlPNx7lPRAV4pMq
+TpZ3w8p5VYWLi/N4ReInv/Q8yFqC8Ki3DuLFy/2EvDV5s2bXWk9iOhx4iTr
38zp7UTPkCorK1XE2Tb6FTxJdUo28vTpU15tOn36dFszM7PjxFeDBg1aiHar
Vds59Ny6MZ5tfcii/hzlsqM8NeLqrqKiQkXS/qIk2vO7sLDQ9NKlS22kKTs7
29bd3T2Z1g8aGxun79q1q1Nt50BmlJ9Q3DpmTh+u0G4VEQ/Vnj9//jfzkP+g
+QfwMTxJbZoYifJDwG46SlN+fr79tm3bAgwMDO6pqqpWI0ZFXrx4sVNt55WW
lpqLG0dobiKfUV1drUxr+a5evWomTSdPnrR2cHDYQPmv7OzsjmZmZjrWdg7t
d/Pw4cNGW1vT1PT48WPFvXv3tktOTu4hTRs3buyF/u80RUXFRzwerzI0NHT8
pk2beko7BwzWIzU11aqx9pXlJL/i57HsEhAQMNvf3z9WmgYMGLAcjH4d7fRP
U1PTDNjVotrOCQkJoT2mDZtrO33XonGA9PR0R/zbZ2lpmS1Nbdu2PYv6q/jo
o4/+C3/w0MTE5Fxt51hbW6fPmTOnL+WWl/Vv5ST/evHihWpUVFSclZVVEeyn
WJIsLCyKaW8cBQWFPykHFzirnN6Tdg5UBJ+zntbgy/p3ylo0lvLTTz91QLv/
xdbW9pQ0oQ1nqaio3KF2T/mpUTdnazsHPHYY7OBJz4pl/VtlITCmTufOnddT
vINuSJOysvI9ytFLeaPBWBW1Ha+hoXHdzc0tnubWyvp3cnq3oryBkZGRoTRX
i8alatFrvh39lxirDse/0tXVzd+3b1+j5Mfk9E8RX+3fv78X7nMJ6uRVHfRa
SLUeD7uojIiIGAI7aZZ+ltPbifZxCgsLW62mpvYQsfxxLXoCveDrSW3H0zhX
nz59fkZckrh/XnMRjR8mJCR0ob2HEdNfSxPiv0B/CP5f2zmUv33FihX+zXWs
sKioSNfe3n4zsRPlDq1FVdBj2h+Y/3+px9M4F+w4AXbcoBxynORflCNu9uzZ
Pubm5gdNTEwy0KckZUpRFnQGOiXtOLoWCX2hnw4dOmTJ8dW7EY0LnjlzxsTP
zy/c29t7ppeXV5SHh8dX0NcSNAeaC8VIOeYrug5dz9fXd9LOnTvbcc94OdVF
tAfukSNHeiQmJgauWrUqCDF6zPLly0MkKBSaxFeYpOPoGnQt8ETg7t27+zZ0
nc6HIHpef/78eeP4+PiIb7755uslS5bMWrhw4ZyGavHixbPoesuWLZt29uzZ
js3Vb9M8/Q0bNnTDvfCh/QWjo6NHTJs2zQ/yF6MgKIyvQAnH+M2cOXP4okWL
BuOag7Zs2dKZnsHL+ndyereidlpWVqZ27tw5I8Tp1vBf9kuXLu0XFxfnLkED
IC/IU9Ix8IeutP8G2qdxTk6OQXV1tcT8t5waLpqb9ejRI0XyCfv377ek8cgv
v/xyshRNkfZ5RETEeBpzpDw2dF1JuY45cRInmoNFz5UeP36svnbt2oCoqKjF
0BIxihORuGOWwKeMu337tjauqdBcn1dJuM8fUy5ZtH+lgoICc9yn0bGxsRH1
1fz588Oo3dNep3Td5rzegPqt1Kekuer37t3TmjBhwmRay+3s7CxJq/mS9HnC
sGHDQq9cuaJO16Tnu7L+jZzeuz0prl69eoyJiUluy5YtL9dXnTp1Opqbm1vz
TJCbd/X+RO0W/f3+NGeA9ravr9TU1CrQfw1urs8GODWOKisrdd3c3HYoKyu/
VFJSel1PvbK2tj6Un58vcU/i5i6aI3DgwIE+BgYGJbjXT+sr2vsY/auQFy9e
cOMqQoIdG7i6uqbR/Bhag1lPvbKwsNh18eLFZj93sLmK+ArxeTLia5WCgsKz
+src3Pzq+fPnuzQ0nymnt64/2uOwF/xspra2dr6Wlla9BEbOXrly5RDRvRE5
cXobVVVVaYwbN27uJ598ku7k5HS0njri7e0df/Xq1WY/50qSyM8ePXq0O/4d
t7OzK6yv0C++MHfu3JE0Z0TWv0meBDvWDg4OXtCxY8dfcJ/22trakvbVRR06
dNhL50ApHh4e0UVFReqy/j2cZCMaD05LS7OPiIgYHRYWFkK5SgMCAsbXRYGB
gV+GhISMCw8PD4mOjvYrKysz4Mau3q/ofiMOqe3bt6/tL7/8YpWcnNxpyZIl
rosWLepbB/VJTEzsvGfPHmucb4HraHL1x6khomd5tCf0zZs3jWBPJmCAbgcP
Huxbmw4dOtQ3MzOzR2lpqSmde+fOHT3uGbV00bqCa9eu0b601ujbdjp8+LAL
7mOf2oTjXM+dO+fE3xPV6t69e2L3q2zO4u8vq4X7o5+Tk2O8fPny3vPnz/+s
LkpISOiZn59vSOciJmrKa/4vTu9H9MyZ8nJQPjXEW7cRI0bMGTZs2LzaBL6a
npGRYY12rkj9n+Y6L1LWIiaiOXXkE1JTU/s6OjoesrKyOlWbrK2tj4KLR9Kz
ATqfYytOjSnwlb6bm9sPsLMrtcnGxubK0KFD91RUVHDPBN9SNOaclJTUu3Pn
zgc6dux4vDbhuPT169cH0LMLWZe9KaiwsNCkU6dOKRoaGtcoz4I0aWpqXnN1
dd2C/kFLWZebk3wJcZYXFhYWq6Sk9KQueRi0tbXLdu3a5c5xlXyIxiJ3797t
i3q5V5c8DAoKCo9CQkImo965tQicGl0FBQUGHTp0SOHxeI+hJ9JEuRicnZ0z
EZday7rcTU38OZiDEd/vCuVlkCgc9yQuLi6K5sjLuuxNQbBjM1tb28P8PAwP
pQm2XNWzZ89fYMfvLF8+p6aply9fKs2YMWOciYnJMWNj45NGRkYSRZ+j37kf
/7pyfCUfojH+kydPtvf19Z0+YMCAWR4eHrPd3NxiROXu7j6bPvfy8pq5YsWK
brQXoqzLzunDE+V9T0pK8qBcC9DYb7/9NnTp0qVhogIbjKVjtm/fPujp06fc
XJW3FPnfrKys9kuWLJm5cOHCubGxsfPwb76o8H4sfY7jZsNPODfntYJvo3v3
7qklJib2wb3zjYmJGTZlypQvJk+eHCisqVOn+uMeD6VjNm7c6Ez7a8i63Jzk
S9ROaQ9XtFWTzMxMs7Vr1zp98803lLfBTSD4wz47duxof+rUKVPKxQAfytmR
HInmrFBujPv37yvv3bu3E9p+eGRk5EQhRSxbtqzHzZs3ebTvPe2Fwj0X5PQu
RHZFz6xpTSpsUgf+JGz27NnzZ82atYCv+fAnkbBFQzqGy8NQfxEr0XjUixcv
lNHnbb948eKxixYtChcIf4+DP+iB9k77bilxbFV38dfZtyDfevr0aUNvb+8o
V1fXlUL6bvjw4ZMLCgr06Rg6lvOpnCSJbAPxWWXIkCFfGRoaXmjVqtVFgVq3
bn0iPj6+H+0hztmQ/Ar1owAeHqWurn5XSUnpmUDKysrVbm5usyorK5VlXUZO
zUd37941dnFxOQ77eyWch8HS0jL3woULtpwvaRyBr1qEhYWNVFFRKce9fiIQ
/q4aM2ZM7LNnzxq0R3dzFtloamqqjZ6eXo5IHobX5ubmmTk5OWacHXOqi2hM
lPZLUlBQeNyiRYvnAvF4vFsLFy4cRHwl6zJykiyqn2XLlg3V19c/p6mpWSCQ
trb2RV9f3wjKSyrrMnJqPkJ/rWVwcPAaR0fHTAcHh+N8ZXp6eiaj39+Gi0uN
I+KrsWPHBsJXP/3oo4+YQPj7j6CgoDiOr+ovPl+Z6+rqbsE9zRaWmZnZBvAV
t+cupzqJ9hJfsGCBi5+f33goQqCAgICQlJQUCy4XrXyL1gMibmnv2rXL+uef
f24n0M6dO23gB/S5vW84vU9RHvby8vKW169fby2sW7dutXr9+vUHs47t/wA2
zUap
    "], {{0, 295}, {600, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{600, 295},
  PlotRange->{{0, 600}, {0, 295}}]], "Output",
 CellChangeTimes->{3.6491881113580236`*^9, 3.649188528670657*^9, 
  3.64918885026229*^9, 3.649687737577579*^9}]
}, Open  ]],

Cell["\<\
In the first iteration of our prospective design, the time that it takes to \
charge/discharge the capacitance of the wire is determined by a simple \
current mirror in the case of a discharge and a mirrored version of the \
current mirror for the charging case.  These equations are defined below, \
where the j in the subscripts denotes the number of the inverter in the chain \
from 1 to n:\
\>", "Text",
 CellChangeTimes->{{3.6491828876313133`*^9, 3.649182941322551*^9}, {
  3.6491881415630493`*^9, 3.649188178034389*^9}, {3.6491887075330153`*^9, 
  3.649188716827373*^9}, {3.649188862887486*^9, 3.649188897681562*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "B"], "=", 
    RowBox[{
     FractionBox["B1", "B2"], 
     SubscriptBox["I", "in"]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Nj"], "=", 
    RowBox[{
     FractionBox["Nj", "B1"], 
     SubscriptBox["I", "in"]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Pj"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"Pj", " ", "B2"}], 
      RowBox[{"B3", " ", "B1"}]], 
     SubscriptBox["I", "in"]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.649188721412334*^9, 3.6491887991695023`*^9}, {
  3.649188904026167*^9, 3.649188916143855*^9}}],

Cell[TextData[{
 "We already know that each of the coefficient parameters comes from a \
LogNormal distribution, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDifferentialD]", 
    RowBox[{"\[Distributed]", 
     RowBox[{"ln\[ScriptCapitalN]", "(", 
      RowBox[{
       SubscriptBox["\[Mu]", "n"], ",", 
       SubscriptBox["\[Sigma]", "n"]}], ")"}]}]}], TraditionalForm]]],
 ", as defined in the \[OpenCurlyDoubleQuote]Function definitions for \
distributions\[CloseCurlyDoubleQuote] section above.  Because we know \
(assume) that there is a linear relation between current and time to \
charge/discharge a capacitor, we can assume that the mismatch parameters will \
affect this charging/discharging time in the same way it would affect the \
current."
}], "Text",
 CellChangeTimes->{{3.6491893304815493`*^9, 3.649189390785036*^9}, {
  3.6491894679956093`*^9, 3.649189558036214*^9}, {3.649189780449967*^9, 
  3.649189873435107*^9}, {3.649189999333151*^9, 3.649190007492278*^9}, {
  3.649190072922607*^9, 3.649190083960333*^9}, {3.649190154712199*^9, 
  3.6491901788869667`*^9}, {3.649190228584947*^9, 3.649190255729146*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Subchapter",
 CellChangeTimes->{{3.649190127052782*^9, 3.6491901286800013`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Analysis of mismatch to see how many LSB bits the ADC will vary\
\>", "Section",
 CellChangeTimes->{{3.6491045863140507`*^9, 3.649104600804892*^9}, {
  3.649104977433032*^9, 3.649104979182212*^9}, {3.649176770195945*^9, 
  3.649176834752885*^9}}],

Cell["\<\
Given the we know what the mismatch parameter/distribution, \[Sigma], of a \
transistor, we want to know how much of a change we should see in the output \
width of our N-stage inverter in terms of LSBs.  For now, we want to ensure \
that the step-widths of the output codes are at least 0.5\[VeryThinSpace]\
\[CenterDot]LSB and at most 1.5\[VeryThinSpace]\[CenterDot]LSB.  One LSB is \
equal to the ideal step width of a perfectly matched ADC (or for simplicity\
\[CloseCurlyQuote]s sake the average LSB width found in the population).  In \
this analysis, we assume that this output step width is directly related to \
the amount of time it takes to charge or discharge the output line of the \
inverter.  As such, the problem is a matter of figuring out what the output \
distribution looks like after multiplying and dividing the log normal \
distributions from each other.

It should be noted that because the Bias transistors apply for every \
inverter, their values are taken as random variates from their mismatch \
distributions.  \
\>", "Text",
 CellChangeTimes->{{3.649176848520214*^9, 3.64917689932475*^9}, {
  3.6491769583772573`*^9, 3.649177117323619*^9}, {3.649182680511579*^9, 
  3.6491826986937637`*^9}, {3.649190383282022*^9, 3.649190447047771*^9}, {
  3.6491904772476683`*^9, 3.649190528198125*^9}, {3.649616149449856*^9, 
  3.649616248085235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]n", "=", "0"}], ",", " ", 
     RowBox[{"\[Sigma]n", "=", "0.125"}], ",", " ", 
     RowBox[{"sizeMultN", "=", "2"}], ",", 
     RowBox[{"sizeMultP", "=", "2"}], ",", 
     RowBox[{"seedNum", "=", "21"}], ",", 
     RowBox[{"imgSize", "=", "500"}], ",", 
     "\[ScriptCapitalL]\[ScriptCapitalN]N", ",", " ", 
     "\[ScriptCapitalL]\[ScriptCapitalN]P", ",", " ", "INDist", ",", "IPDist",
      ",", " ", "Nj", ",", " ", "Pj", ",", " ", "B1", ",", " ", "B2", ",", 
     " ", "B3", ",", "popCoverageN", ",", " ", "popCoverageP", ",", 
     "distPlot"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalL]\[ScriptCapitalN]N", "=", 
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"\[Mu]n", ",", 
       RowBox[{"\[Sigma]n", "/", 
        SqrtBox["sizeMultN"]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[ScriptCapitalL]\[ScriptCapitalN]P", "=", 
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"\[Mu]n", ",", 
       RowBox[{"\[Sigma]n", "/", 
        SqrtBox["sizeMultP"]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", "seedNum", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"B1", "=", 
     RowBox[{
     "RandomVariate", "[", "\[ScriptCapitalL]\[ScriptCapitalN]N", "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"B2", "=", 
     RowBox[{
     "RandomVariate", "[", "\[ScriptCapitalL]\[ScriptCapitalN]N", "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"B3", "=", 
     RowBox[{
     "RandomVariate", "[", "\[ScriptCapitalL]\[ScriptCapitalN]P", "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"B1", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"B2", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"B3", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"INDist", "=", 
     RowBox[{"TransformedDistribution", "[", 
      RowBox[{
       FractionBox["Nj", "B1"], ",", 
       RowBox[{"{", 
        RowBox[{
        "Nj", "\[Distributed]", "\[ScriptCapitalL]\[ScriptCapitalN]N"}], 
        "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IPDist", "=", 
     RowBox[{"TransformedDistribution", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"Pj", " ", "B2"}], 
        RowBox[{"B1", " ", "B3"}]], ",", 
       RowBox[{"{", 
        RowBox[{
        "Pj", "\[Distributed]", "\[ScriptCapitalL]\[ScriptCapitalN]P"}], 
        "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"popCoverageN", "=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{"INDist", ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0.5", ",", "1.5"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"popCoverageP", "=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{"IPDist", ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0.5", ",", "1.5"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"inputDistPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{"\[ScriptCapitalL]\[ScriptCapitalN]N", ",", "x"}], "]"}], 
         ",", 
         RowBox[{"PDF", "[", 
          RowBox[{"\[ScriptCapitalL]\[ScriptCapitalN]P", ",", "x"}], "]"}], 
         ",", 
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"LogNormalDistribution", "[", 
            RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], ",", "x"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imgSize"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Device Mismatch Distribution\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Sized NFETs: ``\>\"", ",", "sizeMultN"}], "]"}], 
            ",", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Sized PFETs: ``\>\"", ",", "sizeMultP"}], "]"}], 
            ",", "\"\<Base Distribution\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.75", ",", "0.8"}], " ", "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.45", ",", "Center"}], "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Mismatch Coefficient\>\"", ",", " ", "\"\<PDF\>\""}], 
         "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"outputDistPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{"INDist", ",", "x"}], "]"}], ",", 
         RowBox[{"PDF", "[", 
          RowBox[{"IPDist", ",", "x"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imgSize"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Circuit Mismatch Distribution\>\""}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<NFET Dist\>\"", ",", " ", "\"\<PFET Dist\>\""}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.75", ",", "0.8"}], " ", "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.45", ",", "Center"}], "}"}]}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Mismatch Coefficient\>\"", ",", " ", "\"\<PDF\>\""}], 
         "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Area under NFET mismatch distribution: ``\>\"", ",", 
           "popCoverageN"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Area under PFET mismatch distribution: ``\>\"", ",", 
           "popCoverageP"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"inputDistPlot", ",", "outputDistPlot"}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", " ", 
      RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.649192282071698*^9, 3.649192392533737*^9}, {
   3.6491924697863283`*^9, 3.649192507973145*^9}, {3.649192556074923*^9, 
   3.649192613471669*^9}, {3.649192674328663*^9, 3.649192753173143*^9}, 
   3.649192789188101*^9, {3.64919282681257*^9, 3.649193132376313*^9}, {
   3.6491931636913843`*^9, 3.6491931943642883`*^9}, {3.649193227120216*^9, 
   3.6491932685863857`*^9}, 3.649193299953759*^9, {3.6491934427771797`*^9, 
   3.6491935517177877`*^9}, {3.6491935912366123`*^9, 
   3.6491935966531067`*^9}, {3.6491936499840937`*^9, 
   3.6491938133549023`*^9}, {3.6491938591042633`*^9, 3.649193901882885*^9}, {
   3.649193954388028*^9, 3.6491939847674503`*^9}, {3.6491940534998083`*^9, 
   3.649194094290921*^9}, {3.649194275578487*^9, 3.6491942761074038`*^9}, {
   3.649447525144251*^9, 3.649447664998349*^9}, {3.649448195982876*^9, 
   3.64944821860462*^9}, {3.649448409729856*^9, 3.649448450924444*^9}, {
   3.6494485578567467`*^9, 3.649448573934882*^9}, {3.6495256486208067`*^9, 
   3.649525664290029*^9}, 3.649525712468791*^9, {3.6495371175112743`*^9, 
   3.649537126927887*^9}, {3.649601337320499*^9, 3.6496014458191233`*^9}, {
   3.649601493676774*^9, 3.649601494306614*^9}, {3.649601567483523*^9, 
   3.649601573043777*^9}, {3.649601616781439*^9, 3.649601728161009*^9}, {
   3.649601801310132*^9, 3.6496018619534903`*^9}, {3.649602036691839*^9, 
   3.649602119447192*^9}, {3.6496021616271544`*^9, 3.649602264234878*^9}, {
   3.6496023120089693`*^9, 3.649602393910076*^9}, 3.6496024891710587`*^9, {
   3.649602544803109*^9, 3.6496026210034647`*^9}, {3.649604037018594*^9, 
   3.649604066480753*^9}, {3.649604168813745*^9, 3.649604193432225*^9}, {
   3.649604717494769*^9, 3.649604787672187*^9}, {3.649613324876253*^9, 
   3.6496133292852783`*^9}, {3.649613504231946*^9, 3.64961354780894*^9}, {
   3.649613758987499*^9, 3.6496138801590652`*^9}, {3.649615487534258*^9, 
   3.649615589713388*^9}, {3.649615621409176*^9, 3.649615658485907*^9}, {
   3.649615740095504*^9, 3.649615775590734*^9}, {3.649615829385851*^9, 
   3.649615851209683*^9}, {3.6496159769896183`*^9, 3.649616066904285*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Area under NFET mismatch distribution: \
\\!\\(0.9984595733437829`\\)\"\>",
      StringForm[
      "Area under NFET mismatch distribution: ``", 0.9984595733437829],
      Editable->False], ""},
    {
     InterpretationBox["\<\"Area under PFET mismatch distribution: \
\\!\\(0.9964352921302561`\\)\"\>",
      StringForm[
      "Area under PFET mismatch distribution: ``", 0.9964352921302561],
      Editable->False], ""},
    {
     TagBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
f2IrgpE=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
f2IrgpE=
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJw9d3VUlO0XLR2KICkYSEqXggHMewZBlG5BRaRLQUBKkBAEkU4FCSmR+gBF
QpRGGmkYmqF76Bjqzl3r3t/8M2uv55l99tnnvPOew2n6UtuChIiIaImUiOj/
fitbLHTXLFogRP/vM1/w0HSCTQH+P2Y52x9ezKb7Pyx6h+lrMpv5/7B0142i
aDbn/+GaxHqpMLZ34Bj/Brz860n834a4B7PFwqWsLJdx8y5Gc2cc2we2THAr
fpuq94qZiypWKW194ydURlt+eNIqJlrWdf3+ffZqiKfMUy5tsLlh4D86XB/S
AD2uPigl7tCbL7+/EonfbgHbv2lPbeP7b29GDjQTE3eCb9bbkpaVp9LNtY3V
nbI9MKAu3rzs+lnG5rXSuUcrfcDEv/NaZfW9bO4l+qdGu33Q0vtIbE0lRHal
EpNvRtQPzkoWeE2OCFl7EmtVe6Z+MJ3F2ShKxco6hwSG+Mv2Q1wnw2PyjVTZ
UhH1kSDFfjj3dRMbJ5chu9fJLBSu2Q89/8bSYye/ynowfW2NN++HiIblToUb
+bI+yfXUBaH9IOt8i7hFrUy2BkIeFX/sBx0GwfIO8wpZkintnPLUfvgZY0f0
DFsp++7a1IP6n/1waFQu/eFqvSzlc8eFjuZ+QJ372+zwslk2uJAoCDPaD4Ir
hkbeQp2y7VrNg2Nz/eBxbBGm+Klb9tx2BN/0ej8c5QtO1GN6ZdU/6rst4Ann
v74/WzQZkI28fbVplWwApEhVZ9VkhmS7h+dYtmgHwJ/quVWg/agsg1eB5T7r
ALQIOXFwkk7K6l51LT3mGoCGSG4ZKcop2bhaFAWpyAAM6EbwcSnPyA6YkT+k
ujUAx+p67Sq9c7KsFB1fz8kNAA/i5b6Suyj7KDt2h0FlAFgS5eSEh1dkPysb
3mPVG4B73VHWyVLrsqMr3HFXng1A5Zb5VonkpuyViOUZLpsB6PClM89z2JY1
kiiW5H81ACajWh5v1ndlU3s93ol4DYDKHy/Jtd8HslMud/uuvx8Avm9lc6kj
R7LcrGd4bkcNQJqa6Z8YYSKUeUX3K1TiAPTpkPpGXiVBZRkm1N/9OgAkmlzu
uapkqPkTY8YHhQNwlzmN3qaCAsWfxm+m9msA1kbfe1M5UKNs5dd/aNcPAPH3
wjehLjSovNkyEoOOAVDWisD39dKhVt77aD8dHIAY/2azx630KFHB++mm2AGo
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
gR+R/wPj/dah
           "]]}}, InsetBox[
         TemplateBox[{
          InterpretationBox["\"Sized NFETs: \\!\\(TraditionalForm\\`2\\)\"", 
            StringForm["Sized NFETs: ``", 2], Editable -> False],
           InterpretationBox[
           "\"Sized PFETs: \\!\\(TraditionalForm\\`2\\)\"", 
            StringForm["Sized PFETs: ``", 2], Editable -> False],
           "\"Base Distribution\""},
          "LineLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.75, 0.8}], ImageScaled[{0.45, 0.5}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"Mismatch Coefficient\"", TraditionalForm], 
         FormBox["\"PDF\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->500,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotLabel->FormBox["\"Device Mismatch Distribution\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}],
      InterpretTemplate[Legended[
        Graphics[{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
f2IrgpE=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
f2IrgpE=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1:eJw9d3VUlO0XLR2KICkYSEqXggHMewZBlG5BRaRLQUBKkBAEkU4FCSmR+gBF
QpRGGmkYmqF76Bjqzl3r3t/8M2uv55l99tnnvPOew2n6UtuChIiIaImUiOj/
fitbLHTXLFogRP/vM1/w0HSCTQH+P2Y52x9ezKb7Pyx6h+lrMpv5/7B0142i
aDbn/+GaxHqpMLZ34Bj/Brz860n834a4B7PFwqWsLJdx8y5Gc2cc2we2THAr
fpuq94qZiypWKW194ydURlt+eNIqJlrWdf3+ffZqiKfMUy5tsLlh4D86XB/S
AD2uPigl7tCbL7+/EonfbgHbv2lPbeP7b29GDjQTE3eCb9bbkpaVp9LNtY3V
nbI9MKAu3rzs+lnG5rXSuUcrfcDEv/NaZfW9bO4l+qdGu33Q0vtIbE0lRHal
EpNvRtQPzkoWeE2OCFl7EmtVe6Z+MJ3F2ShKxco6hwSG+Mv2Q1wnw2PyjVTZ
UhH1kSDFfjj3dRMbJ5chu9fJLBSu2Q89/8bSYye/ynowfW2NN++HiIblToUb
+bI+yfXUBaH9IOt8i7hFrUy2BkIeFX/sBx0GwfIO8wpZkintnPLUfvgZY0f0
DFsp++7a1IP6n/1waFQu/eFqvSzlc8eFjuZ+QJ372+zwslk2uJAoCDPaD4Ir
hkbeQp2y7VrNg2Nz/eBxbBGm+Klb9tx2BN/0ej8c5QtO1GN6ZdU/6rst4Ann
v74/WzQZkI28fbVplWwApEhVZ9VkhmS7h+dYtmgHwJ/quVWg/agsg1eB5T7r
ALQIOXFwkk7K6l51LT3mGoCGSG4ZKcop2bhaFAWpyAAM6EbwcSnPyA6YkT+k
ujUAx+p67Sq9c7KsFB1fz8kNAA/i5b6Suyj7KDt2h0FlAFgS5eSEh1dkPysb
3mPVG4B73VHWyVLrsqMr3HFXng1A5Zb5VonkpuyViOUZLpsB6PClM89z2JY1
kiiW5H81ACajWh5v1ndlU3s93ol4DYDKHy/Jtd8HslMud/uuvx8Avm9lc6kj
R7LcrGd4bkcNQJqa6Z8YYSKUeUX3K1TiAPTpkPpGXiVBZRkm1N/9OgAkmlzu
uapkqPkTY8YHhQNwlzmN3qaCAsWfxm+m9msA1kbfe1M5UKNs5dd/aNcPAPH3
wjehLjSovNkyEoOOAVDWisD39dKhVt77aD8dHIAY/2azx630KFHB++mm2AGo
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
gR+R/wPj/dah
             "]]}}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {"Mismatch Coefficient", "PDF"}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 500, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
          PlotLabel -> "Device Mismatch Distribution", 
          PlotRange -> {All, All}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          LineLegend[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]]}, {
            StringForm["Sized NFETs: ``", 2], 
            StringForm["Sized PFETs: ``", 2], "Base Distribution"}, 
           LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {
          Scaled[{0.75, 0.8}], {0.45, Center}}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True], 
     TagBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
kA0l5P8Asje8LQ==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
8fExOOK3b9ZG2iL/BwRfIvs=
           "]]}}, InsetBox[
         TemplateBox[{"\"NFET Dist\"","\"PFET Dist\""},
          "LineLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.75, 0.8}], ImageScaled[{0.45, 0.5}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"Mismatch Coefficient\"", TraditionalForm], 
         FormBox["\"PDF\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->500,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotLabel->FormBox[
        "\"Circuit Mismatch Distribution\"", TraditionalForm],
       PlotRange->{All, All},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}],
      InterpretTemplate[Legended[
        Graphics[{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1:eJw9l3k8lO8X90lF9n1Lske2FmSb+0yREGVJdllTQna+yL4nOyFbyJ6EJNkT
CoWsZRvGvo99jPF4Xq/n+c0/83q/7nNd55zPOfd1n4vX8rmOzSkSEhLK0yQk
//df3Wahr3nRBiH5f7/58oeWkxzK8P+ZlWowporjwf9YQo75XSaH9f9Yvvd6
RQKH2/+4+c036VccIf/j4MCXXlEcSf9ja7d1jkiO/P8xRZLa243NarBJu6Tb
YPmP7XPvtTt3uJsg5Qaf/poAGb9B8Njfby/bwMbtI/K56pvI84+u4qnbP8BM
tjtlcqtZAhc31ElK+hs6XzU8FD3Hc62zpb3pt2I/pIf/zDtvPS319D81GsOV
AVjKYmwhpT+UaTl37bjMYRi2aimKaxVeyhbktRE5Bf+C6uEFJ/r7y3Jo1oZc
3fIxcOyUMxtw3JcX7xirbb88Cf0a+384xgcUBtC6a8VrU/BJkv5iAUOmIj57
JrNyawo0+4h/jzVyFHmPXTW/7k9Bf69xYqVKrqJjQ1JZ9ykMxDK8WSHdLlAk
lx+yW2fFgB4W9cX0XKWiRNpjzv3zGLj6IvfwWLxa8cH+7g8SXgxcPHpew5FQ
o5hTwybCKIqB/u5zM+dk6hXbWYpGOK9g4Bt/Z1NiWJPiqptsBL80BoT2lK8w
Z7Qoyl83nJcCDKRFqdNZ7nxXDN/8T0VFDQPhUsy+LoZdigMf0t/p62JgXioE
zUnWp4inFdUzN8DAcXy7ksdevyKP49fTT00x0PplW6mZf1BRpedutbMlBrZl
HxhSxQwrOoiNWXnbYiAk4LUvLeqvYtJLe6Zgeww8tda8KS07rli3RGh96YyB
99y+50eVphSn1F65JHlgoPhtaLQa57Ti2eILfJk+GLhvPOH7TACrKEZR3vcu
AAN/b/2++812TlHXFgksD8XAM3qhSNulBUXv9l9XPkdh4IFx5hu6qmXFHMFH
U02xGCjIcern/7Gm2B6yHtuZhIFk7lNBtpybiqsz/tCXhgFDVfX1iGOcIrMS
/fpoFga091POrbDvKMrn5mRN52Hgx6rlN3L7PUVz0qv3losw8LgkbWyKeKAY
Zt5ytPUeAyJqxz/ZRgiKZU3a7wmVJ/lJdG3tEY8V/3BPm5ypxcCdmozLbQ2k
KPwLF2raBgyEhrZN3SslQ/GMn6pnbcWAXR/Wdq/7DEpFMfHZxQ4M8P88Ncgs
TIGyf8N/XrgbA8+R6c3QVkpUAr7q55U+DIBzt1JjLg3qi6Gyt9wQBnTCM/iX
bOlRU7UDIrf+YeBnwuaLTmFG1Fl2m1H1KQzkfnz9HM3OjBLz3InQncXAaEmJ
PJkCK0p3KFTWZAkDjflw60YKO8pbmnXBeh0D5t/JmYMlz6NykgpeO2xjIMbs
iwsHDTeqfUvmjscBBjwzRhRm0nlQKzodu35EDFC8osP5GfChGCv1C8LJpgEe
U5u5Kwmg5BgW9OIopiEZ6AXQ5kIocyevM2k006DRfvpee5UwKuw3xae3jNOg
G2Vk+VhJFFUmkWZdwjYNaT1O5qQsEqj+VyLMVVzTwJ5Abxz8+gpqf+XLt6+8
09CN6XuL1riGuqih7tomNA3By6atCWJSKJXSv3w9otMgfJHgU6Eog7KnfNY/
eGUaRl88ey4dKIsqaGCtUZeZBns+rbmQGwqoSafWtCaFaeApMfnPTBZBsQs4
vpC6OQ2tbSJnWr6jUTrDHBbFKtPg9UTd/mvGLVR01Hdlbo1pEFA5a/f7nTLq
O8pZOFF7Gv6Uf5kQnFNBETe4qCn0p+HeRAL3Mys1lGx+57qvyTSQtZfH/OPX
QLnou/3ZtJgGfzVpe22J+6hSSp7Pj22nwSFlcVnktjYK29CV/s9+GnJUWN4y
8eiiuJ09/bRcpkHyzYWy52J6KAMBfsvvntPQRShXlXuuj4of/nVb/sU0aMdn
tcyvGqJ+RnmLfAiahmzqLAbvchPUaUSIRiBiGvL/nooL/vwIhWz2baS+moYj
MvMprggLlGf+iwGaxGlIatSouGluharQF6kNSp0G3os61iFPbFBLlINv9jKn
oaRaYib3nS1KoDHA3z5vGqx+kYb84rJDmTqLWWGKpiG86nN2zR97VIrAiMrD
8mnItZWmT+p9juodDr7cVTUN/z3NGeF85YyifClJi/4yDeeJpoSzJq4oJeTf
ZnXjNOj4tEzwGLqjfDfDBkXapsHoOhX/WIQnqib/2pesH9NwW/mCKevGf6gN
/YkMpt/TcGz+LIonyRclQhUVEDEwDS9jh41+ePujLBulrY9GpyHB85a4lF4g
KsMZc8dlchreffcj32EORg0JvBKdx05DbU7dK0eSUBTdiCydydI0CH5tQDef
D0epvsTietenoXklIurps0hUEBI3dHvnRJ8yJ26d7Zeo+k2Fujr8SX8JJlP/
+RqD2smfz5QkmYH54ZC7UzNxKAmDxMD8MzPA1XjOXj42AfWECmw4qGZgI4Ti
nYNVEiq3cUk1hn4GaDIc3iLWKah/ziliZKwzYKgwU9eRnIpiFrxF73V+Bjxv
2asGENJR90ZWt1Z4ZoDueWGocmYmKuJl2rCF0AzEK2nSfUByUC3I7a9DojOg
UGRZo9L3FoXf3Mi6e3UGKNaTv0RG5qGk3mUENcvMwHOW0w8m7N6hHA1UH0sr
zkCKB05z16sQVUi1rVZycwZ6b4TcGfxcjJpqzBa/eGcGhv0Lg4dFy1CcLncZ
kjRm4KP6puKX0XLUA8G9bQqdGZALe3Ln/kwF6tVI7sgL/RlgGOE9pvGtRLW/
vFePM5kBVwPC0EX5ahQJ4LNtLWfgmaHRux6eGpQ87l3wmO0MYHn7zQqv16Jc
32nbajvMwORs3mikRx2qzOBIvd1lBr4rPSB7t1qPmqMqllDwmoGAC7/jgjKb
UBebHjBWvJiB2PUzaWG3W1AGLiS7AsEzkBtmI9I93orqGtFvoI05sbf+TZfl
144K+jvPYpc4A3H6P9KzgztRsmOejt9TZ0BgaIfj2aefqLVx8g6erBmY5Tiu
q2frQeVPvr7omzcDMdxiMpnlv1FGmEtew0UzEPHdZ/A69KHoZ04mjvIZeMvG
uDP/vR/lOzccuFg7A2rxkfWs8kOoawu2f5UbZ8CXqiDylvgIamFx71rOtxkY
ihuKLVT/i8paDn952DkDtZ9Lr35KHkM9WGXDPvw1A3fj7ewvMk6iKNcLFSv/
zIBGVBZ+EzOFat64kUwzOgM6RpmjhfrTKPFtfZW2mRkIuxxBPM6dRWF35rMu
Ls7AiCTX694X86j0Pc8977UZaLioYDXiv4jSOiDXGtqagb6bhQJSZcuos4ev
i64enPSP6YIk6uwaqp5wifQVcQYwqOKFdtUNlAvxs+ECGRZ06X8enyreRE2Q
jlBm02LBN2bhT1XLNiqJ7IkVngkLTA5Sl3757aLUz+x/1ePAgsIvUqOeR/so
EvII5o/cWFj3mO/3ssWjaijYHagFsEB8vVjanUo4OY+LvtuKYGFj6dDuaJeI
4qOW5f4mgYWSRIGjhlYSJJbO4Pd/clh4LrKwLPOWDFFhWLg0iGDhcbCzYrTi
GYTA6BVwRRkLXq6aLcr7Z5FKZorRl2pYOP+tL7t/iAJ5wpp6df4eFkyvS0oO
/qVEuNmFo249wIJ8kwwTFzkNMsBRO51piAUj/56oEjM6BH1hJPGBNRacVX6q
WtxjRHa5n6x8eIqFxbNnGuW/MyFlPPvKVM+xEOkl5TFrwIJY8kVkPnbDQkYM
y3gAFRvCLsC+2/LfyfpcYpLOJDvyS7Do3gV/LHRZpZ/+McSJhFySLfQKwQK7
+BKN3zYXsnnZwEAyFgtc+eESh0M8SJHYQkVUEhZSGGVGNy7xIWYSXufm0rDA
vKOieDWBH2G+QmF5MxsLPg9dQl+xCSI/r6bWZeRjoUx2sWn3ixAScF2Yab8Y
Cx2+0XP+PsKIjHTtM90PWHAfzmM1N7uM5MqOcFHWYSH8y/nhtngJxED+ibtN
00n+gXWkLa5XEFrF/Z7mNizovS63D6u+irShIoS4fp7kM6kQ9ZX6OuIN7P6e
v7EgeJzoSOYnhVy5WTTcP4AFLNqe+gKlDDJ3S/aKxN8Tex6TXWzlDURXxQCD
xWJh5Yq1SbylAlLHdPX3zCIWsu7ML9ipoRA+zLmG6TUsLOXp+5ZrARJVPl2C
2Tqp/w/zDekGNILz+Zo6tY8FPw5u26fYm4iRWlLY5BEWilmMHnFeVEJaWB3c
Jk7NQiO5o0OwozIS95Fba4x6FrQYH7p3aN1B9v32UP8YZmFpbuC695wq8kij
V/Qv6yzcqFmbSklRR9o5ijlGz88Cj1hNRoulBiIxH0g+wjMLMi+6dT5r3ENS
qo12hgRnwbaBNeaSqBZyFHh9ZvDyLLBUfR1tQGsj3VyzjX+kZiEt3aDXK1cX
kVpqKOuXm4Uq22+PxjYeIG8+p6T3IbOgqeX2L/LBQ+RU6POIXqVZwCSPk3T/
0kfsdFQ9fqvOgtv4x9ckFoZI/0Ve61+asyDS4+idRm2MyK0eaPfozELNvwdl
F/6YIBQRpeJdJrNA4ZlvVmdsjjjphZz/aTELZWuxRGt7C2SYz/Tcj8ezQO5F
uUkRY4kgG9J7Hc9mQaPmUlthixVS0EA72+40C5PqYz7aFDYI7cv5/u/us/D3
S5KeoNVjxN2gubnNexacwClZ548torzlnNEaMgunr63Gdu3bIWXN6lEtkSf2
h9JfeyrsEaYYfq/mmFlw5RBkSg12RLyNCTZNibNAet65zljOCZkWHtRtTD3R
r2dXYR6cEfXd9zcbMmfh+R8mlbsPXZCP38Ik63NP8p//luD0whUJMJOlqiub
hXdzPm8wpB7IgijDQe3HWbj2TTsAbeGJ3D9YnPtcMwtjgWuGEYNeCHfSm9ZP
zbNQPyKnn0nqi4RZuFVUfz/R25F9av/rC2RNQjOr6ueJv1H338Zx/kjDD+J/
HwdmwWOohzWmPRAReD1sWzE6C9/NGzD3xoKQaOsKvQ8TsyAr8F+I7KkQxOTY
4ur7hVlQNMxx4A8KQ9q65S+Wrc5C7IRMJMNEOCKazkRTipuFC5E5emT3IhG8
1PeFIsIsKDwo2jF1jEYsT2UNFZLOQX/2Pz1e3hjkx2+PtoKzc3BzKX4hayUW
SbUTzsmnnwPPEDau14vxCIksaUweyxzcGZ9/HLufgNie+euTyzkHLUeD/7Wx
JiEyOS/1cwTmwJ2/gyAekoJUtPj/R3V5DuwoHm/74F4jojOubzwk58CHJU9h
xSMN4REymdSQn4Pxu+VmDzoykDd3tEhrYQ5QsT8mKVKyENanyvz8t+egdgZn
Lo7OQajKxGwP7s/B4NVP95j0c5GwHp5Ia705IB4Fift75yEk68ylv43mwC2z
Oo79Qz6ye/Vo7Z3NHLQOYL5U3S9EnHQ36RmezUGN5sHO94YiZNlt9pqv0xxs
bGrOXbpZgkx97vHQ8ZmDcrV3B6nR7xHj0ZbUhoA5ODo38ExC/wMyhP9UJxw2
BxRqXiP0WRVIFyqLSIybg9jk2CH395WIyqMEHruUORjqRN1f7qpCmgPCbg2+
mQNNednf+fhqpOabY1hpwRxMP2wbfxr9Gbkya1nEWjYH5tpjjQ82a5HSs/o/
Az/OAZ3vioGSXR2Sowa0BvVzMGtCmuOS0YCcf3b9yreWObgfhC/Y129CUqIv
6Uh0zAH6eaAoeUoz8vI3Xcrp/jlo/pHM+jK+FTm7SVb7fHgO4rHGzVb535AA
xv3Rv2NzwJ+RKajc3oZ46E1d+Dg/B59cNZUV5TuQDY8B4Fqdgxtyw+cJrzqR
Z6mdFuG4OWBzFG9j3v6BmP+reGd6NAcK54I2mA67kX+E/I7OU/Ng5Gv1cT/z
F/KQO23xOsU8xBwzjKeJ9iJ3LQLFKZnmoSnzeUcqRT/SHuR+3519Hkorp1XF
KP8g6PynzlMX5mHWPrz2PscAIjOv/alG+ORN9Cu5dmg5hFRQqAzzSsxDvmVR
zGbWMCJ6Wf4g+vo8COU3C+ktjyA8DnwoK2QeoiZ88rNr/yFvYlgf/VKaB73r
t9oUFMYR1grKQDm1eTDo4DCq6JtAqLZwbXQP5oEtIdmLyI1Bwpjn57wN5+Fs
tGbdGuU0QiLzj2LObB5a6pVFB07NILte3zTqn87DfImoXyf7LOKU/tnx0vN5
sBSqsaWWnUOWv5bGJbjNA0LWx1hhM49MERMHnvjPwwvhI8GetUWEeqX3pWfI
PHRIT31eu76MyI7SKIVFzoOPAEUFRcQKElcV/jEvcR7Yu1QUGh+tI/U5bU8q
U+dBySUZjF02kIVXpDwtmfNAlb8TWIHaRNBPfGImCufhjZT77tMNHGKvV3t7
tWwephcu26WNbCGpt3YIhx9P9nsw9V22axvZ4Hr+jKN+Huwkt4yi+naRt32W
qg965yGaRKmk4/kh8qsx+9hycB5439yWL64lIPjSsRrnv/Pw5a290AEdEdEJ
eygYi52HzsjAr7weJODnmjiWuTgPTnZ+GJQcKZSY9yaWrc2DI+NPzd+nT8Ep
BfVTP/fnwb7omdzHGjKQEA7/MnI0D1zxrM5fMk+DEUub0/ypBSAxRVIKYs5A
5Tpq8jTNAkwMcdN8jyUHy/yr9cC7AGTXPiTiOakhJt7R9Z7QAoynljzFm9BA
nV/pZVPRBWC9Oop6XkYLjIaCad7SCyDH9FZxoY4eEBVLrUj5BfDn9vCz82IA
u+vZ5KmwAMKE4MAmFCN8o+Hw+KS2AGe/JQWyYJhgA68n3nZvAdTU7p/53MQM
XAsJ2H7dBYiL9Aq0L2QBt1Zq3Q3TBViQokt0TWQDAU+SK6IuCxBVXTqALJwH
LWvUvJznAjQKmhp+4bgAvtreWaq+C2CmkJ1mpM8NA6Lb1I/DFmDLX2zRwZcH
SDiutrm9XIBFHhnlQQleEDvr6BMctwCvGsqGkAVeCJmaX8xJXwCKc2wOF5z5
oaJH4O2H7AWQ8NsX4LwpAGN1FgaN+QtASrmQLswhCFLJ/9r/lS/AdF5rX+60
EMyq/c5j/XbiP/DieOnMZRB4eSk2vnMBks3S3jUyi4F1t7839a8FqLnBjdbX
EYfpe1e0T40uwBqO9y1xWxJ44yIUX0wswFBh4H7I+ytg3jd1aX9mATzf4q78
tL0KE7rxxNW1BdiZGnp5aesaXEheXHyyvQBl9LwvfrddB5Ohm4MzBwsg5h7S
MJQlBf8McKWjpxdhx7n0FspBBkZMdQ2/cy7CT3GBv/G+8sCWXaqM5lmERnyJ
4N10BXg4RXblq+AipF2ZM7zwTREGLKvPfryyCCu/an5n3wBgyqfGicosApX6
i276W2jQmbUeL1BYhIar91o/rKGhz5alOkNlEUjxmKxl41tAX+yQzaaxCMKH
TM1ELiXQWvoelaC9CFg7cT+TWSX4Ze9hEWGyCBGPne33o2/DT+dhWjeXRXg3
dXOQH9TgXJUkfs1zEfTX7u5v3FQH1e3w2acvFmHcJ+EWcu8udHjI1j+KWIT8
reczGSGacLY2rvDvq0WgvLHzT+/DPVA5WEjQS1yEsJi/xhPY+9Dmk/b0btYi
WBWQ0mBltYGsYfNBe94iXPo18hSH1YZbRDX0zeJFsL48ySzwWgeaA/CsN6oX
gTcr7OVX2gfQEGrcxvdzETx/6uPjtfSB0F71IfP3IvjpbQZGXDcARQrqN+yD
i/BRKiHfhNsQ6qLqnWmnFmGSxFIuldoYDrqYTSNnF8G8ZogpkN4EZGkcVE8v
L8LqjR/P1C+YQk3shYv4nUWQ5Sl3T9J5BDu97pTuh4vQsqV9rx9lDlKMv3bW
SZZO7pd4bqNhc6hK8uuepVoCcm586ylOS6hIm/yvj3cJ7rFO0AtMW4O9CNff
a5eWwDaf44xftg0IfzGQTxJbggeV28lLlo8he6QP//DGEjhb8SaVEWzB6Amt
ca3iEpD4Lgqb/nkCrPvqXzluLYFPwHHlUMVTiGFr8xnTWDr5Ph0S5wKegXoh
yRhKZwle0Ju1Ylzt4ewNlGK2/hIcLVyMcHB0AL+HNQQLyyUYag0go/F5Dg7J
RS/mPZegn5nE5CbBGYQFZ8dVXyyBao3QdcrXLoCt5kVKgk7ii7T4GCDjCiYD
6UT7V0vQrTyVvhPsBhpMr/xxuUswuds8lWXiCRR5PyZ1i5aAgyrknBOPF7Rd
O4v+9H4JXosWXjte9AIFHX8Sr9oluJruXLUa4w2X450Dj3qWQGQJ8dAR8IM5
nnKM2Z8lEHdzs9Pj9IfciqWbzSNL4FE3WVFKFQCcvVangmeW4M5ROzqEKRDO
0T0MpjhYglsj9Xn02sHQlpUw85S4BK34pxeil4IhQOK3UhfZMnBXcNfcigiB
fU3V0zG0y5A6nvilozcUFqLlQ5kEluFNqM0ee1oE5HN5zrqJLIObbQWXjn4k
mJdV3R6SWAa/2JyxbM4oGO4SO5smtwwBmqqm6xUvoZ3yYjj3/WWwDAtqrLkY
C0HpxvP+D5bh+s9XHdun4wC5nHoHY7gMLgxlL1hexEGNGgNFvvUyjE3t21d4
xMO7CLJIEe9lCHR5zykdnwiM2Ag/Cf9lyJ28zPaZNQkCgNbtesgySJjc+fow
OwmMdtkfoWKWoeU9+0XxumSgs5aQ1s5dBuZy1M8dtlTwbaq6/LBwGfCW5zb5
alNhiVOOx7hsGe7whv9dN06Dtj4lKpuaZXiqcUG3vDwd/gNDjNfPZVB0jzOr
CMqEufSJoRe/l0H7yenQ7ptZ8GDXqjtoYBlO20pIcZzJBon3jp+jJ5ah3M8t
SFUjB2Y4Q17l4JYh+RPbnzj8W9DcLZfr5FyBq8vlb6y73kGdtpRkz8UVKHoW
+ltGuwCE338R6BdYgaa3g32dowVwyrqNbkxiBXpxcXpGW4XwuW90dv3WCsiM
Jsb6qpWAgPijf9t3VoB++nZK8lwJJERgew80VuCp7/vinrBSsIf1r2T6Kyfn
DMuf7t4y4H1/OoHt2Qp4GK1/sov+ADEUUeFcTivQpehmt85bAQQruhe87ivw
YEzVxN6/AoY4OZ+I+q/A4tvuoh/wEV5GSCKQuAJ1Dpx3eocqYcfKaOnx1xVo
sKyJELeuAQ+mQ6aR5hVgt6tw71msgd3WNyi19hWoSM+TOOPyGXZ5x+NE+1aA
PM/ggWVULexPPrqxMbcCuspjdDP/6sArlsTCYmUFjuvkI7Q8v8I+8jaqf3MF
Np29D/NY6uEgc3q8mrACHd3ZhwLGDYA3tgn5j3EVGPz4C/XONIM31dnyJbZV
cOUJYLr2qBkO6wqGjS+sAhteXaWkrhkIHAuXEeFVIDO93xPk0QJHw3Z9p5BV
OJqIO2176huQPHDijn66Ci/e/vDLfN4OAWQMqkeOq0AhzJ5bPtsOpFUfnR3d
VuGJ34J5hWkHnGLcatPyX4WnKX7ib3Q7gazX/RlL8ir0NpLZ5Ov/hBB/1uSw
9FXo2DVv7h3/CaclPzfuZa8C5dnhPPbHXXA6Zp/hb8kq7EZ/MaN/0Q1nNXxq
s5pXwd6RN0Tq+y8IOzw/Tde+CvwcLtT9Jr/hbGk9VWDXKkh+an3xafc3kFMS
zayGVsHAON33Y2ovUHQGnBFeWYWtx8lRbpg+oFIO0/nItganykdJI94PgGLT
c4Z2rjV4fyzLb3p2EBzlDXv/8q5BiPJsgY75IPRfEbt3WmwNtj+wOhWwDUH6
hX41ffQa0I6N3RBMGgbhvQs3j56sQYTcpVC69r9g5EJOwui4BrOHUQJtV/9B
9OpGo5DrGlz/bs/5KesfrM98U9R6sQYbkacv6/iOQU3vU9m8+DX4I7t0Pldl
ApRLPkmq1a0BVV9shTU1BjwEs9dMm9ZgzUAw1F0DA0U5Ee9d2tbgrSrJtsQr
DFC9NhbN+LUGpaWDOZn009AfTHppfXoN1BU9+DwvzoC5qSZ3MtU6jCjPkTqb
zoIv/Sw1xmQdxqOvllOYLMHlv5XoMYt1qEu+F0RTsQSjeQFuw4/XwZGyyPXL
6WWQucE11uO0DnfyfjScqViGDVPd0rqQdVjovIGzpV0Fq9IWtaSydQBvaamj
xXVQV8kKu0NYB6XL33NEqbeAQC5j+pZkA26YJ0oIobdgYIVrj5tsA/DBNbR2
blsQVLN0mZNiAzIKbyd0jW/BhFpYAj3jBngzx7nOVm1DqlODxZHgBiQYBqvO
2+8CdaMoybDmBmBnY+mOqfGwqsFTHaW1AZLJ36xnNfHw6x/zE0R3A8opQtXP
xOIh9uDo9zuDDejvSWpdYTgERunebDerDej89Py+DCcB2MvcgPG/Deh4YOwf
ep0IAukNfpr5J/GY+Pk/A1I0yuP+0Tf8BsjZXjAXiDmD3rVb8FE72oBLhw+u
B74/g654FIj/dbwBbrz5IT+6z6D51Kr2Rk9vQuN5h3ccVGfRFFxsuHXaTWAc
LD6VF3YWPdAyMXeefxPYF+poq73I0fY0jr2udzdhpjog7ZPSObTQKfL7B5qb
oNBlm8T66Bx6cje7x09rE6yrWol3vc+hdab6fkbqbYLR1euuVyvOoWWrpL9n
P9qEK/7/dAc4KNGnDY++dLlugngXz9fFGUp0o2aKrLbHJnwLwlcoESjRnrck
Pw95bUJXFs2yLTMVeknUohrzYhMwF+/2UStToXuJbeV74ZuQGzR/qzaHCp2R
H53Hn7EJkdPvdjjuU6MfKV1XnMzahEXy8PEYG2o03/ToQPrbTZi/UGdX50ON
Lrp46Sxj4SZMXZolvV5Ija5Ob3lCUrkJm2NisWl4arSn3BPS+upNSKxsOayk
pUHLj9Cme37eBBOW9Wd+fDToZhaTrrX6TeCnKpETUaNBd8ftio93bMJfhe+G
zQk06FjJzPbUn5swW8mQbZxPg9b5pfToQc8m0NYW7eZ/okGPUMXHdfVvgll0
Jyd6mAaNDRPd+jK+CaoeH2KiWWnRhYL9L92nTvQNGCyOFqRF27V5CVyd2YSc
j/k5N6Ro0Ruk7XpFC5vQ6cnYFK1Fiz7yNa9N2dqEgB6Br5dDadHN58m1dXY3
Ib7dMN0rnhYdUvd+keZgE95TZk85ZtKiKffxnKHETdBzaszVraZF96S8rUKT
4gBNmVBws4kWHSetqkEgw8Fbhme8wz9o0ayuyS9cz+HAyc+pfG+cFj3KoMgq
SY0DTu0Yi6B5WnRGxXT5Ei0OlC4l91Rt0KL51iSnLJhxkM1eIEV5ig49Gz3k
dYENB3f13i1KUNKhi0RfMIxy4GCXz7PrgIEOLfH05y2tiziwCR8uDeShQ2+S
O/+j4sPB73e6L5BLdOjqAja3DgEcsN724X0rTof2vN1IHXwJB4v0LyOLr9Oh
5bHW75DLOEgVGi3Wl6NDHwVRIXgxHDjY/fmvFKFDN/NWDn2SxEH0x6OtfCU6
tMqjY3JxaRzEcOtORWjQoc8R3+Us3MDBq6aph65adOjuDA25fHkckAWZBZA9
oEPHKmz1PULhID0k47GcPh1a52+a3Xk0Dt5ru7CyGNGhWf5Dkw3fwsFfzNfs
FBM69Ajb/JuE2ziYc3/I0mhGh35T80rqnioOPFQvvHppToc205PqOXcXB2Ns
cxePLejQ5uc1c2o1cbC5ZZzAbEWHtsDYuNpq4cBM/GbqnxO2LPRTYdXFAV2p
hbaiNR3a2uE1x3c9HORHwNS9E7a5XrHiaoADSzSdHdUJPz7obOIzxsGZ6ipW
l5P1T5owCX2mOEhgrqMPtqRDPw3F2wSY44CnRC8UOfFvd5dJTtIKB7Y+xvn5
j+jQ9gxi1BM2OGAaQuV8MqVDOwwrT0Y/wQHhM3m5szEd2jHTtFLhGQ4mOAzO
jBrQoZ2sPEKXHHCAO286taxHh3YWiTVIc8IBBctvnxIdOrTLeqGoqisOrEOW
WVnu06HdPjUTd91xwDj/fEv0Lh3aw2e0750XDiidk/TWVU7qexOX/8AHB40l
Z0Me3aJDe/fw360MwMHCQpX9HVk6tE+iIrdFMA7kPlk2N12jQ/sa6m3SheEg
85YC05wYHdp/Nuy1w0scFCXeJUNO+imgNNuOKwYHK9YNGk4cdOgg51pUV9xJ
/X43r2oz0qFDjhZnhFNO+n98slCAjA4dxaJ5BZuDg/AD73hGDC06+p8NWWIe
Dlwsg7l+DtOiX731G7pZgAMdf0NOqV8n74t4hW92KQ4+fd7n562jRSffZvph
VIMDebbLg89iaNEpVGIZ577gIGdY+d63IFp0ap/y89qvOPgQxTPS60GLTjf1
YGFtwUEx+jc9vRktOsd91KKvCwfzLi/Pi4vQot8q4KQCfuFA/yuKSek8LTqX
lIpCsg8HBpUH4kw0tOh3rxTLo4dwUJ6/uz2zToMueZeNv4PBwVbqhqx+JQ36
06BNYuMuDuKD7recFqVBx5HyX4UDHNDfRQ/LctKg7cSnfjUd4oDESEJM9hwN
mjvUiLKFZAtcvw6kpM9Ro8Ok7gd+o9wC3l6PT4QsavTDRNnnndxbQJvVk1py
lhq9p0V1t19lCx7VMjU5fqJE9/t2LuiobUF1D1sQfTYluqwoNOzP3S2YxsvV
xURQos1JSFoHtLbAudu3g8+YEt35YVt22GgL2GPuU34hnkOn0k4IjTluwegs
3/x59Dm0XHfFqbmULTC7cKk67wM5mivXpy4jbQvWpXau1CeSo0m8VFx0M7Zg
WDG6r8mTHN3JP4ZpfrsFxZY98i+BHP3Qh7zlTdkWLMdHfrz96yza5bKZv3br
FhwypS1OLJxBl0VQEepXt2DLDZvNz3YazXP78U6i8jbciqq4EeNFgh4LGPTk
urMNN3JGfvOYkaBT65Xx+WrbEPFbPLVZiQTNIMV//OneNriJylKK0JGgT/FP
UYwYbINwZda4huYxzJIYcXE5bAPNVq+c5McjKKnXVMpP3oaSaekxvyQ8PN6v
/y6Wug2HLGc/0FrjgV9KTPVT+jaI7Cyu/7iOh4xSSs327G3YuSKh2/bnAF6l
dzxcKN6GngZnnT8sB+DkddNOrHEbEiSZtYpz90BaSjq+em4bnCJVXqlhtuHK
a9Z7Vxa3wYEncrL+8zZcxu9Rli1vg8YlyQLLmG3gaa4LydvYhs3bH66oKG4D
pQbaKwG/DWqvT992Tt+CKau7j5xod8B5UWbU5eTciEq0EBeT2YHKhpSuaqYN
CNm9tVQouwPMC5IB2ph18DcUKORX2AEx166l3Dfr4HZxnuc8egdMJ66KBTGs
w6NSe2ZK9R3Yi/0lffXUGkh98zycN92BRR6tY/TeMkziXv3IC90BuhTVMAXJ
BcAe++boRezAFZmn3Gqb87BAbe9J/nIHip5cDempmocNIXXBZ3E7EC6T9kRO
fh5IjM8GXnuzA1RzmbuJGnPA981PtqViB9Lg2lXScCwI9TrQuVbtwMx4j7WW
FhYuj5vMCdTsQMmyti49Jxau78knRXzdAe3t7Lyp8hlQFt1bv9++A2vSr5Nr
xqfhceLzwol/O3CdwFH++z4G7HLM/OImdsDrHrZo6yIGHN9r6t3C7ECCZ+pQ
wMYUeHaIkhXM7YC0TUrrQMIURBzOmzls7sA9lhlsUe0kFFuZsxLO7sLDu73R
3qfHYeW6dijHtV3YlH8e+kN0BH4UYIUypXbBpTJbkH5xGAo4vDp5buwC1P55
vV4wDObHWVTCiruQNDKKuAsMw5+fK/EyKruwHSxcGCg0BHUWEVm6RrswRmcg
/vv2ALweOI8eNtmFjrAb9depB8DtzgeM0aNdIDfWUuf78wckxIcELK13gXmm
tTLN8g/k7vOXOjnuQs+q0OJweD9ExjZ9fhW0C9fqcW/blnrh8SldQ4bQk+dl
w0dGX3rhlvscPil8Fyq9g+vsI3qBYESDZETvwpsGgUbipV5wEjJuK0nZBdvT
ht3ho7/AoGG3t6NkF4ptekg42LtBaFl8ifTPLly6tzPKfKMDqCl+v/s6uAtn
f5W0NC+2w5aAk4X7yC7ojg/R3stsh2azypGF8V0Q+OhYfpq8HYz6ZTp+L+yC
u+zLJ8XYNoj5AvmZxJP9k9n/MXe0gtvQ1CN90j1oyg3Img9rBeOtwPMMp/fA
ToTjoe+dVhAWb0sIObcHSmR7l7A/W6A1RzXwGfMekGcz5f/3txl2wrXN5C7v
wRkaD34tmUYYy8dxbIntQQfR5Zt/dwO0tiQOlknugeF+/SW8VQPEHA5q8Ejv
AX3hQVtLSj0IPzdSIEfvwV/CP0Og+gomD63YB/X2QAVvt3dRvBZuuZ4eiDHY
g3B/+ptuQ59BJO5drKrxHvhFh4pMBZzcx3/Mn6033wMddbEp3EgNxKHsd3Kf
7cF/3XpuH5M/QZuAe79T4B4UaYndYIIqCC6sMyAE74FoXWeu6FEl3LpMMhke
tge6Xeu59PWV0CL5cjnr5R7IzlIP3FCshEb5t6d7kvfAvdSMufn2R/is1SMj
UrIHc4Qu/om9cvD4w9hQXbYHZtXH3pUvy0HmoYES+sMeRPC1+U7ylEO18cx9
/eo92Ha9HCF1/z1UPD54Etq4B49QHd+svpZCia/gG0z/HggB08svv4rg6bEd
r8PgHvi30eo+8SgC4aCKwv3hPQjrLoq5cbEICsIVqunG98BN69rjy26FkJeg
3YOa3wMHqjobCtECyCh6cZx2uAemjorx2z/ywFj0W6ggcQ86eXqqpYLygLOc
gvojyT58/D7YaK2QB2lVieydZ/Zh4Hm5WWRFLqQ0Fl/dpduHQMU5udR3byF2
YNBKR2AfzsHTzkOnbIj2eyXQJ7QPpN1pFPLHWRAlfHv2vsg+tK/K5OzEZEGo
b/VjTYl9KK6NXuivzAQfgcSnqrL7cEQ4M1VClQG2blrPEY19MOZ/TXWBmArW
3BRXGu7tw5uYlyISualg2dm0oaC9D06eXzb+u5MKplySLnIP94GHTly5Mvk1
6LbRuEuZ74NY04PPKHQKAHOX92W3fThejsNk/kwExcYghWKPfcjQa6h6F5AI
8k/kCZf+24fZkbPtH24kgnR98QtBv32YSBAcbShKAFHriACeiH3g1OdafZoS
D2zVt8NYM/YhaGr2UZN8LDCbHakkZ+0DNavlD7m2GGCk+ETO/HYfLLorFw3v
xwCNiUAkQ8E+7KdSjbrbvQKy02TR1BUnelCgXkdWvYR13eb4U237wDuCqq6L
joDdwlD7z+370H3quoWcUAQQD9Xv2P/Yh++spNXqLeFAnT9IGPx1sn5CJoaW
EAbC20u2xaP78Mn/24J/cChIqlbcMhvbB4bVZ8z7wqEgk+F+gWnyRE+tffTw
7xBQVib544vdh0q8KlsNbwiYJ7EgWuv74N9+tuHpYBDYLvxlP4Pbh5CkLe9X
oUHgqJiz9WV7H65MCo5vyASBL/ZyMT9+H/5JWzBYZwZCqhSaee/0AVyIKRbx
8wqA3gG7pUzOA/g1ZmMd1OELw8JXvutcOIAr5wX3Cu76woTvTjY5zwEsnylG
2vp8YEUgQM9Z8IQtsXRdM95A4Z7crHzlAErM3DQR7v+A7ofRm4NrB3BIEf7I
5KMXsF7g8SiXPgAG6w9HcipeIPC9RJRd4QAcPpNxcrh7wk2W5pTl2wfQfC4y
qmLOHVSfhjrnqB5Az6U31Mzh7qDVoK6hd/cAmlrU5shE3MHMZpC0SesAyNYX
S52c3cD705J9gvHJ3HDKwuEfkytU6rEoyTkfwA2DiqaL6U6QQOe/0OR6AMMy
vsaBek7g8mPhlYrHAaQeSe9tMDjBVVT9iK7PATATLt0aPP8cKgSsHB1DD+Dm
2HDAV34HiJvoZtoJPwCB678JkSX24JQq88Un6gBmrBawstftQZKa8nRk7AEs
dbtTc6k/g/KtirS8tAOQpef1kHv1FGLec8LljAPov6FopcH3FBxtQ7AVWQeg
l/lAhfLLExD/py/ZmHcAl8oB67BsC2WtxLaR9wdgkfdkS8TqMZTEa2zQtB5A
nIL9XZs0K4i6W5Oc1HYAqinP56xUrMDuDI/C+Y4D2L7NWVq5bQki/22FCncf
QFTKbq6YniUUmaefVxo6gFARhs5zghYQwXm65cfIAdj3TpSQjJnDkwGHx1r/
TvSfCDPnTTKHS6o3P5pOHUCSbbHhL3JzKJBcUPFaOtFDvVzyy74phC1qrxBX
DiCQsczqvpcpPM77Gh+6fgC02ZTt2wcmIMgWO5awfQAiUR1cmmQmkE+UdnlP
PIAPTtfijcSNIK8nOHOaEQ/K9oxaniMPIfrqoUk2Cx7m376qv+3wEDySXbhM
2PHAwclxbo/sIaiaWrwZvICHDQMt6mkZPVhbQdI6hfHQecZK+fijLgxr1RiE
iuLhvyIrrXN6utBcLc5+SwIPpG9Rp78c6ECiL9frrydzpgFVFPnqHR2QpcYn
lSN4uET1S3p+Vwt4nZwfPLuJh6CSl09NC7SAcmCBSVgZD08wKo+V9LVg/M1w
wls1PAwTslJeet+HINFPcUkP8DBu2By8e00TetSdor3t8NBgKMNufl4Nasrn
795wwMNVwvv3/bmqkMP4iGr7OR5wOS5UrmKq4PJXM8rBHQ+O8PYzq8odYLcT
jTAPwAPd5fiS2fjbQPor986F4JO5eSD5RovIbVi6ykn+NxQP5Kv/qgK/KUPD
AUWY7ks8GNK2DMYSlMAyci5YJQUPIjE264TgW3B31VSJLA0PSNEnwfOXb4GU
9uCp5jd4cM4cCp7ouwnkHG2Bcm/xUDDQr3pD6CaUFb31FyvDg5ShquOfVoC9
DhMfxlY8sBEu7G7eUABuXRX31jY8rFMpO/ZXy4PKhORzlw48THi4xbNIyUPK
9imr/m485LGh9dPk5ECKt1g9YRgP1+1rLng+ugEmZQnKt/7iT+yKZu6uyUDI
DV8EN4aHHN2sjmv+MvBH8/41nWk8lO7e/sZQKA0u3jscjKt4EC2N4uKglYL0
M5NMret4oBWsVQ4quw4tcZ00LrgTvXCvxT5rXD+ZO96Q9u/hoWNytNsq4Rp8
+HNzMf7UISBzmpMrV6/CilhMLQP7Icy/iezP9BAH5lrPyhbOQyDgHpiNzIqB
gpJFmfOFQyi///llm74YRBlK5fTxHcIMT1RIgJIoiIT9DY8XP4RP5/Yq5eRE
QIuhLfDmlUNYvuARXlkvDF4Z7302rx2CVpzod/9bwtBZGfBcW/bE33xO+sqD
S/B4UkifQekQpCdc2lYTBSHGjl675fYhVJacfzsnLAifdg7UnVUPwYbiau90
kwCcpu5B+jQPYTUvZqJpix/yZF2F4g0OIX+04ju9Cx9MxTft0DseAlX+j1Tj
4IswFaRZl+B0CG5oHXPuDW7AuP7zY3Y9BOan3Q0vHnHDtN4eObvXIeTJ20di
b1+AGQ5JzotBh6D4gWGf68p5wFI2TOSEHEJuf0HBqwpOwB6q5/GFH8K4+k81
5esnPP5YTCj6EDpr9ZyNgQPm3mYh4imHJ9/NqWg+ZzaYSxAj+5B6CF+vFm9V
njrh4LqOK28Ooaf3QygqhRXmbYa0pHIOwbj+UIr7GwssiNBaKZQcAmfID1be
68yw/PFFuFrjIfxnL1Qjb8MAK7lUGl3NJ/oNE/2yGE84MY1e89shMLh0Gga0
0MOK+6c0rc5DoJFXfZPHTw9rcqul+v2HwH0/ttN2kwbWLvs4jQ4cwouuHrIC
yxM+f07aePgQXt16/9RniBrWjwQazcYOYVN692rDdyrYaDHptZk7hI72bmrL
lnOwUbmUNL9wCExZSmEXVM7BZp6X4dPlk/g29C+y91AALjRp2n7jEAKeTArl
YshhS6172xV/CA/vfTfb4z8Lu30KHEG0BPjw8bVH5hkyIHEY3pNjIIC3ft5l
+dxTQEnhOrTJRIDIWrHkPvQp4EZKEi04CLCP/+L3I5gUbpew094UIMBDCd2H
QxdJ4N7t6pV9IQIUe1+XDUg5Rgym7ndViBDAvO+OUM0GEbFnDY/gkTxh2WHK
sx+OkKSgnVMk8gRQ9ClPdNY+RLIuxGM+KxIASTIKiW/BI0W1Ys3PgQCD03+j
kqXwSP2a1YtJZQKcltuUo+c/QLBG/XuN9wlQqjExepdnD7l+/cPKCxsCPPZm
0Y6N20IUf6l3ST8hgOfW2aRa4S1E5elc8aodAVLPCaUTWnGIUfYFW1MnAhDb
JpJKjjaRIKpojKIPAWYdjAgBURtIdMGl5u0XBLAh2KVYXNtAUm5+yyoLIIDy
r3elnLXrSIkn3pgrjACyLHkkyk/XkP6ZJ0OHcQQY9Ul8/XprGRnzO/2pKpEA
d36uCfCYLSNzHDmJz1IIID3SXVHTtYTg7w9r/XtDAJkS5prfHxYR3vrbXXUF
BOjRSHpPlz6POCXxNf9XTwDC/U7vvKUZRCfZ8ilZEwFqqek87cJmEOmUXMZX
LQSQ0gq9c1FgBsG/5rPJaSfALreDs7jNNBL6ho+yo5cAHOv1ydOEKeRJhmWV
1p+TfBpz310onELUM3NN/g4SgE20EkOiO4XQZ/N9WP1LgEXk0jE8mkTSc/ke
MM8SIH83J+/P7hjim2d5lDlPgCHlESsu6zHkUX5uwaWlk3zKpExRA/8QgQK+
A/l1ArQ9y6bqq/+LfCjmy7I4IMArnNXP7vcjSFsF30I5zRFciQz4eef0IFLw
0TJelv4IBmg2SPjTBpDIylz5VsYjqLaN6mW5MoDcq+Z7Nch2BKvGkYEc1n+Q
0c981wi8R7DILBYXNtOH1Nda/gsVOAInsRtJlBF9SNaX3BC6S0dgXWUVaCjR
h1h/5RvmEzt5ji+mkw7oRdYa+XzVZI5AKJqmaPX5L6S3yVLwj+wJl1DF/fjT
g1Q15/4yUTgCq7z1x5/lexCvVj5eJ/QR1O9BcTRDN3Kqna89Rf0IyNOnk8Mx
PxC2Hj56rNkRGBjEtKwQvyOyOwNb5hZHwNJGq5oR+x0xuBA+PG51BElKrjNu
fN+RdIflrOEnRzD2XtvH814bwk1bLd7lcgR3qJPGCxtbEZB5zKDqfgQuiXA/
5FErYm7GvtPmeQRtH6cI8qdakdxy3/pG3yM4bnp9hkmzBRG6f/tuZdgR1HFR
/9pZa0LueO5JSEYeAelz+et2Gk3Ik+xixrKXJ/k1ZDymet+IlKzT/H0XdwSj
3ks3UzwbEIm4oSdp6UcwzinEInblKyLdZxsWUH4E/wJCxcT5PyMPDzjsjipO
9KuLb64vq0E8eLs1vauOQGZVWCVHtgapdb7C4lZ7BJUXaZ5I639CFBkP8mxb
j07u2V1NVuVViKl8aTi27SS+Rm5yU7UqxM/S9JlFxxHY5E1KPJirRJorW64Z
dx/BNpP6P2ahSkRZN6rl3tARKC29pBn+WoHY+Ci+6xo5grdKvlafbCqQsLy1
CNV/J+s7B7/eYahAOrd0tG5NncTjEB3W87cc0Ug6Pym9dLKfP6nlQ+cyRHew
jMBFPIL+agOwESlC/Art8b9JiNAwSuv8720hUvSf2H4QGRFkTWt+oS4UIoQL
ZVsLFEToLsgkieAqQAoely5VMxHBvn13NUohH+mVfbZgy0oE4yn2n7U/8pBD
StE5Tg4iiDerzJsY5SFaH0owAdxEoOhaTO0PykXwe8UjGiJEmGo9y0q7noMI
/Hw6dCxKBLRUjmRYbA5yP0NkoFKCCJ8sbbD013KQfHTxb3YpIjReoZGyxGch
9yKL2rEIEX6YibOOP8hAvIyftL2+SYTzSu+kX1e/QfLEhVvVlYlgeF9a8Rfb
G2S/r7ChQo0I7v/kDh8vpCG5nIXVvg+IsDreIny74jXSvfK4UlKfCATvwxez
Iq+RvUahimlDIvjidd+7FaQgGlYFpaqPiEDeKP/fxaJkZLf0XS6zHRFy7Oj9
9rsSER4/m5wOeyJcejgzY2aciNzVEszyfk6Ez/fSdBVXE5Cc7fy0KTciUB23
IULsCYg6Kj+uzJ8IdP7XIu9GxiFudNYxj4KI8Lh94tnR5TgkG8MfzRhKhH/3
E6qCMmOR7dC8cK8oIsRUtsXmycYgWb9y/ZSTieBP41fUnvES6cyx9N17TYQr
d588xhKjkC0XPu+SdCLUIHgGX+soRJUt150+5ySfnbse3XKRCO7RW/uxEiLc
0xAeWqMMR3Zen5G2eE+Edi5l7aTYMGT/99Oj2Q9EkDi2nG1jDUOO4VrMejUR
hmRsGhPEQhFqnm8fTjURodDknIe/WzBCZ3DJK7yFCNSyrxg4qYMRxriXaOo2
IqikXhUYfxeEsJM86GP5cRKPi/jKh8lARHAKixP+Q4Ssz110xs8CEGF2ta/v
B4kgxVr4k5IpABHTeh98beTE3rVdiPs/f+Raszuz4jgRArt4vSdE/BAk56zM
/XkivBIUO81V7YMYmAv/535IhElS/oJqE0/EODX6Jv6ICLq6WB6vCQ/ErHfj
nD/JMVimTX4ds/RAbNBf0iPOHAPeNlxPx9UdceFRr39Ddwz10tp+Lz66Iu4G
5SE8jMewVOlvNKTiinjFMWq+Yz4Gtt46racTLog/yb/xco5j0C3CjdAyuyDR
U8+OW/iP4cr10mDuVCcklr23Q0XoGGZfar+lRpyQBC2puC7hYxDkWmqq63qO
pDUTeAbFj+Fucbw80d0RKch5dWvhxjHEffjywmX7GVI8sknpIH8MZYGGghYm
z5Ay+od/NhWPgdot+XVAhx1SGcBtfXjzGDh+VaXTFj5Fmsw/hNJqHMPVa5fk
8iJtkbrf9ncn7h3DpDXniwT8Y6QGucxQrn0MlRP6cWOOj5EyrncZmvrHUCU7
y3/NwgZJH0mvirY8hk/bd1v67ayQlDsG/5nYHMPEu4WtkG1LJL6GBcSeHMOq
WM/l4wBLJCIp7meXw0m8HMq753ItEHetMAzlf8fAg6LCtpwyR5yalAr/+hzD
O57bH7ZvPkLsJUgdSvxO/F3tTyYNNkMsqX331UKOwUfCRzaI0RTR6nSmi4w9
qQ/a+PJtayNE44bkoEHCMXjXf/v5udUQuVOwki6cfOJP9uKHQwFDBAmxFepM
P/FnMJmRsa2PiKJNUeQFxzDKkis+26CHCH3gJBsuOoaG7WP5AFk9hI97pLOg
9BgYWH3klGseIOwEnQcqH48h0la7+7BOFzlbq/ostP4Ypo05X1yb10ZOXTp7
Va/pGJ6t3WY7/582cpT8bVeg9Ri4du7v5NBoI9uuSFBbxzH02Z5mUkG0EIyk
VBrZn5N++BmRXuyliYxlbZr9GTyG9NzdD+TfNJARmg8CeSMn9b71PKuWQQP5
tSxScWviGBaWX0eUflVH6gsvdgQuHoPNIlaED1SRWtbxaO2VYyhkW5F5VHwH
qQpN1+FdP4Y5QWtGSbY7SIkVy0Tz9jFQkrK7Xj26jbzr78+L2zuGVPUMPXn3
20jOzbin5viTUaVf62vQhjKSUaEpeeXoGOperJPtOSojry9S7RwfH8O2huzp
kA0l5P8Asje8LQ==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
8fExOOK3b9ZG2iL/BwRfIvs=
             "]]}}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {"Mismatch Coefficient", "PDF"}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 500, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
          PlotLabel -> "Circuit Mismatch Distribution", 
          PlotRange -> {All, All}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          LineLegend[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {"NFET Dist", "PFET Dist"}, 
           LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {
          Scaled[{0.75, 0.8}], {0.45, Center}}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.649604206518202*^9, 3.64960475856152*^9, {3.649613516393248*^9, 
   3.64961354908078*^9}, {3.649613776628022*^9, 3.649613880774561*^9}, 
   3.6496154894578867`*^9, {3.649615565967928*^9, 3.64961559057796*^9}, 
   3.649615629102153*^9, 3.649615659675564*^9, 3.6496157782614527`*^9, 
   3.6496158526734133`*^9, {3.649616005782175*^9, 3.6496160678124533`*^9}, 
   3.6496877392585993`*^9}]
}, Open  ]],

Cell["\<\
The calculations below were quick experiments that I was running with Alex to \
better understand whether the law of large numbers might help me out.  It \
turns out that although it would appear to help, it doesn\[CloseCurlyQuote]t \
actually help us because we are still trying to optimize for speed of one \
inverter gate\[CloseCurlyQuote]s delay, rather than just optimizing for \
mismatch.\
\>", "Text",
 CellChangeTimes->{{3.649601899998186*^9, 3.649601968410597*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"areaaboveTail", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{"0", ",", "0.125"}], "]"}], ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 SuperscriptBox["areaaboveTail", "2"], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"0", ",", 
       RowBox[{"0.125", "/", 
        SqrtBox["2"]}]}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], "Input",
 
 CellChangeTimes->{{3.64952552164013*^9, 3.649525581946638*^9}, {
  3.64952575865059*^9, 3.649525762875207*^9}, {3.64952583587543*^9, 
  3.6495258895125732`*^9}}],

Cell[BoxData["1.468281056389774`*^-8"], "Output",
 CellChangeTimes->{3.649525582622864*^9, 3.64952577238953*^9, 
  3.649525925005919*^9, 3.649687739818519*^9}],

Cell[BoxData["2.1558492605530705`*^-16"], "Output",
 CellChangeTimes->{3.649525582622864*^9, 3.64952577238953*^9, 
  3.649525925005919*^9, 3.6496877399501877`*^9}],

Cell[BoxData["2.2159815546311246`*^-15"], "Output",
 CellChangeTimes->{3.649525582622864*^9, 3.64952577238953*^9, 
  3.649525925005919*^9, 3.6496877401741343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 SuperscriptBox["areaaboveTail", "3"], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"0", ",", 
       RowBox[{"0.125", "/", 
        SqrtBox["3"]}]}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], "Input",
 
 CellChangeTimes->{{3.64952600498589*^9, 3.649526036140036*^9}}],

Cell[BoxData["3.1653926297019754`*^-24"], "Output",
 CellChangeTimes->{3.6495260060978317`*^9, 3.6495260369397078`*^9, 
  3.649687740477418*^9}],

Cell[BoxData["4.276817937170139`*^-22"], "Output",
 CellChangeTimes->{3.6495260060978317`*^9, 3.6495260369397078`*^9, 
  3.6496877406000557`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Appendix", "Chapter",
 CellChangeTimes->{{3.64598768111053*^9, 3.6459876821165457`*^9}}]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1280, 1548},
WindowMargins->{{1260, Automatic}, {Automatic, -10}},
DockedCells->Cell[
  BoxData[
   DynamicModuleBox[{$CellContext`showHide$$ = True}, 
    TemplateBox[{"\"Show Input \"", 
      CheckboxBox[
       Dynamic[$CellContext`showHide$$, {($CellContext`showHide$$ = #)& , \
$CellContext`ShowInputCells[$CellContext`showHide$$]& }]]}, "RowDefault"], 
    DynamicModuleValues :> {}]], "DockedCell"],
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]

