Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "Neurogrid`"}]], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.63859000852374*^9, 3.638590010629114*^9}, {
  3.6392384395879908`*^9, 3.6392384406103773`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Notation", "::", "difform"}], "MessageName"], 
   RowBox[{
   ":", " "}], "\<\"The defined current default input format \
\[NoBreak]\\!\\(TraditionalForm\\`StandardForm\\)\[NoBreak] differs from the \
current default output format \
\[NoBreak]\\!\\(TraditionalForm\\`TraditionalForm\\)\[NoBreak]. The \
WorkingForm option will default to the current default output format, but the \
Notations, Symbolizations, and InfixNotations may behave differently than \
expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:Notation/ref/Notation\\\", ButtonNote -> \
\\\"Notation`Notation::difform\\\"]\\)\"\>"}], 
  TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.639861403398189*^9, 3.639942713430232*^9, 
  3.64470551500451*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ADC mismatch analysis", "Section",
 CellChangeTimes->{{3.638910828170273*^9, 3.638910835014668*^9}, {
  3.639841425366589*^9, 3.639841427578998*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{
   "Import", "[", "\"\</home/noza/work/Schematic Pictures/1V_ADC.png\>\"", 
    "]"}], ",", "600"}], "]"}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.639152759167804*^9, 3.6391527700556927`*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
uiAiojkbi9lF7t9XkDZtPqN66803x7HYWKgvftGrr/K7z4S0XjrPvBahr/z9
d2fX2VdeGcH8M6fTOPfe3jvp3+PHt6bPeuuWG2gt/fqKrR/Xi2c2ITe+1HnZ
DaGvBGwdRtNXs2ZJ41XnztlB3+k4HVtZvboS4CXaJy1R4jSkOdA8s2b1LOD4
Vf61Ux57MhuYR+Prq+DgefRvHJ+qXHkF1VPDh3cmR4/iD2I80RQyZw5tA8iH
H9Yp4PiVMk+uhKYSMAT06aszZ7zouf/9z564uiZT+xAeXouUKoW2JJ1ERfln
f1+fvuI26uxZBVmx4lXQEN1Iv37tyP79dcmff2qY7+czvXD4sALOlwFbU5dp
uxz6zGL0FfajsF+Ja4lx/aWd3UnSrVtN0KTpYBsuwPM50Ge+c8clF32lZLw7
QR+3CaS9TT75pCVwUw3O8d+W8hw4oCCbN9eF99IB8r5J/vjDmzx8KKXnorGE
vhKwdRhNX82Z82w+sGnTMVQLtGs3FDCIfm7adEJ2+pw5z+srvK9Tp5zg7zpg
J2tC/a5N/vrLHz67k3//lb7H/bnw88WLKsjjR0aMeBPsRBeyaFEQOX7cif2G
0bVBseortKkfftiSnqtbdyXp3bsZ5bRSpZ+YzVOQYcOenx/EduHWLQ1wWh3s
Y23gqxZwWh04LUXnGSVO9c2nSOfOn3eD774CXJfKNa+AQF7Qp6/OnfPMTm/c
eAKL1bKb9sl8fH4jN29KcdwxXVdfcT/4+fMrESenA6zMS76d0uf/QHeVo3nQ
VvTrN5ZIsTml2CXt2s2gabL23mL0lZSmpnsQliixlepShULyT2vZclr2d+/d
c35OX6WlSesM+/d/A85fZlyhz9Zj9nkf+eUX5ERJli5tJsuDMfVwXfIjEhIy
gvkn6NVYQl8J2DqMrq+w3s2f7wfn0qA/egZwmvZJ58+vkV0n9ekrRLt2Qawu
PyVSzGKs23dI2bJLyNGj7vR3nzyR7MR7741j9uVptm1Vqy+D9mjL+nlGtYnF
qq/Q5iUkOEI/9TyRfIL/oG1Snz5dsr87fPjz+gqxerUvnLvJ+Eyn7wX5Kl9+
C4mOrsT2LnrGlfRu1dCnVZOSJePo9QYP/oSmyePHCwjkB3npKyx7X39dA8py
BnFzk/YeeP/9d2laWpqko3T1FcYnuXNHSUqXTqS6avLkYND/btAXKAF9rDok
LGwGOX3aN/v3GzSYQho1+oGMHDmIxozv2pW29xarr9LTtdS+vfNOV8oX8ob7
5nzzzcvZ/c/795/XV2jX9+/3JLiewMXlL7JuXXXgzRW0qCeZMqUp5WnZMmkP
7Zkzu4Hd/pHMnt2AXLhQisTG+pI6dZbR6/Xp04Ldx3M2TugrAVtHMegrLd0H
y8vrZ6oBpJgsu+k5TMM8uemr7t2DqP9Fo0b9wB76AeqCfZBivteu/S37bame
/vRTc0hvDTajNNiJkmTBgtpgbw5R7bBhA84/KF8w51hUHotPXz19Ktm9Zs2m
UVvq6kpoP33HDvfsMaXc9FVMjDdwmgX2cj4ZMQI5rQ193T5MZ/1NY+VIXEm2
Ge0mzq8EBU2A9Gvw3UfwvS/YfQgbKVAw5K2vVKCLFHAuhrb7GKt4505PWg75
9+T6iu9zPm9eGXquSZMh7HdUOr/57DP6deER59hxDIbtN2yx+orP6W/ciGsG
kxhvW8j16/g9JXvm5/UV4u23W1B7PHbsa+zcMzuFnGOcB/yMRz4uzrF7twO1
BV26LNHlj0PoKwFbh9H1VUqK5GPVp09XNm5yEz6/kyMtN3319tvS+NWECc1z
/F7FiluIs/N9cuSI1Kd93jdIsjk9ejSm+mPAgMb0b26jjcNj8ekrPrY/f34d
5nd1i1SrNoPawadPpbTc9VVpeq5GjXHZ57Cdat/+E2prExOrsXeqyvbXmjoV
13E9JGFhreh42bBh0xmfwkYKFAx56Stej3fudCLr1vmQ9etL0BhPeI7rCLm+
wj4Anlu50ouee+21ZeTMGd3fRBshtw94HQ05e9aDzoVZur7iz4Z1eP16N8rb
pk1OrH+Ut74aPLgxPde792By44Y+3uR/q6l/Ab4/5Oro0RKgr1JJaOhsXf44
hL4SsHUYXV+lpWloX+jwYRXU/zIU+BnPYRrmyVtf4f7EbdhvSHW+Ro2VdLxl
xQrJvyo9na9re2b3Ll1SkJYtpxDJ174Cy2c0u1is+orvNYh+F+vXewF8yOnT
UjuSliZ950X6qmrViZQ3QiQOIyIG0/mFAwfqsvcmxYI9ckQJGvUYeeMNnGdR
sPch+XYIfSVQUHB9NWpUKyhXGHvhCjl//pm+et6PR8nSpHLdtOnP9Hs1atC9
PekYOI5PvfzyIlo2XVyOkJCQL8inn3aAeuFJ7t2TrsHXHPO1sv/8426R+qpp
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
DcR8lT/lkq+o7hFjderXrz9D2t8j4z3VGGLy1VCiRIloarOhshHLvFFYvjUZ
MmRIK9y2yIdaopqiaqPucrbwferitka7du2IJ2/I/pxDPXr0oOOkEKwD35V1
JX1Tp8kwiS1atHhkxIgRtQcOHFg3430HDRpUb9SoUaH33HOPGj9C9f7e/v37
34fn2wwdOrQNbXMiGfbhgICALbL/hOIxtWPHjh2UDyx3YytdHlDrWYdT/Emf
6GTvP3v37t0NbdcO9ST1jedUgwcPbo/bx5o1azZMF99nX3rppTZ4rhWqZcZ0
jcdaY3w3RL6ap75n6Fr5LFcxPXXCcGGU9jE9DVT5NSgoKBqPNZP5Ij/5ylGi
Z2yNelJuw/JyH7Q5bVthHDRDm/yK5YgYV/XCCy/0ofii77qMcUltZdQni5xa
jNq7pN1T1fpXw5ivHCXmKzcQ81X+lFe+eu6557rRWCo1Dy0T0XEz1gMTJFc4
en0/au+neV/5WRfE0cq4DqQ6npLJOcVLOVmXQ/Vz6Mf05llYTwmfBB06dHhR
+osvsr7ZHaUk6YuyT58+XUy6+ZQOTrOpDg7nVpJzaZJnzpx5N5U9qn9XLzle
y0JjEWrVqvWzbMNKYb5yuJiv3EDMV/lTbvlKrdP3wQcfPKF8UWdxb2oPMWP+
E34rsYxLom9JObbEJZVZnZDduczC3emejnrGTp06jZNz3t2erUhkA8oLNH6n
bt26QwvC5nmJ75ymJ2en/YLMU7SVfYO0n4jlU6j0z55p2a7Wk2jduvUyup7W
FmS+criYr9xAzFf5U17br5o2bTpIf31GyfVdTFWrVp1P5SNeR9/k+/Feq1Fr
UWvyIbr+B9RC1FKDaJGvr+9PJm2uONnxsp+fHx3/jp4Ty/dd8rhai1t8i/v4
+Cz39/dfkvF+QUFB4tqAgIDF9L66ujQej20nf654fHsuJMIHBwdHk+3WrVtH
8zktWdVR7ijpA5T8NviSzdHG+3C7J4/ai9qN8X5Cx0OXy5Yt+xPGn0j/eH97
mpb/02/+hOH3yfD6NtFkTE+bMMzPlIfwvnbfc8ge/+GxnxyQrxwlesYNqH1y
+3Ne74X2WIv56md8zzjlCwa/7R6Safe2sofaY2UcWr28vHbLNkjmK8eL+coN
xHyVP+WBr1KpzKpQocJvcvy2NWMdnZCQIPLXwoULS2DYf6UPp9QPP/ywId7P
FBcXZ6Ktq0i9z1dffVUZ3/OqGt++du1ae5gOHTq8QjZU7X9ym9qzZ8+2NB73
33//NV28eJHWmxaie1IfB/lybdy48WhZj6ZVrFhx6dmzZ80YxkrhcvmsZvU/
xtFt6+GytP4l3Ao7oX1tuLWibLkVxp0HXTtt2rSqJm3Nb+Kkq++//34IzSX4
77//TDSHUMX3+fPnTeQ//sSJEybkqEjZfpMq412UaZieyuvSU7jKr/gNs8LZ
eSAL2fJzPdmF8sTp06dNderUmUp2ILuEhITMk/HlqV/PiL7naL0v+n/MmDEt
0DbUZi7mGzJfOVzMV24g5qv8KTd8hbqGojVURLlfpkyZN9UcOblumX3draio
KFNwcPBiud5KGpZv248ePUq/JfwOOUgWg0i81/Lly9P5Z9i2bRsdpzG41m7d
uin/DGS7S1TuS7+Wf33++edVZHxY5b1s8n/Tp59+2sak+QAVNu/fv38HGTf5
KcNczgeZQWUmP+yVK1deKX3jU3xvxHThqYtvJWID0wMPPNCHeEDOM6XxhfGK
r/C6KjLuzJieHlD5FXnje3lcrXVsBGVMb3mVGMc5dOjQZtSWh99q9F2S3Llz
5/a6fm19XjRt376dxrb/oRs/R21fCcxXjk3b0n7MVy4s5qv8KTd85ePjc7pC
hQrCL6aa71yuXLkpK1euLC99LNOYCNP8+fNr+fr6fkfnvb29RbgXX3zxMfl7
VhXWVSTnLNF6Jun8i8bExNBx8b7Kv6j0fzULdUB9j1O6nTBhQtstW7aouZe0
vpo31iEv4rkrxGJ0HfLqRlqHmFhW+q7Mq5ye7oyufNjWLukvwDxr1qxG1EdF
czZlnb9+4sSJDajNiuKb2mkw7ZRo1arVWGrTxLhOlHlxNmqf8s+A6amySnMZ
/YvK4xZn5wWd0qW3vIrSOaV3/DYz+fv7L5LjsMTclg4dOgzDsieAGJbseOrU
KWq3alm6dOnt0pcrfcOcQb6dLn1uMF85TsxXbiDmq/wpN/7bkbOufP3112XQ
xktpX7euShzmszWor6pUqUL5TaxVIf0rUV/iu9QHpsp/Z79zAdgwx/7biafq
1KkzZty4cU3oO5zGlOjWn9uNNlyIisT/j6r2Lnm/fyZPnhyi/z2WsZUmfY9T
v1+tWrUGq/iUvJSIHLAV4/przB+0EM4/+jxTqlSp6Lfffrs4/n9cjjtyS//t
JLnmgxnfn3yMHpB2UnNqT2KZswJtsKB48eI0Ji1Vlk2Cp7p37/4YMtcLylbM
Vw4T85UbiPkqf8rl+s7X4uLiSv/444/eWDcsUGNDMqxBqF9rNe2JJ54Yv23b
NtF/6Ipr4+jTWE7XH8Qy6X06Nn78+Cdx/29lM+mrR0j2Hdq5C8PW0f8Wq2hI
9mFZaV5iy5YtibGSMuQRkLxgny9XpkyZ1ZjHSv78889W3D/t7usPktLkGtmf
fvppFT8/v6hM8kjGsudK8+bNX6D29IiIiOHMVw4X85UbiPkqf8olX12JjY2t
SOeob6NLly6d8divJt3aqlIXQkJClk+dOrWFnM9jdmUfALnlq2rVqk2U49VM
K1asqNSsWTPqcz2ewYakA3ju9ZUrVwZSWHUNq2hJttmKuJswYcI9JUqU+Ea1
V+mUSPNCBwwY8MLhw4dFmfbtt9/6mOQ6Ru7OVySVz/bs2ePZq1evgWiX3abb
fYWdqlix4qcTJ06sKdcgsgwePNjub4P5ymFivnIDMV/lT7nlq2PHjpWX7VAi
D+3cudO0evXqWt26dXsI79Hlueeeu2/jxo2Vrl+/bpL3sErGclnlof1qIh1D
u3ipe2DYwPnz5zfHcB1R7fD/e/GY3T+19B3g9Hdl5U3S15iIQ5oPh3FbdsiQ
Ia0pz2DeaYvxXZfGGMnw5LfXHBkZ6cV8lV768vzAgQPm6dOn34P2ewzt0en1
119viTYqQXMz6TzlL2JbZCrmK8eL+coNxHyVP+WFr6TdLTIfZdXnZ3EXJsgr
X6Fs0kbZlUdWlcZZRV93im/KU4mJiSK+MT0xX2UiuW7EnfKMBe0oyjbmqwIR
85UbyF35ir7L5JrKelkyOZatbt68ST5kLF26dPk0N3ylvsWlD/d0v0v7RWUc
O5XVDrChja5bvHjxXbnlK306pnJJb0PmKteUzDPmjHlG9aErn0455atq1ar9
INOtLbdpN7P07mz75MKO5kzKHvv8WOV/NKd8FRUV1YLskZCQ4JFfO7rBtyXz
lRvIXfnK0XrmmWdm6viqJx3LCV+xbmn16tWV88pXLJZSbvkqNDR0ubOf2YjK
IV9tUOf27t3bwNnPXITEfOUGcje+Ut9mFy5csOA7hqOeQLVFNUc1RjXJjRYv
XkzXNWrevPly5Y8P+epF+Vsuy1dqLmNsbGwlfP8nIyMjH8Pt/WSLPNiwKdl+
+PDhXWmsv5xPuQ/TpPKnynzFyrFyyFfCvyjNOSxTpswmmfeb5jbt6q6jMuTx
FStWPJjZujNFUTnkq2hlxwkTJrxA+X/JkiXN8mBHKjfayHLkyQ0bNtSg+6dJ
f8suKOYrN5C78ZV6302bNvnhe57VzZuheTQ09zs5D6LrUqTP0BTkq4H0GzQn
WvLVCTpOdnUVvlJl77vvvptuLd982lBskVPJVkcwTfqr38P6cLC0YQqWSRPk
cZeox1iOleIrOb79BJZplG7+0/NVt27dHqG0ZLPZkmS6ylfe16X/xMuXL4v5
qkWdDXR8NUTlPfx/krSxmDuCeXEvHcc8mzEf58WO9nKkXr160+n+cq1pp9ui
AMR85QZyV77asmVLAJatR6nsxW0yvXd+RD4uyQcPtWFNnjx5OP2G4qvixYtf
kOt7pCJfVaBzrsJXU6ZMGURrkfj4+CRQu1N+bEjXk53Ilrg9R3Gkfq979+4R
ao2U0NDQj+Rx5ivWbVJ8tWjRIuKrC5g2Kd0kYnqqosJ06NDhcbnejt0PVD7T
LvmNTwkODr6Ied6l+Gr48OGjVN7D/6dJGwu+wrx4XOVZR+R/LEMTyY7h4eFT
6P7MV6yiLHflK3xfX3zPWNmnR99P5AtmM2prHrQFtU3+/9sHH3zQnX6D+Aq/
Zb2wvFgpz60/cuRISTrnKnz1ySef9KeyActG+r49J224LY923Cqv/Q21PCoq
ykf9Xrt27Xqo82XLlu0nj3M5xLpNKo9v2LDBA9OLyntrMD2VUWEGDBjQXKYz
Orc9H+mV0vsfZrNZrMkTGBjoSnxllbZSeW8r/j+Ijql505gXF0k75ifPKzue
RtYVbYEtWrQQ7WTMV6yiLDfmKwu+5x451ufGhAkTquMxsa4ybfMiWv+OtmfP
ntX/Hq2Xag9Da3052waOkI6veprk+Iv7779/Zn5tqLfj1atX7b936NAh+/kd
O3Y4/f1ZRUO7du2ypxt9eqJ8qE9reVFMTIzYYlkZIL8tICgo6D/kK9GvXdT5
So1VPXHihP2d6X/9OcqLjrLj3Xff/ZrywY989Srdn/mKVZTl7nwl3/fGqlWr
6oE2llqNqc6L9OvW63833fr0riAdX/VS5cNTTz31qXxHzwKwoTlDGKfbgGVs
6fy+Z5X3VDrLa1qletBy7ty5Mpj+/3U1vspgp6zynj6/5tWO1NdoCQ8Pf0uV
JchXo+n+zFesoizmK42vlixZUofamhISEshvkik/yui7Sn/O2e/vKGXGV126
dJkrbWjLrw0z2lH6PBJy5bWCWI6VPt3o0xP9n9/0iXmA/EeZjhw5UsqV+Sq7
vKc/lw87ijUqwsLCxjFfMV+5kpivNL7C9y2Y9X/pfsQiNF6BtnfyG0rjsvTh
DeojMzO+Ih/20oaOHXdO9ZTeJneKI7Jx+vBcXhlF5NcjN+mb6vP04Q1THikf
JceOHXMuX92e3nOSP6xGyR+KoZCpmK+A+cqVxHxVwHyVGxURn+2kQuWrIm4r
lmvKMHyVmYpQ/mC+Yr5yVTFfFRhfaWXrvHnh8Mkng2Dy5Fdw+z84d05jj4zl
nzaf0AzbtoUC+c+aNq0vbvvDr7+WkecN1Y5VKHyl6qfLlwPQFv3Qhi/jdjB8
8UU9uDXeQx9e29Icgk8+6Ybh+wtbzpv3aLo4YRW+VPrdsaOySNfTplFcDsD0
rvmkytguRe1WFJ+7d3thuJdk+MGYH5rL804vl5zOV7fyhz/aprcufyg/6tnl
j04YfoCIg3nznnCyHZmvmK9cUsxXBcZXWh4pVmw+/gDY9frrLYHylpz7LETl
XlqaFa5dM0GFCl+mC9+3b7gIk5RkqHgoFL5SdWhsbEg6m/j7/yRsRfWHnlNV
3C1cWDtd+GLF1sswhrKhW0ml94kT26eLm/r1PxYslZJiyyS8GUaPbpchP8yQ
5z2c/U5O56tb+aNKhvzxKyQmUpjb8wftf/NNtQz5Y7MM45TvD+Yr5itXFfNV
AfNVzZozwMMjGXx9r4CnZxrcc88sSEigsvFWHiJ/iFTurVhREh/mP/DxSULd
FNdFRGjf6+7MV8ePV0VbJAl7+PgkgM12HVaurC5tZ9GFtwLNIahdexzaGoTN
6ZqaNZfJMIayoVtJ8dWUKY/K/HADlYwJ5y/48UdfGZda/a7m/V24YIKKFRdj
XKba4zIi4gN5P+arW/mjEtrmmi5/3ISpU++SNr2V5lW+7Np1pMgf/v4qf6yW
YZivCk/MV24g5qsC5qvq1WfK78RNYDafw+15+O474X8Q6witPFPf7k891RPD
AJZ561HnxXXDhoXJsIaKh0Llq2PH1Pf2dbBYfhT/d+0aIdo9VPmr+p/27PFA
2x3BMNdQa0XY6tVXyHsayoZuJcVXn3zyqIgTD4+juN0m0nvv3u2A6hs1zlp9
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
xfWVCRMmPI7HGkZFRTWirSsoOjq68caNGxuGhIR8RekZ83Kq3KbQNjg4eGNc
XByNBTA7oGzMnK+ovYO++/bs8YUWLcZDWNgs6NFDawtRfquz4qtly7xEv2LN
mnPwHj6oYuJ3XnvtCVGude/+kP039M8SEdFL3MuV+CohQevre/fdB9GGM9GW
H8D+/cHy/bNvvxoxYoy0Rw1hRwAfUT/j9wUmgu2yn1Yf/5qv/YQErV4qUeJr
0T6ycaNN2pPHYt1J2fGVOtev33MYj7Pg8cffgAsXrDr/JZnxFa2fU1mMY6xb
N0L3WxQnXlk8R/p4uueeb8W4x6tXtd93Jb66lT/aYP6YgXb9CL/PSkl7Z95+
Rbp2zYLfe39D/fordL9lkTbVzxfQxrOfOmUWfeePPx4BK1e2FvebOrWR/J1s
yxnVVzB79uyHyHbIVFSOUH9CmmzHShozZkz7LVu2uFQ9JHUvbcuXL79Tx1eN
yR7MV64jHV+VRs44a7PZUhVvuLIw/6Z7R3xvsf/BBx80kHk/vwyi5ZFataaJ
vqvw8AViP6vxmmpuIP1PfOXpeUNcN3x4Rr6Kh7vu+tB+TPNZrs2TW7JEjNG3
z4OLj9fGqIwY0avI85WnZ4q0h8ZXaj5l5tdpNg4P/1hcU6tWpNjPyFexsb72
a778sgKQP0tv78WSr6yCm9TvaDazwL59nvgsZ/H7fq2wPc1V4zFYd5ZiqMmT
28q+3LN2vlJjeG6PRxMovvL0/D8Z/++Jc9QHvG0bfQwewji7Dk899Tzmj6r4
3XJ7+tHWoDLDmTM+GCYUvv++NnTu/DxeexHuvTcCbtww5WV+raH4ytPzurRP
M2nvnOSPCTJ//CjPWUXbrbf3Atl3OgqZrA78+GP6eYSqX5D2mzV7C7y8Tom2
sl9+6Squmzbtjnwl+wWt169fN1WtWnUBtVshXyXpyuQ0LJOdXk8UglLxPZPp
Wx/rYFHWM1+5jhRfRUdHl8G4vmSA9Fbgkt9J6eTp6Ult0tC7d+/HyB5Jqj7I
u7TrK1eeI8qcpk2Xin1Vtmk8pXwDqHXXtO3Ro5XFNaSBA1va7xkZ6QP0vV2q
1Db8Ln0dy7Y3sJ6nddkuQ0jIZKw/0vdXqXcoWL7qqeOrOXTM4Xx19Gh1nT0a
yHez2N8l47xwZeOmTbW2w8qV/0/sK74aPny0OD548AcwceLrULPme+DhsQ/r
iYMwY0Zd2fdh0T2H1rZ44ADFp3bPkSMbO8qWbiGVFidNelzG5SWIji4rbaji
zZLO34jiq6NHKYGtlfH/kbyf1kY1fvy9eHy3PX2YTCehUaMp8M03Wl+5Nl5b
++0vvmiD52muruZbzmyeAQcP0m+Y89IGmYGvzjmNr2g+DI1d0+yTfr6xPn+o
8Qe38scHMn+stx+nMDNnVsC88JPOpucxj3wFo0aFCf98qv7/6KO7xfnx4x8U
1y5a9LTYnzKlqRjbnpiYLV9R3F66dMmEfPEzcQYq43d9qhqP5Q7COliU9cxX
riPFVzt27ChOY+1CQ0OP4vYg6nfUNtR2V1FISMj2KlWqbMe0fJO+l0xaWzSl
7TQPDw/K30mRkZGVpF0c0371wAPjoHr1Y9C9+2Sxn918Y1VenjpVDsuzP8V1
EyY0tH+HfvcdjW//G1ngGgQGHkYoPCPriW1Yd2j+ftS8HlLh8NWLOr76nI45
nK9OnaqE9jgq7VFbHMuufVHZuHv318U1DzwwS16j8dWwYaOEPQIDT6CO4f/X
xP4jjzxzm320b3Wtr6Vp0xEi3IABL8hwXA7mVKrPet681iJOsGyBHTtKSjtm
ziGKr8j/Vc2an8v4HyXvZ7OPp1q3zgxTp7aA++8fg6ywTjLBf2L8IZ1X+eDI
kSCs+1siQz8o5tZRX/sDD3ws5oJSWst7+xV9m8ZJvjqPfBVAxwuNr06dKov2
OSDt00DaJyf5Y4TMH1/Ic7fmUVJ/+ZQp9eCllwZDpUrfAc3BIbv27dtJhNu9
2xMCAv6AqlVvtaWvW6eNKf3885pin9atz+b5sYy10fiqNm3aTKJvW+Qse/sV
tefQMW9v71gsu7dWq1bN6fVHAYjq1wNY5x7C7VGsgxtIu3C5wipyojkqWPeb
Hn/88ecpD8v25zQ5zh3q168/kcI4gK0cK8VMqn+wRo2pYp/Gto8a1VB8k5cs
uVB852u+FbXr1BwfxVfbt2tzsx0wfl/HV0N0fCV8qDqMrxwtNe5E9Q/+8Udp
sb9pE9UVM4DmEI4dWw+09gyLtJV2Tf/+/cU1/fsPlPfifkHny2wfZ6RE47f7
928t1gMvXfobOafWhvGVnnWoD7h27Xdke0tlGae5yhepkm+Qr6pi+k+WfHUJ
+Yr8QhQ8XxWUtHxyyxbkB4t8lxQrdhaB56A41rXrs8J2desOg27d+uL+C9Ci
xRzRjtaw4UTcbwd//qn1+2Yx/0N+25t//fXXymi7M+pbV7Zl0f/7ftbWvyJb
O98uLJZjZXYlUXlHZeLfyCV9+/Z90Ww2x9O4K/xWgrCwsPdiYmJobLs1xWjj
ldPz1Q38Vp0h30nrI+nZ83nZ33WfDK/6ILVycuRI7fyOHffI6/L9feQSfPX7
75VAjfuJjrYgY50EszlafLvTt7dqH+jXr68IX6lShJi/TnPaeC1DYyklxQvj
xkfEzdWrJrme5x8Z5hVaRbjkZD8Rf23btkcOA5g0qblMH7nKFy7JV3qOSUnx
RJt64//aOMWwsK+E7wz6/6mnuqN9D4v+WGpTp3mYNJ5Na+cinzM/4HeLSdg5
mzWLqA2Qvmlfe+21WiVKlDgg5w+m4f9bIiMjy8txWiqvOb0OKQA5P85ZLAcp
WWMV8549e8gfxV/SHwX89NNPYkymA8ZdOV6KrzT/DFfxu3uaPG4Tbf1//mnD
40fA13crnDxJ11iEbyDyK0BjsIcM6SHmF27aFCr2qf7J5zPp+Gqojq8WSxsb
m69GjnxV+qsQfcEQH6/1Gw4a9Kzwx/j88/fJ8OS7ktg0GSpWHCz8WJPtqO2D
vul5PULnSH3/rF5dEt54o4VI5xRXdIzW11mypC7GYwpUqLBIjBdaty4Ivvwy
WKR9FeboUSvUqPGjaLNcuzY43X1zKB1fVVNjh5CvLhdJvlJtsRcueEH//m1g
zx6PdKw1a1YQ+Pn9BTZbLOYBM/z7rxVt6A8nTnjDsWN+WO54wmefPSXy1dtv
h+G+B+aRHH2DpMp5061bt56nyhL8f6L+HIvFMr6obYramqOiooIwHx+VfHVz
8eLFDehbypD+6hVfLVniJdpRKlSYJ89Z7W1Vzz+vtdf/739dxH50tBnrmC+w
vNuEx4/JMSk78VgUhISoNWTy/K46vhqg46tP6Zjh+WrgwLeEPbZurSKPa3MM
Tp/2AG9v+h6PhYMHbVh/19SN8f0Zz8UI+9ls0bj9P9i8uYS43mjtna4ulUe/
/joUaM6n1RoLZct+Ci+9NAkCA78GzVfsP/DFF9p4wx49yD9TAnh4rIJatWYh
BM0DzS85QJcur8g4zHVe0PFVRUz/1yVf/YN8JXxEFTG+0p71yhUPaZvzUK3a
N8Km9erNAvItSvbq3Lm9bMPV20v7//vve4gwU6c2ThdPd7ajlcrdsLCwmaos
wf/fkGW18b53WSxWpsrCn+ql7777riodNyRfqXaSX3+1QYsW72N90Vmes9jn
BB044Inn3oUHH3xBfIvu30/jsd+EZs2+gObNyT/Ux7idhce+gE6dXpDX57n8
1/HVyzq++lja0Jh8peJ2+vQHhT3+/LOY2Nd8+WjnJk0if1qzYfv2EvD776Wg
VatJEB4+WaxD1LjxZ2i/T9Gmn+P2E/zGD7Jf7+x3cyepuYVnzljgzTdbYdx8
gHGzAWrW3INxsxXj9m2YO7eKDGuGmJgAjMP+GG4lNGiwC8Puxv/nwrRpzcV4
LYq/vK2Po/iqrG58+wnkK+qnLFp8pexK7YALFtTHPPAaNGz4M9p0F9psB7Rs
OQO5qaEsi8xyTq1ZSPs+MWP5VB9tPxWWLq0k9vVzbbK3o1rf+T1VluD/A/Tn
WCyW8ZWS+XpAl5GvqtNxQ/KVAaXjq346vposbWhMvrqTeLy6ayln3Jvn/K7j
q3KY/i9KvvqryPJVzuTw8lHHVx/o+GqQ/hyLxTK+ijRf3fKZdfszZjyn/JXe
8n2jlyPnDxY9vtJ8hGVebit/QZpPSlMW9rPawzj7XdxZys+lPl2r/9P7LzNn
CJPez1Yef99l+Sq9zyy9vbL3YaHyVe794DNfsVguoCLNVwZSkeYrFssBclm+
Knw7Ml+xWC4g5ivHiPmK5e5ivnKYHZmvWCwXEPOVY8R8xXJ3MV85zI7MVyyW
C4j5yjFivmK5u5ivHGZHl+ar1FSwJCeDDWVNS3P+87BYBSXmK8eI+Yrl7mK+
cpgdXZqvWCx3EfOVY8R8xXJ3MV85zI4uyVcpKZovi/nzoU3XrjC1Rw/oc+6c
OGfmdiyWK4r5yjFivmK5u5ivHGZHl+SrpCQQ5WC/fvCmXAZi25Ej4pw5NdX5
z8diOVrMV44R8xXL3cV85TA7ujRfjRgBETYbpHh7w7rjx8U55iuWS4r5yjFi
vmK5u5ivHGZHl+arYcNgFLVfIWP9cuyYOMd8xXJJMV85RsxXLHcX85XD7Mh8
xWK5gJivHCPmK5a7i/nKYXZkvmIVGRFDcN7O2ja0jY6O9tHz1ZIlS0LQZsxX
ORTzFcvdxXzlMDsyX7EML+KDFFqz1ADPYlQhF1jQTtZdu3Z5Yj4+KPnq0qpV
qyrjeevNmzeZDXJmR+YrlluL+cphdmS+YhlaKdp68SItbt682ev8+fOB9H9a
PtaHdzXJtitR5s2ZMycI8/EJDw8PMJvN1yZMmHAvcoEIp8pNVtZivmK5u5iv
HGZHt+Qr8oGFMmcipz87S5PsCxRp8MyZM6bRo0c/hulzx+LFi++jY1jXFdn0
6UjpykLLiy+++DK1XVksllTKy8hXabj9u06dOp/Onz+/hrSrFa9x+nMbVcxX
LHcX85XD7Oh2fHUHhrIgf1kd3caF9zMnJwO3HeTIVqLut6e9WbNm3R0cHLyU
0iZyA0RGRrai48xXWtse2Wv37t3Fy5Urt4psRO1WKi+TbJj45f8XX3nllc7y
Wiu3/2Uu4iuy6UcffdRf2bBLly5T8JiZ+YrlDmK+cpgd3Y6v8JzpyhVN167d
0vXrYLp61X4PbssqZFGdppiJ/keOKt6yZcv3ME3eoHTp7e1NbTKp3333XTiF
cXe+kuPVzRs3bixmtVq3ko08PT2TZT5Ok1u1b+eujh07Djl//jzZ2MbtWLcr
MTHRg7azZ89+QdnumWee+UB/jsVyZTFfOcyObsNXsbHauS1bwDMwEBYWKwY7
LRY4YDbDn7g9aLXCHn9/+LFzZ3hm/34RNt1YLeKt5OS8jd86fRp83n0XWiPH
eah7OdtGRpJkBZHejhw5Yu3cuXMfTIvHVZuV2WxOttlsghmQr+7DcDa8xou2
LiSr1B3DEhvh1uPgwYOmChUqfCf5KZG4qmTJkm+hzQ6hzSg/xz333HNP+/r6
7pD8lUTbF1988QWyNd7HM6e/6Uby+PPPP02tW7eeSjZEW6ahjVcdOHCA0hu1
F3qwzViuLFku2JCvKjJf5V3uyFdRUWDDYxew6NzRqBH0a9oUIho3hmG4fb14
cdhC4cPDoc/Nm2IdQyuK2rL0tjDT8QyMlFl6IxYT1zVpAm/jfQ9dvar1EdJY
L2fbyAiiPio1xgq5yjRw4MD7AgICoigdWhF4sW5LkW0xaTq+akjhU1JSnP78
zhK9O41Zf+yxx4aRTby8vIit4NFHH/3fxo0bTWi3g7K96irul1y/fn0gHltL
rIphibESXn755eZ0D27DSp8e4+LiTJUrV/5Msn2qGstWrly5dfv377fKNOv0
Z2WxCkoqfR8/ftyP+Srvcke+iokBC7LVvyVKwLTk5PTXHToEppo1BWPFHj8O
lowctHIl2M6ete/fMY0pvmrWDGbiM+xLTNSOM1/dysO0XbBgQWj58uW/UWlQ
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
mK/yJuYr4yopKcly5coVbxbLUbp48aLv5cuXvWfNmlUP8/lF+qZXkvXO2fXr
11eTYX2c/bxFWH6oQFRAZsI4CEQFnT171q9EiRLfk/2Rr9J8fHyORUZGlqX8
36JFi4918wcHnD9/3vTggw+KOYVeXl6CsTp27PgcHqe48qN4zeZ5fOUzOdsu
hSV/2latWnWcjq9A8moKcpZK7xfuueeekbt37/ZxdnlvZDFf5U3MV8aTsvnK
lStrBwYGxgYHB5/A7bGgoCDScRYrr8J0RNujmMcvUbsI1TXUf0LCOiiFxqrg
sTgKI8Oycq+jqL9RZMcLcpuZzqONT1M9L9tVEsaMGdNclct6/6JNmzYdgsct
1J+L18xDFiMmpmuSAgICcvI8p1Fn5f/Otk9utQ+1A3UiKHdl4FFMz3FqnoCu
rxVkek9WnIXbXT179uxw6dIlm7PLfyOK+SpvYr4yntSYjKVLl7bIUCawWA4R
tZcgR6Vmci6zY6yCjQtR9zdq1OjDGzdumBITE70o/2f03y77rqxr1qzxwWMH
iI91Y7ddWdT2dK2A7p2K9k9QdqxcufKrzi7/jaic8BX5KsP/LRhWSPrYL5Dn
kWsdOt0udxLzlfGk+Arj4CEsQ2lsZgpuqYy5wmLlU1dRl1Epsk6xf9cTb8l+
wmQZ5qoBnrcoimxH/XepdxC1P13BeCB2uPT999+HYL63IF+Juiyz9XGIvYiz
+vbt255+A6+9lMPnuYG6Kf93tn1ym17Poo6bbqXd3MZDpmyVoZ/w9MMPPzwI
46B4YZf3RUF34iu5LndmrJBTfxo5llx7skj43GK+Mp6UzTEOGmJcJMo42Y37
5Y8dO1YhNjaWtixWroVppyJtx44d+yClLekDgBgrVf5/7a233mpGYQ4fPlzR
2c9bhFUZVS0HqiBVjnwFpOn8NWTGV9JPlqjL5G/k9Hkq5jK8USRsI1Uhl/Yv
X6lSJWFD/fgrk9Zmpdppk8uXLz99zZo15Zxd7htZ2fGVXHPb9O+/NKYFSkVE
QJORI6HR1q1Q/Pp17Zyj2pr097lxw/l2uZOYr4wnHV/dQ99fMk5+++OPP5z+
bCzX0fjx4zt6eHicpf4pkr+///EePXo8ePPmTac/mzsrJ+s78zy3nCkkJGS0
jq/EmCvlV6xMmTI/Tpw4sYn010q2tbE/scyVDV9RXWWOiQHvEiVgLh5PQqVK
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
jEvC9ID/1xDHVHrQ/J3fmsen+Iranry8PhXc8OSTn4lzOeEr4o+wsLXIMefw
vPb7juarRYvayfaro/j/Lb7K/H2049r7rJHv85p8n+z4SvufWNhkOgLBwVsk
X2n3V8/Sv39Hcc9q1d6SfavpfIBliK9076OPR3U+D7LRlvnKeGK+YrFcQ8xX
xlNWfLVt2zbl+9acR2X3u7fOq/r8wgVv5IS7ULXwf89057IS8cX27eXwmvpw
+HA5eUxjisz4isKnpFjFvEB//z+RZfbI/kHH8ZVipQsX/PG57kaF4v+WXLxP
ZbzmHnyfkvKYVb7P7Xyl+RC1wLZtPnjuMpQosVzwFfUHJiVp7Vb9+z8u2Kpc
uSmwf792v/z5Z8hLWqBnMYeEhDBfGUzMVyyWa4j5ynjKgq9+W7t2rekK1tUX
L14U2zzIivJA2ZJoDLn8vZs3b6YLl7G9JN9SdYLiq0uXAkQbGfGGWvPvk09C
BHO0bDkN8HmEn3OyA/lqiI214bm9qGjxf3KypxP9nuvfR+OrS5es9vcB0N6n
d+8HxPv07DlQsGBKitaG17//o+J42bJzYO9ekwifmGjLyHk3btywx8fVq1ft
xylu8JgF5SnjMq9pQahq1apvMV8ZS8xXLJZriPnKeFL1G8ZBa4yLNJvNlobb
K35+fusCAwPX51G/oHYHBwcfxO2+lStX1lO/N2bMmLp0PigoaGPFihU/kPW5
OU3jAotQbpiL0hRdo9pkbvHI+8gjyenCJiebYPbsSmCx/IEJ7yZMnKit+afG
0ZNoLL3J9Dtqnfg/r7bV2svy8j6WLN5npVirUB+WfDTMnn03vs9ZMZZs9epg
sqVgxv797xP+serXfw/On8887qUPrJ49e3bFONmA2li/fv3n5XniKivG0Uo8
fgjjaz9uN6HWyfjNbXpYY7FYjmP6SpV89Z5Mf66wvmKRFfMVi+UaYr4ynhRf
RUZGPuzh4ZHm7e2djFusys25FpXNaqvX0qVLw9XvDRkyJFwd9/X1jboix2M7
rB1L1QnNm38s2m46d54EXbq8ixX6dKhV6yfho9RkugAdOrQDYjvVnrNlS20M
MwWeeOJD6WM0Dv+fhMcm4zmRPp2ytsyt9/lRjOfq3HkiEJt07Tob9zeKd7TZ
jsDrrzeW15hh82atfc5qTYN7750Ezz47GTp2/Bh69JiM142FrVtFu1dyQoJg
m06dOr2q4qRKlSrvy/tYLl++7Ilx9Jc+LvXxnFshW4GPj08Spq/UHj16TJHp
j/nKiWK+YrFcQ8xXxpPiqwULFjyckYvyI6xPU6kepS3Gbwv1e8OHDw/DYykW
iyUlKCjopwLgKy0NtWjRGx9kk2yL2oHaDJUqrUDG6AtffllSjqmy2NuuFi4M
Ez5HtbDRUrSWzS4811CEcUZf1q33GSuf6Q/5jDHQtu1i6NPnGem7XWNF2m7e
XBcslmjhI5WeX9MO+X5r8H28RdzfvCnCd+vWbRjFCSkkJGS8/G3BVxhHBykO
Mb6SHZk+2rZtO12mP+YrJ4r5isVyDTFfGU+psh9q9+7dxYcNG9ZuxIgRT+L2
MVQYqkVuNHTo0JZ0XY8ePaiN6hi1g+H2BsZvHfV7FE61f1CfkcP5Suns2Vs+
s2gdQdrGx+vDpO+3u3FDC0Oi69S1JDrn7LjSv4+S/rziMBL1D6p3OHEi/TW6
91FsTWOhVN1Kc/zkfWzIV2aMo80qvu69994XMP6aDhkypFVu04ZMTw/K9NVh
/vz5tfTpj+UcMV+xWK4h5iv30IEDBzBaTXtk/F7B+A1V5wqNrzTp57BpfsyJ
KSgdZv57eZkLWVjK+ExWOS4/q/mAd5zbmQO+MtG4LNUn+Nprr9XJ5TOzDC7m
KxbLNcR8ZVxRO0JSUpJVJ0uG/Tvq5s2b4rpNmzZ5Yrzuk/F7FeO3hvqdQuMr
vY8ppex+QwufuQqG/fLyPumVXfis3kX3Pjnkq42Kr4YMGdKE4vfGjRu23KaN
jOkpxRlj2Vi3ifmKxXINMV+5tnTxa3M6X7HuqNzyFcZdIzqXpJ9vySrSYr5i
sVxDzFeuLearoiXmKxbzFYvlGmK+cm0xXxUtMV+xmK9YLNcQ85Vri/mqaIn5
isV8xWK5hpivXFt54Ku1cXFxYtxzYmKiRY6BLhQZkeewPjMVpg3i4+M9aNu5
c+cRzFfuKeYrFss1xHzl2sohX4UpvgoKClrt7GdmgenZZ58dqOMr5V+U+coN
xHzFYrmGmK9cWznkK7E+jtVqBTy/ZcCAAffgsYZDhw5tgNuCVv3hw4eL7Zkz
Z7zIJ0XqnfwcFI7dSBa0mwWf7Z6IiAjxjAVtjyFDhtyL2zo1atT4CBkqTfLV
BPlczFduIOYrFss1xHzl2sohX7WjMpzWznHkeiu5FT6TWPMmMTHR6XVIglwH
cPDgwc2cYAvBVWr9G+SrKfK5rMxXri/mKxbLNcR85drKIV89qeervKwTnJ+1
p729vVPwudKCgoI2RUVFiXX7nMkLNPaMtnPnzg1Bmxz28vJKQyVT+15h2ScD
X02Vz8Z85QZivmKxXEPMV66tHPLVo5Kv0rDevkTr2xWCtiBPbQ4ICPiNfttm
swm28/PzWxUTE+OBz0XjvQt9HRzFVrNmzaqGz3OEOAa5KoWeDW23E585hp69
IO2Cisa4OIF8lSr56mP5fMxXbiDmKxbLNcR85drK7fxB5J01p0+fNpGPBqrL
aVsQontfvHjRfP78eXPHjh1foN/38vJKoC0+wwJ8Xno2i3r+wpBiq9mzZ4fg
cxyj9irknER6pjp16kTExsZaLl26ZEYVmF1o7iZtO3TowP4Z3FTMVyyWa4j5
yrWVF/9XN27coOOFxTVmGkuOPDFUthHdpK2/v/+MmJgYOm8rDMZSbDVnzpxQ
arey2Wx6thp57ty5wrKJeI5u3boxX7mpmK9YLNcQ85VrKy98hXU4+Ra10Fw+
3Bao5HxBG80ZbNeu3Xh6Dm9vb9GOVb9+/XfkPD46X2Bsox9vRWwl263EM9Su
XXvkP//8Q+FsmBeEz9WCtAc+i4227F/UfcV8xWK5hpivXFtFwX87MRRurUeO
HDEFBARMk+1Ygm86duw4nNhLMZijfzvjeCtiK5vNJtqtatWqNfLvv/+mcDb5
jAUu9t/OYr5isVxDzFeuraLAV7rntFKfoJ+f39dyPJbgnM6dO79IYfB5bI58
puzGW911110Rhc1WJOYrFvMVi+UaYr5ybRUVviJR/xtuLdHR0TZfX98fdIyV
gozVWbZfOYSx7jDeKkKOtyqUsV8ZbMB85eZivmKxXEPMV66tosRXJMUJyFg+
/v7+G2VfIfmBSujQocOD8fHxJjlGKT+/oR9vFZvVeKvCZisS8xWL+cq5onUb
jLgWKqvoifnKtVXU+Iqk0hw+c4mAgICd1LZEPkjxGS+NGTOmCZ1LSEjIUz1j
tPFWmbw785Wbi/nKELI64/uK5VpivjKuaB4Z1bc6WXIr4hDaRkVFeRYVviIp
Dtq0aVN5amPy8PCgdqw0Hx+ff1asWFFLHya39zTSeKuMyi1fDRkypDHFb3x8
vC0v6UNKpC+uT4wh5ivnatKkSXdJHzVUP1qNsB4qq2iK+co9tHfvXoxW014d
X4Wqc0bkK5LioX79+tXC5ztDzy79qR9ZuXJlZRkmR+kzi/FWCc4eb5VROeSr
DYqvxowZc7ez0xbLsWK+cq7w73p4ePj4LVu2FJPH6DuX+wxZuRbzlfFE7Va0
PX36tD/GQ1hkZGRL3DYhJqJ2p9xoyZIltA2dMGFCbYzXw9QOROUHHqutfs+o
fEW/r3ijb9++jah/ENNnqsViobX5di1btiyYzt2JsYw83iqjcshX0Yqv2rVr
1xHjMmTRokU1c5s26DpUfUxfLXAbjvVJRX36YzlHzFfOFX17mbT1Pw917tz5
6e3bt6tz3MbLypWYr4wnVccuXLjwAVW+omgtuivU9pRLXdFdlyTX+UslblO/
J/kqFevsVKy7fzIKX5HoGaiNnv5/5ZVX7sPnvEFrLUu+iELG8gf5fZnZ9UYf
b5VV3CNfDZNxnop8NV6etyBfeWAcHZDxRWPSrlN+zUO6UGmDbJFG9nj00Uc/
ls9gc7Yd3FnMV84V5QdaW119wwQEBPwyadKklnFxceI8lUfMWayciPnKeFJ1
bGRk5MNybHcqbSlu8ipqt6J2H/qftnjvVur3hg8f3oqOEXsUK1bsVyPxFUky
lqjz+/Xr1xHTZwq+R5Jsx/q/5cuX0zmL9O9gvy7DeKujRhxvlVXcd+/efZR8
PwgNDX1Pnie+8sQ4OqHiK7/pQs0dwG1ajx49pspnYL5yopivnCv9Ny3msVT5
f3LFihVnrV27toIurMXJMuvkdLuxbhfzlfGk6liMA2qvSZNtTvE0fgq1n8ap
51HHUCdRJxYtWtRQ/d6AAQMayPsewPLkU+qDAgPxFUn2FYp6/+WXX+5lkj7e
6RszODh4gRyPalXr6OjGW4UYebxVVnHfrl07ekdqpzpQtmzZgfI8rS/tgXG0
XsUj6s88pgWK792of9E21A6W1rVr10nyGZivnCjmK+dKx1dC1E6s+gxR5x9+
+OGRGzZs8HP2c7KML+Yr40nZnMbGYFwkyDj5A1nBivHkQf43yd9CHhS4ZcuW
4rgNunDhgp0rTpw4YabzeM5j27ZtViO15+ilZ6xWrVoNMcm1ComxwsPDp1+7
do3CmRMTE9V4q+omg4+3yuwdaXvo0CGLjDOPHTt22PMgxQ3GkR8eL07jb3Hr
ibLmIS14o0zly5efoPpBkK9GyPTHdbgTxXzlXGXkKz1nUbux3D9UvXr1r1Hz
naAvUQtQP9esWXMD/b969WqRLoxadrurmK+Mpyz46vddu3Y5/dmcLbUW4f79
+03lypV7S7Zj3aQtzfn5999/BX/NnDmzSIy3cqJEeRwaGvq2qj9oTD0dY75y
rpivnKus+EoqDcuUZF17lhF0fvHixR707BnHSLCcK+Yr4ykrvoqOjjaTb+HE
xETa5kv6vj9iFt05p7//nST7AK2HDh2i9pcpVMb4+/sLhho7dmwztFsF/P94
URhvlc072uMko/+d/Ma9lAdtaW4i85WxxHzlXGXHMhn6Cp0qGoOPdQO1qR2P
jIxkvjKgmK+Mp6z4ivpz8HiRYKBCsJFgrD///JMYaz6VN/369YvAvyrIVbFF
ZbyVEyXa+ZivjCfmK+cqC55JleNg6f+bzZs3n4H5pVMX/MNtoUn7ua4d77//
/v74HDekv53jWFeIdIF51+n2Y90S85XxxHyVYzuJtPv7778HjBs37ol58+aV
9vX1PUhjJLAsTJDtVqN17VbMVrfEfGVQMV85V5n0B9rHXRUrVmzVa6+9dq+z
n3Hfvn2lqZ6WdQPxlagzmK+MJeYr44n5KudKSEgQnLBo0aKSJm1+pH28FbLV
YMlWnklJSU5/VoOJ+cqgYr5yrvR9gTTGQO7vHjVqVIezZ8+KMGlpafp1ywpN
WN550DYqKqoGPtMV5itji/nKeGK+ypmUD4aZM2eSD4YTst1KsFWzZs16P/nk
kyHh4eF9rl69SuF5HbH0Yr4yqJivnKtM/DG8qvPHYHFmnUjjb2mLdUF15ivj
i/nKeGK+urOy829Vu3btwZ06dboby8l/aB8Z61npH8tmJJ9eThbzlUHFfOVc
SZunVKxYcc6kSZMqquOUL5xdfjBfFS0xXxlPzFfZS7eeIPlgSOffqm7duqPI
j0WpUqUiad/Ly4uOpyBjPRkfHy/8Zzm7jDSImK8MKuYr5wrLjOgPPviglW49
HMOM3WS+KlpivjKemK+ylm49waqKrfT+rU6fPk3hPPbv3x8cGBgYQ+dpDjOe
v47fom3o2sTERPZPznxlWDFfOVebNm1S/xtunUHmq6Il5ivjifkqc+nWE6Sy
Jcv1BJGfhP3wG5Tm2OynOcwomlt9Abmsgf5ebizmK4OK+cr5MkJfYGZivipa
Yr4ynpivbpduvJVY8+ZO/q0UI7z11ltVqPxRaxnj/6fxHjX093RTMV8ZVMxX
zpUj2qzS0sCSmgrIaA5/NuarIiTmK+OJ+Sq9shtvld16guq6cePG1cOw/+I1
aZKxDv5/e+cBX0Wx/fFb00lCCUiTGpDeFEKLooKiPBAMogi250OkhypVKYIg
3SCg6B+QGpDyKE8slNARKQrSCS2AGiDU9Jz/ObMz4Sak3eQmt+Tcz+f72bu7
s23Ozs5vZ86ewX2VtszrQgjrKweF9ZVLYUSdZbP9sb5yLlhfOR6srx6Snb9V
dmPe4PZCR9C4OXRf47Yqps1B3GdRy/wuZLC+clBYXzkvSUkgniXjxkGrwYOh
/b17Yrk+MRFs8oxhfeVcsL5yPFhfaaTztzqT2/EE6ZtBmo4dO7YN5SfuQ43P
+gvmsSflKR7LofxYCwDWVw4K6yvnhPoCUV+ZYmJAV748LEazQf36MDgqSluf
kJD3/kLWV84F6yvHg/WV9f5WOdif0BP/+c9/OuM+Ujw9PeMpHinqi7Wo0wwy
XwuTxmJ95aCwvnJekpNBT2zbBqX8/GAZaazHH4e18+dDgExjykt/Iesr54L1
leNR2PVVbv2tsoJit1M7Fm1bo0aN/1jExiK99q3Uaw73PXY+wvrKQWF9ZR+o
7GP+5rn8k76i6e7doGvdGkJJYyEXhg6F5nfuiDSGxETI1XFYXzkXrK8cj8Ks
ryz8rSrkxt8qK+T4OCbaB+1LaqxY2d84Te67sGgs1lcOCuurgoXiMGRWz8n2
KIO1xMeL8mVCHaV77TUIRhNeJp3VvDkMOn8+df9WP2dYXzkXrK8cj8Kqr2zl
b5UVclsj7Qv3OdFSY6HmGi2PYS4EYxWyvnJQWF8VHFKviDzdtGmT54YNGyrk
x3G2bAGvEiVgCWksLy9YtmaN6C/Uq7YuK8+X9ZWTwPrK8SiM+srW/lZZIfdh
pH3ivr+07CtEzdX3ypUroi/RxTUW6ysHhfVV/iP7AkVe0pgPI0eOfNpgMPw+
HH8yjVgXEgIfNGsGu5s3hwiaWkvTprA7KAj2Pf88bPf3h51mM8SRxqpXD1Zr
9gSr7Mn6yrmg+4zaRyMiIrzQTqeUvlqxYkXVrNpNmfyD8pzqdrRBAwt9dRBt
pPyw7X6OtiSdv9UpW/hbZYfcl4Haq1BjLSdfd6WxnnrqqW4yjSuPo0P6UV+p
UqUJqg7v1KnTYMoX1lf2hep9tIG+adOmnyvb4P/+ZC/WV3nO2zT399q1a6uW
KVNmIeYxjaEFn3322SC5TpT9MmVgqvSfsgn4aEvR6yExOBjWaefD+sqVkfWM
/ujRo2gm3XFpr1ubN29+DLTv1llfFTAqz7ds2RJooa/2ko3o+epK+io//a2y
g+ownBpOnjzphsfbTBqLYjfg/8SxY8f+S6ZxSY2F95GZpoGBgSNUHf7mm2/2
kjZxyWt2FtA2Iv+ffvrp1LZF/P8+LXPV+zG/Sd9WsGbNGt/mzZuPIY1C+evp
6Zmg1+uTP/3008EyjcjngAAYL7URtTsl5ZJkJAWJMZngPuorituwVbM16ytX
he45LMuG27dvU/vo83h/3aKxcHEa/z7+oqOjyZ5mxEj1OpP/yHGvzMePH9e1
a9duINb5yag3aOy8v9BGjcluVP+5gE0Mqh7PT3+r7FDPXNR3RfC4u+kcENJY
d8eMGdNSpqEyYHCAPLNJvqs6Gp/Rxfz8/H7EeyyFQK215rvvvvMCEQ9R9I/a
+1wLG8I29FwOCwsrUbp06W3KNvh/JT4T2Da5BGR/37lz53S9evV6A8v3CXrO
UHnH+i5JvleBhb4SbeWbN0P5VaugOdIYaWIty5ZB0//+V0zrlCsHU6RWu/nB
B/AaaP5XVrVfsL5yHqhuobqra9eubdFGCTLmYgrecyl0r7Vq1aqvvc+xMHLn
zh1dqVKlRpMNsOyTLegZS7a5//HHHwfZ+/xsybx586rkt79Vdqhn1vz580vg
8Y/KcyFNewPzu4G98yg/IH8AHx+fg/IeSyZkW8m2ixcvcpu1HTlw4ABp/SPS
Hqm2wWfCz6ixCsO3rTaHdEe/fv2aeXl5/ax0FUJ9gqKuy0Bf2Yw//gBdcDB8
TNpKr4d98+ZBTVqelMTfD7oq+I4k+gVv375twnvuGNXfpONlmRbvTNQ3Vb9+
/dXNmjVb2bRp05U0ZfIPmccrMM/XkD+A1Lkp6jkrNVZU48aNKV24k9sknMDr
uYL3HfUJJuSnv1V2WPjXUz/lOXzeghxH5x/M71UukN/qHqNrWY5lfj/lN7WP
qj4ovF5xj5UrVy6C0gQFBYXb+3wLE5jfwjYBAQEH6N6ztI36X6xYse2F3DZ0
3UuQFTlJr56p+M72E/X7Ux7SGFn0PFV5m5W+Ig2UmAhGa6A47bit6H+fPRuq
envDbtJW1avD3KNHwUPuN1d+dEpf4ftRVUt9tXLlSpPsA7W7tmAe+vjQ91p4
v9GYIZZ1uSrTYDnPFByy3Sr98hRZ57sM1FaEzwjRbkX+VlFRUXR/5mufYBZl
QsWHqIHnc53yGs8tIzu4BBZtVpZktIwpeB6xQyb2YnIIPmtSLNoQ0mCr9is5
/o3h1i3Q9eoF7XCXN5HEli2h+9WrWpq8jEVI+gp1lOHo0aNl8XxjpL46u3Hj
RlpP/tJ21xbMQ32FdUkptM892R9iWZdwWbYjUkelsYErP1/xvTxMxZ6yp/++
hb+9GA/a3vmSz/dY+ncq1W5t93Mr7GRQ1l3u3coeyD7BR56jttBXpK0Q47Vr
oHvsMRiKu8N9w+GxY6G2TGO0Nt5V2v0/9NHv0aPH83i+CaivhG/uhAkTKsbG
xgp/adB8810Fu2ul3NqKdPD9+/d15cuXp34aaq9Ksizb3t7exxYsWNA+PDz8
X8SqVauYfGTlypViOnv27E6Y/5Gy34zGIk7EciTKf+nSpcOXLl3aDtN2cAWb
rF69uh1eR6eIiIhSeF+SD7nd/UvU99v4DGuCOqsLnuPLrpDXxIoVK9rjtF37
9u2H0f1E77/yHktwd3cXdU3Xrl37Uprly5e3t/f5FiZkfrdr3bq1+KYT7ZFi
Uf6Fbd57771elEba0e7nbCdeojzISVp6plLZffvtt9/EfNwt6zlV16XYWl9R
v9/9+6B76in4GDXW8p9/Bvomgb4TzNO4gwR900TTnj17tsdzvSvfj5Kl3/TV
3r1715Pp7K4vmNRvp/Tz58+ntsa90k5Jcnp29OjRDe19joUVrNtbog0uWb5j
Sf9WX3ufW35Bmt/e56Cgb7nsfQ75CcVUDAoKmqBL234VX6tWraHy2wLGTpw4
cUJXtmzZz9LZJq5Vq1YD7927Z/fzc1bw2WlCndUT8/KibMtK9Tm2cf+g7u+/
Qf/PP9p/1Fx5fpaoOEq7du3yxfO8Qv6hqh2EpqQZUYMfr1y58jBkFDLSiRmP
fIp8cunSJT+6fkd4786l3VSscD+676Qf1v2wsLC6VN/FxcW50fu8i4LvFIlu
AOQTmEjfRhuTkux+TkYV13LLli2lQkNDewwePHgsTl9R3w7Fx8eL+Az2Pk9b
2sERx/xT38s7QP7YFBkXQ7wL0/eoAwcOHIEMwzLfUNbfJhUDxN7nmhtUGaYy
TWWbyrgz2JHyW9nm5s2busmTJzcj22DZH4L/62v1d4rJGa7F0bCMFfzdd98V
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
KqVnfcX6ytVhfcUweYL1FZNjlL6aORPKmkxwm3z29uyBRrQsK31lgXomF0gs
/suXwQ31VptNm6AiWPiY3Lwp+g1r6/Vwt3FjWELtZ5huTHp91bIldJXa0ID6
zITLLlHMetoH6yvWV64O6yuGyROsr5gco/QVPm/L4v1yj+4ZfN4+Sctyoq9k
bIZH/DxsAT3v8fzMRHy8dp47dgidlFijBsyW6YyxseIbRvLN11HcrYAA2E6x
R4cPf1RfBQdDV7md4eJF1lesrwoX2ekrGRsuDTm7j6xLzzBOSqb6KqOyk1V5
yG1ZY5yHvOqrgkKOJWikuAq1a8MXdJ4jRkD37dvF+B+6M2dA98EH0I2Wv/IK
9KBtQkNhlNkM1yMjQb9wIfjg/6Rnn4U35D4Nly6BCZdd6NIFJtAy1lesr1yd
rPSVbH+m9WlisND4ObRdRu3TFLNXxjal/BTbU1quKxgXJav2K1qXPoYRtQ9Q
GcrIH/2ReEfkt6LSO8C1MnnEWfQVoeLX7toFPmXKwCpZP9zF/2dxGk3zeN/P
OXhQO+8ePeATXHYftZf+yy+hiIwH95bcnwF1F7VfRbdpA5/Tstzoq5UrVxpw
nS4uLo7S5AnUOqnHo/+W6/IrT+2pryyvD4+T6bXnhvj4eD1Nd+7cyfrKgqz0
FT0Lbt8WY2WJ+HD37mnTtDZ7qLEs47hQOiI+PjWtVeMjMIyTkKm+io3Vyg75
JKuyI2NUKVI1FpWT7Moaj8/s/DiTviLU/Un+VnPnQpO2bWFo2bIwpWNHGPHt
t/AkxRIFSO1LrInX1ZHiih47Bib83zU8XIsnT2A50OOy9hs2QF2az+p+zkxf
bdy4Ub235IXMrjcnafKYn3Ztv7I2D6yB7GU4fPiwJ+urh2Skr3bu1PTV2bOg
8/WFD5C5RiMsNBhgMbKwa1eYOXw4vEhjeWr3xENfy7AwKNGpE4w1m2GrXg8H
qlSB1YMGQYcrVzTb8XgdjIuRob6i5VhGKmDZCfPzg2+x/CzG8rCofHlYMGQI
DF64EB4nTaXqVCw3RTDtNH9/+AbTLcb039EU67MFgwfDkMWLoTylY43l3Dib
viJUO1Ym6/PlmZ5eX5mxQsHpuQkTJtAyXUREhJjmhj179ohpVFRU6vHov+W6
2NjYfMlLe+kralvat29f6vVFRkamrouOjk5z7blh586dYjpv3jw9Xs8JC31V
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
k+1ahoLC3nZkGIZhGEeD9ZXD6Cs6F8PWreBrMMB+PI24L74AMU7PP//Q+IgP
9VW/fkJfGS5cAF2RIrCMlvXoAS+Tv5bSaQzDMAzD5A7yS0pISDDkhbi4OCNN
T506ZWB9lb2+2rFjB+WbMTY2Nk/5TmD+pTkfGreYpnPnQkU8jTve3nD0f/8D
T4rR5uUFW5W+GjAAgmlcgnbtoD/N16kDo69eFf7wJtJYr70GY1u0gO0tW8IP
OP0xn6B970DGR0WJ8+e+SYZhGIZJx61bt6j9aqeFvmqk1hVyffWkhb7ae/z4
8Xw8n4ftT61aQXvSTrVqwYLoaNAVL/5QX02ZAnVmzYLa9B/ZfPKk2N6otvXz
g71yXUGw//Rp7fisrxiGYRhnRrV7REZGeqAWeGLgwIE1aIoEWsuAAQOq0fS9
994LRP3wmxwDJwk1VRN1vEKur4IoP2S+HO3SpUsVXF8N883qvJY8MWjQIGGv
I0eOeFjaUzsnbaxx8mlv2RI+Iw1Tvz509/eH76WeSahbF9qWLAl/Go1wde5c
KInb6eWYnOJ6nnkGulepApMCA2FcPjIWmYC8eemSOHduv2IYhmGcmqSkJKFv
duzY0TDdODIpeYHG+3Nzc6Ox/lJQU72kjkf6CpfFosagdftcUV/R+DhynMNk
0qsqDeqrFyk/8NrFeIiYT8l5zOdUey1ZskRoWIpJn9a+QicZT50CI0ranZg0
Hjkp9dUD5Dj9HzcOWmnbs88VwzAMw+QVpa/27NnTiNpVUBOJsZdRHwC1weQG
Veer/1OnTm2vjof/61nogt/Pnj3rcvrKy8vrmLrG/v3711JpwsPDX06nYVPz
KDf5THby8PAQ09WrVwfRMdLrK83Gmi/WunXwOGqsv9zdAbeBFJym4Dw8/TQM
u3dPaCuTjENKiOvp0gXeadYMZvTsCS/iPK030zSfYG3HMAzDuARKX+3evZt0
TzLqKmoXiUONcJD6ufLA+eLFi1/B6eWwsLBgdTz8XxWX7S1WrNhhnC6OjIx0
KX11584dfbly5b7z8/M7RPkwfPjwSirNunXrWuKyK3jtlyl/kF9zmbe/ent7
/4Z2eqB83FatWiV83DLSV5qdNe3yxhvwMn1PiCRSu5WbG6y7eVOkSR9fVPwv
UwZ+pnQNG8Lnmp1YAzEMwzBMdljoq8pYT9+WvtfnFy1aZKK2mBs3buhpmgs8
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
     "], {{0, 432}, {600, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{600, 432},
   PlotRange->{{0, 600}, {0, 432}}], TraditionalForm]], "Output",
 CellChangeTimes->{3.639152770872333*^9, 3.6391532162479153`*^9, 
  3.639159648694828*^9, 3.639164629075732*^9, 3.639514097908083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Background", "Subsection",
 CellChangeTimes->{{3.639167485683757*^9, 3.639167486811747*^9}}],

Cell[TextData[{
 "This section will analyze the 1V ADC design that is an adaptation of the \
New Gray Code ADC that is described on the wiki.  The goal of this analysis \
is to find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]],
 " in terms of mismatch applied to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]],
 " in terms of mismatch applied to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 ".The operation of this ADC should be the same as the design on the wiki, \
except that it has been modified for 1V operation.  This means that the \
following equations describe the general operation of the ADC, where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", "out"], TraditionalForm]]],
 " is the digital bit that is output for the ADC stage in question, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]],
 " are the Signal and Reference currents, respectively, that are output to \
the next stage of the ADC."
}], "Text",
 CellChangeTimes->{{3.638574196226016*^9, 3.6385742433499413`*^9}, {
   3.638576947169384*^9, 3.638576947321929*^9}, {3.638583195098085*^9, 
   3.638583210727099*^9}, {3.6385866406172333`*^9, 3.638586744542201*^9}, {
   3.638590538214889*^9, 3.638590554196527*^9}, {3.638590668113895*^9, 
   3.638590698166869*^9}, 3.638843694013208*^9, {3.638843729396935*^9, 
   3.638843737274762*^9}, {3.639152820722786*^9, 3.639152839705645*^9}, {
   3.639157550393549*^9, 3.639157874434348*^9}, {3.6391588371211567`*^9, 
   3.639158942857233*^9}, 3.639162769307796*^9}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["D", "out"], "=", 
   RowBox[{
    SubscriptBox["I", "Sin"], ">", 
    SubscriptBox["I", "Rin"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "Sout"], "=", 
   RowBox[{"2", "*", 
    RowBox[{"Min", "(", 
     RowBox[{
      SubscriptBox["I", "Sin"], ",", 
      SubscriptBox["I", "Rin"]}], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rout"], "=", 
   RowBox[{"Abs", "(", 
    RowBox[{
     SubscriptBox["I", "Rin"], "-", 
     SubscriptBox["I", "Sin"]}], ")"}]}], TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.63915792027527*^9, 3.6391579457208138`*^9}, {
  3.639157989296771*^9, 3.639158077071159*^9}}],

Cell[TextData[{
 "For the purposes of clarity, I have changed the naming convention from the \
wiki.  What used to be ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "inV"], TraditionalForm]]],
 " is now ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 ", where the S stands for Signal.  In other words, this is trying to clarify \
that the signal that we are trying to digitize is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 ".  In order to digitize it is compared to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 ", where the R stands for Reference.  This signal is the same as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "inV"], TraditionalForm]]],
 " on the wiki.  These naming conventions also apply to the output currents. \
"
}], "Text",
 CellChangeTimes->{{3.638574196226016*^9, 3.6385742433499413`*^9}, {
   3.638576947169384*^9, 3.638576947321929*^9}, {3.638583195098085*^9, 
   3.638583210727099*^9}, {3.6385866406172333`*^9, 3.638586744542201*^9}, {
   3.638590538214889*^9, 3.638590554196527*^9}, {3.638590668113895*^9, 
   3.638590698166869*^9}, 3.638843694013208*^9, {3.638843729396935*^9, 
   3.638843737274762*^9}, {3.639152820722786*^9, 3.639152839705645*^9}, {
   3.639157550393549*^9, 3.639157902438366*^9}, {3.639158245995489*^9, 
   3.639158319043293*^9}, {3.63915835370157*^9, 3.639158514878839*^9}, {
   3.639158716386036*^9, 3.639158763884326*^9}, {3.639159029434001*^9, 
   3.639159041660637*^9}, {3.639159078502294*^9, 3.6391592079538918`*^9}, {
   3.639159381556219*^9, 3.63915938226781*^9}, {3.639162754330524*^9, 
   3.639163099504271*^9}, {3.639164637130928*^9, 3.6391646499465*^9}, {
   3.639167512474716*^9, 3.639167518646762*^9}}],

Cell[TextData[{
 "Transistors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["M", "S_"], " ", "and", " ", 
    SubscriptBox["M", "R_"]}], TraditionalForm]]],
 " comprise the portion of the ADC that determine ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]],
 ".  Likewise, transistors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "D_"], TraditionalForm]]],
 " calculate the absolute value of the Difference between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " which gets sent on to the next stage as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]],
 ".  "
}], "Text",
 CellChangeTimes->{{3.638574196226016*^9, 3.6385742433499413`*^9}, {
   3.638576947169384*^9, 3.638576947321929*^9}, {3.638583195098085*^9, 
   3.638583210727099*^9}, {3.6385866406172333`*^9, 3.638586744542201*^9}, {
   3.638590538214889*^9, 3.638590554196527*^9}, {3.638590668113895*^9, 
   3.638590698166869*^9}, 3.638843694013208*^9, {3.638843729396935*^9, 
   3.638843737274762*^9}, {3.639152820722786*^9, 3.639152839705645*^9}, {
   3.639157550393549*^9, 3.639157902438366*^9}, {3.639158245995489*^9, 
   3.639158319043293*^9}, {3.63915835370157*^9, 3.639158514878839*^9}, {
   3.639158716386036*^9, 3.639158763884326*^9}, {3.639159029434001*^9, 
   3.639159041660637*^9}, {3.639159078502294*^9, 3.6391592079538918`*^9}, {
   3.639159381556219*^9, 3.63915938226781*^9}, {3.639162754330524*^9, 
   3.639163099504271*^9}, {3.639164637130928*^9, 3.6391646499465*^9}, {
   3.639167512474716*^9, 3.639167518646762*^9}}],

Cell[TextData[{
 "Based on Ben's DAC Mismatch analysis and his characterization of transistor \
mismatch, we assume that the transistor threshold difference, normalized by \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "T"], TraditionalForm]]],
 ", can be assume to come from a log-normal distribution, defined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"LogNormal", "[", 
    RowBox[{"0", ",", " ", "\[Sigma]"}], "]"}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.638574196226016*^9, 3.6385742433499413`*^9}, {
   3.638576947169384*^9, 3.638576947321929*^9}, {3.638583195098085*^9, 
   3.638583210727099*^9}, {3.6385866406172333`*^9, 3.638586744542201*^9}, {
   3.638590538214889*^9, 3.638590554196527*^9}, {3.638590668113895*^9, 
   3.638590698166869*^9}, 3.638843694013208*^9, {3.638843729396935*^9, 
   3.638843737274762*^9}, {3.639152820722786*^9, 3.639152839705645*^9}, {
   3.639157550393549*^9, 3.639157902438366*^9}, {3.639158245995489*^9, 
   3.639158319043293*^9}, {3.63915835370157*^9, 3.639158514878839*^9}, {
   3.639158716386036*^9, 3.639158763884326*^9}, {3.639159029434001*^9, 
   3.639159041660637*^9}, {3.639159078502294*^9, 3.6391592079538918`*^9}, {
   3.639159381556219*^9, 3.63915938226781*^9}, {3.639162754330524*^9, 
   3.639163099504271*^9}, {3.639164637130928*^9, 3.6391646499465*^9}, {
   3.639167512474716*^9, 3.639167526458807*^9}, {3.6392570565158863`*^9, 
   3.639257057014121*^9}, {3.644779730461843*^9, 3.644779740165255*^9}}],

Cell[TextData[{
 "I assume that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 " are the reference currents from which mismatch will be compared.  This \
means that we don't need to include a mismatch term for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.638574196226016*^9, 3.6385742433499413`*^9}, {
   3.638576947169384*^9, 3.638576947321929*^9}, {3.638583195098085*^9, 
   3.638583210727099*^9}, {3.6385866406172333`*^9, 3.638586744542201*^9}, {
   3.638590538214889*^9, 3.638590554196527*^9}, {3.638590668113895*^9, 
   3.638590698166869*^9}, 3.638843694013208*^9, {3.638843729396935*^9, 
   3.638843737274762*^9}, {3.639152820722786*^9, 3.639152839705645*^9}, {
   3.639157550393549*^9, 3.639157902438366*^9}, {3.639158245995489*^9, 
   3.639158319043293*^9}, {3.63915835370157*^9, 3.639158514878839*^9}, {
   3.639158716386036*^9, 3.639158763884326*^9}, {3.639159029434001*^9, 
   3.639159041660637*^9}, {3.639159078502294*^9, 3.6391592079538918`*^9}, {
   3.639159381556219*^9, 3.63915938226781*^9}, {3.639162754330524*^9, 
   3.639163099504271*^9}, {3.639164637130928*^9, 3.6391646499465*^9}, {
   3.639167512474716*^9, 3.639167530213818*^9}}],

Cell[TextData[{
 "For this mismatch analysis, I have denoted the four branch currents, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], ",", " ", 
    SubscriptBox["I", "2"], ",", " ", 
    SubscriptBox["I", "3"], ",", " ", 
    RowBox[{"and", " ", 
     SubscriptBox["I", "4"]}]}], TraditionalForm]]],
 ", individually.  This will hopefully make analyzing the mismatch easier, as \
each current will have a different mismatch constant taken from a \
distribution.  The mismatch constants will be written as as either ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "_"], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "_"], TraditionalForm]]],
 " (depending on whether the mismatch is with relation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], " ", "or", " ", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 ", respectively, where _ is the unique identifier of the transistor that \
differs.   For instance, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"], "=", 
    RowBox[{
     SubscriptBox["s", "B2"], 
     SubscriptBox["I", "Sin"]}]}], TraditionalForm]]],
 ", where if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "B2"], TraditionalForm]]],
 " was equal to 1 (if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "B2"], TraditionalForm]]],
 " was exactly like ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "B1"], TraditionalForm]]],
 "), then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"], "\[Equal]", " ", 
    SubscriptBox["I", "Sin"]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.638574196226016*^9, 3.6385742433499413`*^9}, {
   3.638576947169384*^9, 3.638576947321929*^9}, {3.638583195098085*^9, 
   3.638583210727099*^9}, {3.6385866406172333`*^9, 3.638586744542201*^9}, {
   3.638590538214889*^9, 3.638590554196527*^9}, {3.638590668113895*^9, 
   3.638590698166869*^9}, 3.638843694013208*^9, {3.638843729396935*^9, 
   3.638843737274762*^9}, {3.639152820722786*^9, 3.639152839705645*^9}, {
   3.639157550393549*^9, 3.639157902438366*^9}, {3.639158245995489*^9, 
   3.639158319043293*^9}, {3.63915835370157*^9, 3.639158514878839*^9}, {
   3.639158716386036*^9, 3.639158763884326*^9}, {3.639159029434001*^9, 
   3.639159041660637*^9}, {3.639159078502294*^9, 3.6391592079538918`*^9}, {
   3.639159381556219*^9, 3.63915938226781*^9}, {3.639162754330524*^9, 
   3.639163099504271*^9}, {3.639164637130928*^9, 3.6391646499465*^9}, {
   3.639167512474716*^9, 3.639167530213818*^9}, {3.63916768679608*^9, 
   3.639167687627666*^9}, {3.639169353067054*^9, 3.639169373727646*^9}}],

Cell["\<\
To begin with, we know, based on circuit current analysis,  that:\
\>", "Text",
 CellChangeTimes->{{3.6386402370552998`*^9, 3.638640262285932*^9}, 
   3.638640412583144*^9, {3.638640479270877*^9, 3.6386404886393538`*^9}, {
   3.638640654820774*^9, 3.638640687737862*^9}, {3.6391632102024107`*^9, 
   3.639163273375318*^9}, 3.639164364541506*^9}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   OverscriptBox[
    SubscriptBox["I", "Sin"], "_"], "=", 
   RowBox[{
    SubscriptBox["s", "B2"], 
    SubscriptBox["I", "Sin"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   OverscriptBox[
    SubscriptBox["I", "Sin"], "_"], "=", 
   RowBox[{
    SubscriptBox["I", "1"], "+", 
    SubscriptBox["I", "DS"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rin"], "=", 
   RowBox[{
    SubscriptBox["I", "4"], "+", 
    SubscriptBox["I", "DR"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "Sout"], "=", 
   RowBox[{
    SubscriptBox["I", "2"], "+", 
    SubscriptBox["I", "3"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rout"], "=", 
   RowBox[{
    SubscriptBox["I", "DS"], "+", 
    SubscriptBox["I", "DR"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["I", "Rout"], "\[TildeEqual]"}], "|", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"], "-", 
    SubscriptBox["I", "Rin"]}], "|"}], TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.639163277633922*^9, 3.639163335786076*^9}, {
  3.639164198311973*^9, 3.639164260951317*^9}, {3.6391644254360027`*^9, 
  3.639164425438199*^9}, {3.639164456142229*^9, 3.639164527698406*^9}, {
  3.63916465429254*^9, 3.639164692099135*^9}, {3.639164814313446*^9, 
  3.639164835102166*^9}, {3.6391649317512712`*^9, 3.639164980501048*^9}, {
  3.639165139150733*^9, 3.639165140868204*^9}, {3.639169383950891*^9, 
  3.639169404387968*^9}}],

Cell[TextData[{
 "Of these basic equations, the sixth ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["I", "Rout"], ")"}], TraditionalForm]]],
 " is the only one where the derivation/result is a little unintuitive.  As \
such, the analysis is written below:"
}], "Text",
 CellChangeTimes->{{3.6391643692578907`*^9, 3.6391644140871687`*^9}, {
   3.6391647424607677`*^9, 3.639164751061764*^9}, 3.6391647906453447`*^9, {
   3.639164839570908*^9, 3.639164841939353*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rout"], "=", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"], "-", 
    SubscriptBox["I", "1"], "+", 
    SubscriptBox["I", "Rin"], "-", 
    SubscriptBox["I", "4"]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.639163277633922*^9, 3.639163335786076*^9}, {
  3.639164198311973*^9, 3.639164260951317*^9}, {3.6391644254360027`*^9, 
  3.639164425438199*^9}, {3.639164456142229*^9, 3.639164527698406*^9}, {
  3.63916465429254*^9, 3.639164692099135*^9}, {3.639164814313446*^9, 
  3.639164835102166*^9}, {3.6391649317512712`*^9, 3.639164980501048*^9}, {
  3.639165139150733*^9, 3.639165140868204*^9}}]], "Text",
 CellChangeTimes->{{3.639165199902487*^9, 3.6391652444382133`*^9}, {
  3.639169411321385*^9, 3.639169411321451*^9}}],

Cell[TextData[{
 "Because of the nature of the upper portion of the circuit (the Min function \
calculator), we can assume that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], "\[TildeEqual]", 
    SubscriptBox["I", "4"]}], TraditionalForm]]],
 ".  More importantly, the value of each of those currents will roughly equal \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"Min", "(", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["I", "Sin"], "_"], ",", " ", 
     SubscriptBox["I", "Rin"]}], ")"}], TraditionalForm]]],
 ".  Therefore, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]],
 " can equal either of the following equations, which is the same as the \
absolute value of the difference between ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], " ", "and", " ", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.639165272892799*^9, 3.6391652978007936`*^9}, {
  3.639166257909004*^9, 3.639166389934595*^9}, {3.6391665243911333`*^9, 
  3.6391665476383867`*^9}, {3.639169417496827*^9, 3.6391694174968967`*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["I", "Rout"], "\[TildeEqual]", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["I", "Sin"], "_"], "-", 
     OverscriptBox[
      SubscriptBox["I", "Sin"], "_"], "+", 
     SubscriptBox["I", "Rin"], "-", 
     OverscriptBox[
      SubscriptBox["I", "Sin"], "_"]}]}], "=", 
   RowBox[{
    SubscriptBox["I", "Rin"], "-", 
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["I", "Rout"], "\[TildeEqual]", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["I", "Sin"], "_"], "-", 
     SubscriptBox["I", "Rin"], "+", 
     SubscriptBox["I", "Rin"], "-", 
     SubscriptBox["I", "Rin"]}]}], "=", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"], "-", 
    SubscriptBox["I", "Rin"]}]}], TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.63916635917493*^9, 3.639166482194613*^9}, {
  3.639167350316971*^9, 3.639167391517767*^9}, {3.639169422478595*^9, 
  3.6391694389779177`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mismatch in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.6391674438795547`*^9, 3.639167452221188*^9}}],

Cell["\<\
The first thing to note when analyzing the ADC circuit, is that there are 4 \
possible, high-level input situations depending on the following conditions:\
\>", "Text",
 CellChangeTimes->{{3.6391678100753736`*^9, 3.6391679127673807`*^9}, {
  3.639168203178163*^9, 3.6391682114648027`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], ">>", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 "\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " is much greater than ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], "\[GreaterTilde]", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 "\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " is only barely greater than ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], "\[LessTilde]", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 "\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " is only barely smaller than ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], 
    RowBox[{"<<", 
     SubscriptBox["I", "Rin"]}]}], TraditionalForm]]],
 "\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sin"], TraditionalForm]]],
 " is much smaller than ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rin"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6391679157788153`*^9, 3.639168037518445*^9}, 
   3.6391683701606903`*^9}],

Cell[TextData[{
 "In the first and last situations, the analysis is much easier than in the \
",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "nd"], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "rd"], TraditionalForm]]],
 " situations.  This results from the fact that when the values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], "\[TildeEqual]", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 ", then the mismatch can cause the circuit to activate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "S1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "R2"], TraditionalForm]]],
 " simultaneously.  This is a confounding factor because if there was no \
mismatch, then we could assume that if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "S1"], TraditionalForm]]],
 " is active, then so are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "S2"], ",", 
    SubscriptBox["I", "S3"], ",", 
    RowBox[{"and", " ", 
     SubscriptBox["I", "S4"]}]}], TraditionalForm]]],
 ".  This would also apply to the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "R_"], TraditionalForm]]],
 " currents if they were active."
}], "Text",
 CellChangeTimes->{{3.639168390345772*^9, 3.6391683937115183`*^9}, {
  3.639168760609371*^9, 3.639168817181849*^9}, {3.6391688768839617`*^9, 
  3.63916901908116*^9}, {3.6391690844578323`*^9, 3.639169088173995*^9}, {
  3.63917100189047*^9, 3.6391710145517693`*^9}}],

Cell[TextData[{
 "In the first case (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], ">>", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 "), the following equations would apply:"
}], "Text",
 CellChangeTimes->{{3.6391692373916197`*^9, 3.6391692898076153`*^9}, {
  3.639169634842717*^9, 3.6391696367668743`*^9}, {3.639169672737556*^9, 
  3.639169673105153*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["I", "1"], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["r", "R1"], 
     SubscriptBox["r", "R4"]], 
    SubscriptBox["I", "Rin"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "2"], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["r", "R2"], 
     SubscriptBox["r", "R4"]], 
    SubscriptBox["I", "Rin"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "3"], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["r", "R3"], 
     SubscriptBox["r", "R4"]], 
    SubscriptBox["I", "Rin"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "4"], "=", 
   SubscriptBox["I", "Rin"]}], TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.639169293850853*^9, 3.6391693012267036`*^9}, {
   3.639169508044991*^9, 3.639169585116385*^9}, {3.639169759016431*^9, 
   3.639169842302761*^9}, 3.639169926664468*^9, {3.639169970942939*^9, 
   3.639169982836217*^9}, {3.639170022637849*^9, 3.639170051616931*^9}, 
   3.6391706241109667`*^9, {3.639245703028172*^9, 3.639245704901403*^9}, {
   3.639423937998485*^9, 3.639423966719302*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["I", "Sout"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["r", "R2"], "+", 
      SubscriptBox["r", "R3"]}], ")"}], 
    FractionBox[
     SubscriptBox["I", "Rin"], 
     SubscriptBox["r", "R4"]]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.639169293850853*^9, 3.6391693012267036`*^9}, {
   3.639169508044991*^9, 3.639169585116385*^9}, {3.639169759016431*^9, 
   3.639169842302761*^9}, 3.639169926664468*^9, {3.639169970942939*^9, 
   3.639169982836217*^9}, {3.639170022637849*^9, 3.639170051616931*^9}, 
   3.6391706241109667`*^9, {3.639245709859847*^9, 3.639245714379508*^9}, {
   3.6394240130810204`*^9, 3.63942402180201*^9}},
 Background->GrayLevel[0.85]],

Cell[TextData[{
 "In the last case (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], 
    RowBox[{"<<", 
     SubscriptBox["I", "Rin"]}]}], TraditionalForm]]],
 "), the following equations would apply:"
}], "Text",
 CellChangeTimes->{{3.639168390345772*^9, 3.639168400087716*^9}, {
  3.639169645500374*^9, 3.6391696586161222`*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["I", "1"], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["s", "B2"], 
     SubscriptBox["s", "B1"]], 
    SubscriptBox["I", "Sin"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "2"], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["s", "S2"], 
      SubscriptBox["s", "B2"]}], 
     RowBox[{
      SubscriptBox["s", "S1"], 
      SubscriptBox["s", "B1"]}]], 
    SubscriptBox["I", "Sin"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "3"], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["s", "S3"], 
      SubscriptBox["s", "B2"]}], 
     RowBox[{
      SubscriptBox["s", "S1"], 
      SubscriptBox["s", "B1"]}]], 
    SubscriptBox["I", "Sin"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "4"], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["s", "S4"], 
      SubscriptBox["s", "B2"]}], 
     RowBox[{
      SubscriptBox["s", "S1"], 
      SubscriptBox["s", "B1"]}]], 
    SubscriptBox["I", "Sin"]}]}], TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.639169293850853*^9, 3.6391693012267036`*^9}, {
   3.639169508044991*^9, 3.639169585116385*^9}, {3.6391698497621193`*^9, 
   3.639169849763372*^9}, {3.639170074171978*^9, 3.639170083526202*^9}, 
   3.6391706267103167`*^9, {3.63942402930802*^9, 3.639424061248349*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["I", "Sout"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["s", "S2"], "+", 
      SubscriptBox["s", "S3"]}], ")"}], 
    FractionBox[
     RowBox[{
      SubscriptBox["s", "B2"], 
      SubscriptBox["I", "Sin"]}], 
     RowBox[{
      SubscriptBox["s", "S1"], 
      SubscriptBox["s", "B1"]}]]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.639169293850853*^9, 3.6391693012267036`*^9}, {
   3.639169508044991*^9, 3.639169585116385*^9}, {3.6391698497621193`*^9, 
   3.639169849763372*^9}, {3.639170074171978*^9, 3.639170083526202*^9}, 
   3.6391706267103167`*^9, {3.6394241606570044`*^9, 3.639424182058613*^9}},
 Background->GrayLevel[0.85]],

Cell[TextData[{
 "In the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "nd"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "rd"], TraditionalForm]]],
 " cases (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], "\[GreaterTilde]", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], "\[LessTilde]", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 "), the following equations would apply.  It should be noted that we are \
handling the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "nd"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "rd"], TraditionalForm]]],
 " cases as the same situation because these situations are the same as \
saying when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sin"], "\[TildeEqual]", 
    SubscriptBox["I", "Rin"]}], TraditionalForm]]],
 ", where roughly equals is defined as within the mismatch\[CloseCurlyQuote]s \
effect to cause a transistor to turn on when it\[CloseCurlyQuote]s native \
value deems that it should turn off."
}], "Text",
 CellChangeTimes->{{3.639168390345772*^9, 3.639168398511833*^9}, {
  3.639170224670789*^9, 3.6391704392519407`*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["I", "1"], "=", 
   RowBox[{"Min", "(", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["r", "R1"], 
       SubscriptBox["r", "R4"]], 
      SubscriptBox["I", "Rin"]}], ",", 
     RowBox[{
      FractionBox[
       SubscriptBox["s", "B2"], 
       SubscriptBox["s", "B1"]], 
      SubscriptBox["I", "Sin"]}]}], ")"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "2"], "=", 
   RowBox[{"Min", "(", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["r", "R2"], 
       SubscriptBox["r", "R4"]], 
      SubscriptBox["I", "Rin"]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["s", "S2"], 
        SubscriptBox["s", "B2"]}], 
       RowBox[{
        SubscriptBox["s", "S1"], 
        SubscriptBox["s", "B1"]}]], 
      SubscriptBox["I", "Sin"]}]}], ")"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "3"], "=", 
   RowBox[{"Min", "(", 
    RowBox[{
     RowBox[{
      FractionBox[
       SubscriptBox["r", "R3"], 
       SubscriptBox["r", "R4"]], 
      SubscriptBox["I", "Rin"]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["s", "S3"], 
        SubscriptBox["s", "B2"]}], 
       RowBox[{
        SubscriptBox["s", "S1"], 
        SubscriptBox["s", "B1"]}]], 
      SubscriptBox["I", "Sin"]}]}], ")"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "4"], "=", 
   RowBox[{"Min", "(", 
    RowBox[{
     SubscriptBox["I", "Rin"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["s", "S4"], 
        SubscriptBox["s", "B2"]}], 
       RowBox[{
        SubscriptBox["s", "S1"], 
        SubscriptBox["s", "B1"]}]], 
      SubscriptBox["I", "Sin"]}]}], ")"}]}], 
  TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.639170252261854*^9, 3.639170254545216*^9}, {
  3.6391704514853992`*^9, 3.639170486827278*^9}, {3.6391707803793983`*^9, 
  3.6391708868277607`*^9}, {3.639170933958953*^9, 3.639170953696116*^9}, {
  3.639245720600731*^9, 3.639245725988802*^9}, {3.6397770298483963`*^9, 
  3.639777094612047*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["I", "Sout"], "=", 
   RowBox[{
    RowBox[{"Min", "(", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["r", "R2"], 
        SubscriptBox["r", "R4"]], 
       SubscriptBox["I", "Rin"]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["s", "S2"], 
         SubscriptBox["s", "B2"]}], 
        RowBox[{
         SubscriptBox["s", "S1"], 
         SubscriptBox["s", "B1"]}]], 
       SubscriptBox["I", "Sin"]}]}], ")"}], "+", 
    RowBox[{"Min", "(", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["r", "R3"], 
        SubscriptBox["r", "R4"]], 
       SubscriptBox["I", "Rin"]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["s", "S3"], 
         SubscriptBox["s", "B2"]}], 
        RowBox[{
         SubscriptBox["s", "S1"], 
         SubscriptBox["s", "B1"]}]], 
       SubscriptBox["I", "Sin"]}]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.639170252261854*^9, 3.639170254545216*^9}, {
  3.6391704514853992`*^9, 3.639170486827278*^9}, {3.6391707803793983`*^9, 
  3.6391708868277607`*^9}, {3.639170933958953*^9, 3.639170953696116*^9}, {
  3.639245736658082*^9, 3.639245740331521*^9}, {3.639777116821406*^9, 
  3.639777125965762*^9}},
 Background->GrayLevel[0.85]],

Cell[TextData[{
 "It should be noted that this final result is actually the most general form \
of the mismatch of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]],
 " because it also applies to the first two cases.  As such, moving forward, \
I will be using the 4 equations for each path\[CloseCurlyQuote]s current \
mismatch in my analysis."
}], "Text",
 CellChangeTimes->{{3.639171502570571*^9, 3.639171592166915*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Revised mismatch in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.6394264586758347`*^9, 3.6394264640085573`*^9}, {
  3.639841791394813*^9, 3.639841792139813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "\[Equal]", 
        RowBox[{"s1", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "s1f"], "-", 
           SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "\[Equal]", 
        RowBox[{"r1", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "r1f"], "-", 
           SubscriptBox["\[CapitalIota]", "r1r"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
        RowBox[{"s2", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "s2f"], "-", 
           SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
        RowBox[{"r2", 
         RowBox[{"(", 
          SubscriptBox["\[CapitalIota]", "r2f"], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
        RowBox[{"s3", 
         RowBox[{"(", 
          SubscriptBox["\[CapitalIota]", "s3f"], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
        RowBox[{"r3", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "r3f"], "-", 
           SubscriptBox["\[CapitalIota]", "r3r"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "4"], "\[Equal]", 
        RowBox[{"s4", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "s4f"], "-", 
           SubscriptBox["\[CapitalIota]", "s4r"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "4"], "\[Equal]", 
        RowBox[{"r4", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "r4f"], "-", 
           SubscriptBox["\[CapitalIota]", "r4r"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s1f"], "\[Equal]", 
        SubscriptBox["\[CapitalIota]", "s2f"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "r4f"], "\[Equal]", 
        SubscriptBox["\[CapitalIota]", "r3f"]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s1r"], 
         SubscriptBox["\[CapitalIota]", "r2f"]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r1f"], 
         SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s1r"], 
         SubscriptBox["\[CapitalIota]", "r3r"]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r1f"], 
         SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s1r"], 
         SubscriptBox["\[CapitalIota]", "r4r"]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r1f"], 
         SubscriptBox["\[CapitalIota]", "s4f"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s2r"], 
         SubscriptBox["\[CapitalIota]", "r3r"]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r2f"], 
         SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s2r"], 
         SubscriptBox["\[CapitalIota]", "r4r"]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r2f"], 
         SubscriptBox["\[CapitalIota]", "s4f"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r3r"], 
         SubscriptBox["\[CapitalIota]", "s4f"]}], "\[Equal]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s3f"], 
         SubscriptBox["\[CapitalIota]", "r4r"]}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "Sout"], ","}], "*)"}], 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], ",", 
       SubscriptBox["\[CapitalIota]", "s1r"], ",", 
       SubscriptBox["\[CapitalIota]", "r1f"], ",", 
       SubscriptBox["\[CapitalIota]", "r1r"], ",", 
       SubscriptBox["\[CapitalIota]", "s2f"], ",", 
       SubscriptBox["\[CapitalIota]", "s2r"], ",", 
       SubscriptBox["\[CapitalIota]", "r2f"], ",", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r2r"], ","}], "*)"}], 
       SubscriptBox["\[CapitalIota]", "s3f"], ",", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s3r"], ","}], "*)"}], 
       SubscriptBox["\[CapitalIota]", "r3f"], ",", 
       SubscriptBox["\[CapitalIota]", "r3r"], ",", 
       SubscriptBox["\[CapitalIota]", "s4f"], ",", 
       SubscriptBox["\[CapitalIota]", "s4r"], ",", 
       SubscriptBox["\[CapitalIota]", "r4f"], ",", 
       SubscriptBox["\[CapitalIota]", "r4r"], ",", 
       SubscriptBox["\[CapitalIota]", "2"], ",", 
       SubscriptBox["\[CapitalIota]", "3"]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalIota]", "1"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[CapitalIota]", "2"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[CapitalIota]", "3"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[CapitalIota]", "4"], ">", "0"}], "&&", 
    RowBox[{"s1", ">", "0"}], "&&", 
    RowBox[{"r1", ">", "0"}], "&&", 
    RowBox[{"s2", ">", "0"}], "&&", 
    RowBox[{"r2", ">", "0"}], "&&", 
    RowBox[{"s3", ">", "0"}], "&&", 
    RowBox[{"r3", ">", "0"}], "&&", 
    RowBox[{"s4", ">", "0"}], "&&", 
    RowBox[{"r4", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639426488418789*^9, 3.6394266387084923`*^9}, {
   3.639426682817646*^9, 3.6394267098625298`*^9}, {3.639772073446652*^9, 
   3.639772291767873*^9}, {3.639772376216537*^9, 3.639772451084332*^9}, {
   3.63977250065821*^9, 3.63977257908471*^9}, 3.639772637674539*^9, {
   3.639774954994607*^9, 3.639774991549601*^9}, {3.639775028076481*^9, 
   3.63977506617297*^9}, {3.639775183092004*^9, 3.639775324752696*^9}, {
   3.6397753874079733`*^9, 3.639775431180766*^9}, {3.639775495080974*^9, 
   3.639775504232403*^9}, {3.639775596138879*^9, 3.639775610194628*^9}, {
   3.639775670272046*^9, 3.6397756717553062`*^9}, {3.6397758693713284`*^9, 
   3.639775923998314*^9}, {3.639776055488751*^9, 3.639776125106876*^9}, {
   3.639776181321224*^9, 3.6397761988546057`*^9}, 3.63977628396843*^9, {
   3.639776338043828*^9, 3.639776346553884*^9}, {3.639776413224904*^9, 
   3.639776606890449*^9}, {3.639776867888907*^9, 3.639776881382327*^9}, 
   3.6397771849453707`*^9, {3.63983513752864*^9, 3.63983516358323*^9}, {
   3.639835196020007*^9, 3.639835218080612*^9}, {3.639835261263942*^9, 
   3.63983527533869*^9}, {3.6398353175892982`*^9, 3.639835325211155*^9}, {
   3.639835598944294*^9, 3.6398356113436527`*^9}, 3.6398358504850082`*^9, {
   3.6398379712943697`*^9, 3.6398380668033867`*^9}, {3.639838153491262*^9, 
   3.6398381676977386`*^9}, {3.6398382087874393`*^9, 
   3.6398382241472197`*^9}, {3.63983859872716*^9, 3.639838640310915*^9}, {
   3.639838682085814*^9, 3.639838720826481*^9}, {3.639838757151884*^9, 
   3.639838790873601*^9}, {3.639838831231525*^9, 3.639838834078623*^9}, {
   3.639838877008452*^9, 3.6398389373717327`*^9}, {3.639838969244483*^9, 
   3.639838985989561*^9}, {3.6398390217902203`*^9, 3.639839106141974*^9}, {
   3.6398391890105886`*^9, 3.639839192141902*^9}, 3.639839244952503*^9, {
   3.639937821044888*^9, 3.639937824067078*^9}, 3.639937892507144*^9, 
   3.6399397319557877`*^9, {3.639939852156608*^9, 3.639939866756249*^9}, {
   3.639940002655305*^9, 3.639940006513715*^9}, {3.6399400878709507`*^9, 
   3.6399401178578444`*^9}, {3.639940164879732*^9, 3.639940199561583*^9}, {
   3.639940235957881*^9, 3.6399402644495277`*^9}, {3.6399408321564293`*^9, 
   3.639940851965024*^9}, {3.6399408845026703`*^9, 3.639940926802004*^9}, {
   3.6399411073277473`*^9, 3.639941114818864*^9}, {3.639941160162202*^9, 
   3.639941252506258*^9}, {3.639942690243836*^9, 3.639942703401511*^9}, {
   3.639942745405672*^9, 3.639942749424754*^9}, {3.639942823338461*^9, 
   3.6399428331437693`*^9}, {3.6399428639614573`*^9, 
   3.6399428681856747`*^9}, {3.639942985449345*^9, 3.6399429929621277`*^9}, {
   3.6399430960945187`*^9, 3.639943098535881*^9}, {3.639943232892086*^9, 
   3.63994330385994*^9}, {3.6399447779510517`*^9, 3.639944818907391*^9}, 
   3.6399448743434*^9, 3.6399449046548023`*^9, {3.63994501177927*^9, 
   3.639945040220509*^9}, {3.639945402384354*^9, 3.639945402510268*^9}, {
   3.639945543109665*^9, 3.639945546682138*^9}, {3.6399458100958157`*^9, 
   3.639945897525468*^9}, 3.639946031664633*^9, {3.6399460733574667`*^9, 
   3.639946105329741*^9}, {3.639946152313794*^9, 3.639946156037758*^9}, {
   3.6399462295160418`*^9, 3.639946279755734*^9}, {3.639946330045837*^9, 
   3.639946409580673*^9}, {3.639946473536038*^9, 3.639946489063642*^9}, {
   3.63994652315723*^9, 3.639946575759561*^9}, {3.639946610863703*^9, 
   3.639946632341021*^9}, {3.639946667248557*^9, 3.639946846297871*^9}, {
   3.639946951190536*^9, 3.639947028831259*^9}, {3.639947085851614*^9, 
   3.639947090101461*^9}, {3.639947611898531*^9, 3.639947617271203*^9}, {
   3.639947820499928*^9, 3.6399478229891872`*^9}, {3.6399491630348043`*^9, 
   3.639949177430068*^9}, {3.639949255488624*^9, 3.639949268406073*^9}, {
   3.639949299600545*^9, 3.639949327031706*^9}, {3.6399493606672792`*^9, 
   3.63994948714388*^9}, {3.639949522362916*^9, 3.639949524501214*^9}, {
   3.639949799934251*^9, 3.6399499487482643`*^9}, {3.639949992515917*^9, 
   3.639950009876377*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Solve", "::", "svars"}], "MessageName"], ":", 
   " ", "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}], 
  TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.639949924825802*^9, 3.639950019813011*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "s1r"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"r2", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"r2", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}], "r1"]}], "-", 
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "s1r"]}], "+", 
         FractionBox[
          RowBox[{"s2", " ", 
           SubscriptBox["\[CapitalIota]", "s1r"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[CapitalIota]", "1"], "+", 
             RowBox[{"s1", " ", 
              SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], 
          RowBox[{"s1", " ", 
           SubscriptBox["\[CapitalIota]", "s2r"]}]]}], "r2"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"r2", " ", "s1"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", "s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              RowBox[{"s1", " ", 
               SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r2", " ", "s3"}], "-", 
              RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "r3", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}], " ", 
         
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", "s2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               RowBox[{"s1", " ", 
                SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
         RowBox[{"r2", " ", "r3", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}]]}], 
      ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r4", " ", "s4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", "s2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               RowBox[{"s1", " ", 
                SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
         RowBox[{"r3", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r4", " ", "s2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               RowBox[{"s1", " ", 
                SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s4"}], "-", 
               RowBox[{"r4", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", "s4", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}]]}], 
      ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", "s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              RowBox[{"s1", " ", 
               SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r2", " ", "s3"}], "-", 
              RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "r3", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", "s2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               RowBox[{"s1", " ", 
                SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], 
         RowBox[{"r2", " ", "r3", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "r4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{"s2", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
          SubscriptBox["\[CapitalIota]", "s1r"], "-", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       RowBox[{"s3", " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
        RowBox[{"r2", " ", "s1"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["s2", "r2"]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], " ", "s2"}], 
           RowBox[{"r2", " ", "s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]], "+", 
          FractionBox["s3", "r3"]}], ")"}], " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", "s2", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
         RowBox[{"r2", " ", "r3", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r3", " ", "r4", " ", "s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s4", " ", 
             SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
            SubscriptBox["\[CapitalIota]", "4"]}], ")"}]}], "+", 
         RowBox[{"s1", " ", 
          SubscriptBox["\[CapitalIota]", "s2r"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r4", " ", "s2"}], "-", 
               RowBox[{"r2", " ", "s4"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "4"]}], "+", 
            RowBox[{"r4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", "s4", " ", 
             SubscriptBox["\[CapitalIota]", "s3f"]}]}], ")"}]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", "s4", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["s2", "r2"]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], " ", "s2"}], 
           RowBox[{"r2", " ", "s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]], "+", 
          FractionBox["s3", "r3"]}], ")"}], " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["s2", "r2"]}], "+", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[CapitalIota]", "1"], " ", "s2"}], 
            RowBox[{"r2", " ", "s1", " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]], "+", 
           FractionBox["s3", "r3"]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "r4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}], "s1"], "-", 
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       RowBox[{"s3", " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "r1f"], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], 
        RowBox[{"r2", " ", "s1"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "r3r"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "s4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "r3r"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "r3r"], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "r4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "r1f"], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["s3", "r3"], "-", 
          FractionBox[
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "r1f"]}], 
           SubscriptBox["\[CapitalIota]", "1"]]}], ")"}], " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"s1", " ", 
          SubscriptBox["\[CapitalIota]", "r1f"], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], 
         SubscriptBox["\[CapitalIota]", "1"]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r3", " ", 
          SubscriptBox["\[CapitalIota]", "1"], " ", 
          SubscriptBox["\[CapitalIota]", "4"]}], "+", 
         RowBox[{"r4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", "s1", " ", 
             SubscriptBox["\[CapitalIota]", "r1f"]}], "-", 
            RowBox[{"s3", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "r1f"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SubscriptBox["\[CapitalIota]", "1"], 
            RowBox[{"r4", " ", "s1", " ", 
             SubscriptBox["\[CapitalIota]", "r1f"]}]], "-", 
           FractionBox["1", "s4"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"s3", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}], 
            RowBox[{"r3", " ", "s1", " ", 
             SubscriptBox["\[CapitalIota]", "r1f"]}]]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["s3", "r3"], "-", 
          FractionBox[
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "r1f"]}], 
           SubscriptBox["\[CapitalIota]", "1"]]}], ")"}], " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["s3", "r3"], "-", 
           FractionBox[
            RowBox[{"s1", " ", 
             SubscriptBox["\[CapitalIota]", "r1f"]}], 
            SubscriptBox["\[CapitalIota]", "1"]]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "r4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       RowBox[{"s3", " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], 
        RowBox[{"r4", " ", "s3"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "4"], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s4f"], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "s4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "4"], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "s1r"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"r2", " ", "s1", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"r2", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}], "r1"]}], "-", 
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "s1r"]}], "+", 
         FractionBox[
          RowBox[{"s2", " ", 
           SubscriptBox["\[CapitalIota]", "s1r"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[CapitalIota]", "1"], "+", 
             RowBox[{"s1", " ", 
              SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}], 
          RowBox[{"s1", " ", 
           SubscriptBox["\[CapitalIota]", "s2r"]}]]}], "r2"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"r2", " ", "s1"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r2", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], 
         RowBox[{
          RowBox[{"r4", " ", "s2", " ", 
           SubscriptBox["\[CapitalIota]", "1"]}], "+", 
          RowBox[{"r4", " ", "s1", " ", "s2", " ", 
           SubscriptBox["\[CapitalIota]", "s1r"]}], "-", 
          RowBox[{"r4", " ", "s1", " ", "s2", " ", 
           SubscriptBox["\[CapitalIota]", "s2r"]}]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[CapitalIota]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r4", " ", "s2"}], "-", 
              RowBox[{"r2", " ", "s4"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}], "-", 
           RowBox[{"r4", " ", "s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              RowBox[{"s1", " ", 
               SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}]}]}], ")"}]}], 
        
        RowBox[{"r4", " ", "s2", " ", "s4", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s1r"], "-", 
              SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ")"}]}]]}], 
      ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "r4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{"s2", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "1"], "s1"], "+", 
          SubscriptBox["\[CapitalIota]", "s1r"], "-", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], 
        RowBox[{"r4", " ", "s3"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "4"], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s4f"], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "s4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "4"], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "1"], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
        RowBox[{"r2", " ", "s1"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r2", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], 
         RowBox[{
          RowBox[{"r4", " ", "s2", " ", 
           SubscriptBox["\[CapitalIota]", "1"]}], "-", 
          RowBox[{"r4", " ", "s1", " ", "s2", " ", 
           SubscriptBox["\[CapitalIota]", "s2r"]}]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r4", " ", "s2", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s4"}], "-", 
               RowBox[{"r4", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
         RowBox[{"r4", " ", "s2", " ", "s4", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "-", 
            RowBox[{"s1", " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "r4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}], "s1"], "-", 
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "s1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "1"], "r1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], 
        RowBox[{"r4", " ", "s3"}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "4"], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s4f"], "-", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "4"], "s4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        SubscriptBox["\[CapitalIota]", "4"], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.639949926499607*^9, 3.63995002110809*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalIota]", "4"], "\[Equal]", 
         RowBox[{"r4", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "r4f"], "-", 
            SubscriptBox["\[CapitalIota]", "r4r"]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "4"], "\[Equal]", 
         RowBox[{"s4", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "s4f"], "-", 
            SubscriptBox["\[CapitalIota]", "s4r"]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
         RowBox[{"r3", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "r3f"], "-", 
            SubscriptBox["\[CapitalIota]", "r3r"]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
           RowBox[{"s3", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "s3f"], "-", 
              SubscriptBox["\[CapitalIota]", "s3r"]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
           RowBox[{"r2", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "r2f"], "-", 
              SubscriptBox["\[CapitalIota]", "r2r"]}], ")"}]}]}], ","}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
         RowBox[{"s3", 
          RowBox[{"(", 
           SubscriptBox["\[CapitalIota]", "s3f"], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
         RowBox[{"r2", 
          RowBox[{"(", 
           SubscriptBox["\[CapitalIota]", "r2f"], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
         RowBox[{"s2", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "s2f"], "-", 
            SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "1"], "\[Equal]", 
         RowBox[{"r1", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "r1f"], "-", 
            SubscriptBox["\[CapitalIota]", "r1r"]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "1"], "\[Equal]", 
         RowBox[{"s1", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "s1f"], "-", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}]}], ","}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "s1f"], "-", 
          SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "r1f"], "-", 
          SubscriptBox["\[CapitalIota]", "r1r"]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "s2f"], "-", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
        RowBox[{"(", 
         SubscriptBox["\[CapitalIota]", "r2f"], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalIota]", "2"], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "r2f"], "-", 
            SubscriptBox["\[CapitalIota]", "r2r"]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "s3f"], "-", 
            SubscriptBox["\[CapitalIota]", "s3r"]}], ")"}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
        RowBox[{"(", 
         SubscriptBox["\[CapitalIota]", "s3f"], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "3"], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "r3f"], "-", 
          SubscriptBox["\[CapitalIota]", "r3r"]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "4"], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "s4f"], "-", 
          SubscriptBox["\[CapitalIota]", "s4r"]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "4"], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalIota]", "r4f"], "-", 
          SubscriptBox["\[CapitalIota]", "r4r"]}], ")"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalIota]", "Sout"], "\[Equal]", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "2"], "+", 
           SubscriptBox["\[CapitalIota]", "3"]}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "s1f"], "s1"], "\[Equal]", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "s2f"], "s2"]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         SubscriptBox["\[CapitalIota]", "r4f"], "r4"], "\[Equal]", 
        FractionBox[
         SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            SubscriptBox["\[CapitalIota]", "s1f"], "s1"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "r1f"], "r1"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "s2r"], "s2"]}], "\[Equal]", 
          RowBox[{
           FractionBox[
            SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "s2f"], "s2"]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox[
            SubscriptBox["\[CapitalIota]", "r4f"], "r4"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "s4f"], "s4"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "r3r"], "r3"]}], "\[Equal]", 
          RowBox[{
           FractionBox[
            SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "s3f"], "s3"], 
           FractionBox[
            SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r2f"], "r2"]}], "\[Equal]", 
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r1f"], "r1"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s2r"], "s2"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r3r"], "r3"]}], "\[Equal]", 
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r1f"], "r1"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s3f"], "s3"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r4r"], "r4"]}], "\[Equal]", 
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r1f"], "r1"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r3r"], "r3"]}], "\[Equal]", 
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s3f"], "s3"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r4r"], "r4"]}], "\[Equal]", 
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}], "\[Equal]", 
        RowBox[{
         FractionBox[
          SubscriptBox["\[CapitalIota]", "s3f"], "s3"], 
         FractionBox[
          SubscriptBox["\[CapitalIota]", "r4r"], "r4"]}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2f"], "s2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3r"], "s3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3r"], "r3"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2r"], "r2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3f"], "s3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3r"], "s3"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3f"], "s3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2r"], "r2"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2r"], "r2"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3r"], "s3"]}]}], ","}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s1f"], "s1"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r1f"], "r1"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1f"], "s1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r1f"], "r1"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4f"], "r4"]}]}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2f"], "s2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2f"], "r2"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2f"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r2f"], "r2"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4f"], "r4"]}]}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3f"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s3f"], "s3"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1f"], "s1"]}]}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3f"], "r3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3f"], "s3"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2f"], "s2"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4f"], "r4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1f"], "s1"]}]}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r4f"], "r4"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2f"], "s2"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s1f"], "s1"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r1f"], "r1"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s3f"], "s3"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2f"], "s2"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1f"], "s1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r1f"], "r1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2f"], "s2"]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2f"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s3f"], "s3"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1f"], "s1"]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2f"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r2f"], "r2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s4f"], "s4"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1f"], "s1"]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3f"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s3f"], "s3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r1f"], "r1"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4f"], "r4"]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3f"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s3f"], "s3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r2f"], "r2"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3r"], "r3"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4f"], "r4"]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4f"], "r4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s4f"], "s4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r1f"], "r1"]}], "\[Equal]", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "s1r"], "s1"], 
            FractionBox[
             SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}]}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r4f"], "r4"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s4f"], "s4"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r2f"], "r2"]}], "\[Equal]", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r4r"], "r4"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "s2r"], "s2"], 
          FractionBox[
           SubscriptBox["\[CapitalIota]", "r3f"], "r3"]}]}]}], "*)"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], ",", 
       SubscriptBox["\[CapitalIota]", "3"], ",", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "Sout"], ","}], "*)"}], 
       SubscriptBox["\[CapitalIota]", "s1f"], ",", 
       SubscriptBox["\[CapitalIota]", "s1r"], ",", 
       SubscriptBox["\[CapitalIota]", "r1f"], ",", 
       SubscriptBox["\[CapitalIota]", "r1r"], ",", 
       SubscriptBox["\[CapitalIota]", "s2f"], ",", 
       SubscriptBox["\[CapitalIota]", "s2r"], ",", 
       SubscriptBox["\[CapitalIota]", "r2f"], ",", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "r2r"], ","}], "*)"}], 
       SubscriptBox["\[CapitalIota]", "s3f"], ",", 
       RowBox[{"(*", 
        RowBox[{
         SubscriptBox["\[CapitalIota]", "s3r"], ","}], "*)"}], 
       SubscriptBox["\[CapitalIota]", "r3f"], ",", 
       SubscriptBox["\[CapitalIota]", "r3r"], ",", 
       SubscriptBox["\[CapitalIota]", "s4f"], ",", 
       SubscriptBox["\[CapitalIota]", "s4r"], ",", 
       SubscriptBox["\[CapitalIota]", "r4f"], ",", 
       SubscriptBox["\[CapitalIota]", "r4r"]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalIota]", "1"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[CapitalIota]", "2"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[CapitalIota]", "3"], ">", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[CapitalIota]", "4"], ">", "0"}], "&&", 
    RowBox[{"s1", ">", "0"}], "&&", 
    RowBox[{"r1", ">", "0"}], "&&", 
    RowBox[{"s2", ">", "0"}], "&&", 
    RowBox[{"r2", ">", "0"}], "&&", 
    RowBox[{"s3", ">", "0"}], "&&", 
    RowBox[{"r3", ">", "0"}], "&&", 
    RowBox[{"s4", ">", "0"}], "&&", 
    RowBox[{"r4", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639426488418789*^9, 3.6394266387084923`*^9}, {
   3.639426682817646*^9, 3.6394267098625298`*^9}, {3.639772073446652*^9, 
   3.639772291767873*^9}, {3.639772376216537*^9, 3.639772451084332*^9}, {
   3.63977250065821*^9, 3.63977257908471*^9}, 3.639772637674539*^9, {
   3.639774954994607*^9, 3.639774991549601*^9}, {3.639775028076481*^9, 
   3.63977506617297*^9}, {3.639775183092004*^9, 3.639775324752696*^9}, {
   3.6397753874079733`*^9, 3.639775431180766*^9}, {3.639775495080974*^9, 
   3.639775504232403*^9}, {3.639775596138879*^9, 3.639775610194628*^9}, {
   3.639775670272046*^9, 3.6397756717553062`*^9}, {3.6397758693713284`*^9, 
   3.639775923998314*^9}, {3.639776055488751*^9, 3.639776125106876*^9}, {
   3.639776181321224*^9, 3.6397761988546057`*^9}, 3.63977628396843*^9, {
   3.639776338043828*^9, 3.639776346553884*^9}, {3.639776413224904*^9, 
   3.639776606890449*^9}, {3.639776867888907*^9, 3.639776881382327*^9}, 
   3.6397771849453707`*^9, {3.63983513752864*^9, 3.63983516358323*^9}, {
   3.639835196020007*^9, 3.639835218080612*^9}, {3.639835261263942*^9, 
   3.63983527533869*^9}, {3.6398353175892982`*^9, 3.639835325211155*^9}, {
   3.639835598944294*^9, 3.6398356113436527`*^9}, 3.6398358504850082`*^9, {
   3.6398379712943697`*^9, 3.6398380668033867`*^9}, {3.639838153491262*^9, 
   3.6398381676977386`*^9}, {3.6398382087874393`*^9, 
   3.6398382241472197`*^9}, {3.63983859872716*^9, 3.639838640310915*^9}, {
   3.639838682085814*^9, 3.639838720826481*^9}, {3.639838757151884*^9, 
   3.639838790873601*^9}, {3.639838831231525*^9, 3.639838834078623*^9}, {
   3.639838877008452*^9, 3.6398389373717327`*^9}, {3.639838969244483*^9, 
   3.639838985989561*^9}, {3.6398390217902203`*^9, 3.639839106141974*^9}, {
   3.6398391890105886`*^9, 3.639839192141902*^9}, 3.639839244952503*^9, {
   3.639937821044888*^9, 3.639937824067078*^9}, 3.639937892507144*^9, 
   3.6399397319557877`*^9, {3.639939852156608*^9, 3.639939866756249*^9}, {
   3.639940002655305*^9, 3.639940006513715*^9}, {3.6399400878709507`*^9, 
   3.6399401178578444`*^9}, {3.639940164879732*^9, 3.639940199561583*^9}, {
   3.639940235957881*^9, 3.6399402644495277`*^9}, {3.6399408321564293`*^9, 
   3.639940851965024*^9}, {3.6399408845026703`*^9, 3.639940926802004*^9}, {
   3.6399411073277473`*^9, 3.639941114818864*^9}, {3.639941160162202*^9, 
   3.639941252506258*^9}, {3.639942690243836*^9, 3.639942703401511*^9}, {
   3.639942745405672*^9, 3.639942749424754*^9}, {3.639942823338461*^9, 
   3.6399428331437693`*^9}, {3.6399428639614573`*^9, 
   3.6399428681856747`*^9}, {3.639942985449345*^9, 3.6399429929621277`*^9}, {
   3.6399430960945187`*^9, 3.639943098535881*^9}, {3.639943232892086*^9, 
   3.63994330385994*^9}, {3.6399447779510517`*^9, 3.639944818907391*^9}, 
   3.6399448743434*^9, 3.6399449046548023`*^9, {3.63994501177927*^9, 
   3.639945040220509*^9}, {3.639945402384354*^9, 3.639945402510268*^9}, {
   3.639945543109665*^9, 3.639945546682138*^9}, {3.6399458100958157`*^9, 
   3.639945897525468*^9}, 3.639946031664633*^9, {3.6399460733574667`*^9, 
   3.639946105329741*^9}, {3.639946152313794*^9, 3.639946156037758*^9}, {
   3.6399462295160418`*^9, 3.639946279755734*^9}, {3.639946330045837*^9, 
   3.639946409580673*^9}, {3.639946473536038*^9, 3.639946489063642*^9}, {
   3.63994652315723*^9, 3.639946575759561*^9}, {3.639946610863703*^9, 
   3.639946632341021*^9}, {3.639946667248557*^9, 3.639946846297871*^9}, {
   3.639946951190536*^9, 3.639947028831259*^9}, {3.639947085851614*^9, 
   3.639947090101461*^9}, {3.639947611898531*^9, 3.639947617271203*^9}, {
   3.639947820499928*^9, 3.6399478229891872`*^9}, {3.6399491630348043`*^9, 
   3.639949177430068*^9}, {3.639949255488624*^9, 3.639949268406073*^9}, {
   3.639949299600545*^9, 3.639949327031706*^9}, {3.6399493606672792`*^9, 
   3.63994948714388*^9}, {3.639949522362916*^9, 3.639949524501214*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"Solve", "::", "svars"}], "MessageName"], ":", 
   " ", "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}], 
  TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.639947826257896*^9, 3.6399491787839117`*^9, 
  3.63994927128537*^9, 3.639949343079357*^9, 3.6399494911175947`*^9, 
  3.6399495257511873`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "+", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "s3f"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r1", " ", "s2", " ", 
         SubscriptBox["\[CapitalIota]", "s1r"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
        RowBox[{"r2", " ", 
         SuperscriptBox["s1", "2"], " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r1", " ", 
          SuperscriptBox["s2", "2"], " ", 
          SubscriptBox["\[CapitalIota]", "s1r"], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "+", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
         RowBox[{"s1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r2", " ", "s1", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}], "+", 
            RowBox[{"r1", " ", "s2", " ", 
             SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]}], 
        RowBox[{"r2", " ", 
         SuperscriptBox["s1", "2"], " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "+", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}], " ", 
            SuperscriptBox["s2", "2"]}], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r2", " ", "s3"}], "-", 
              RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", "s2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r4", " ", "s4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}], " ", 
             SuperscriptBox["s2", "2"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
         RowBox[{"r2", " ", "r3", " ", "s1", " ", "s3", " ", "s4", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", "s3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r3", " ", "s3", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r4", " ", "s2"}], "-", 
               RowBox[{"r2", " ", "s4"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}], "-", 
            RowBox[{"r4", " ", 
             SuperscriptBox["s2", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"r4", " ", "s4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}], " ", 
             SuperscriptBox["s2", "2"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", "s3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}], " ", 
            SuperscriptBox["s2", "2"]}], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r2", " ", "s3"}], "-", 
              RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "r3", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"r4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}], " ", 
             SuperscriptBox["s2", "2"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], 
         RowBox[{"r2", " ", "r3", " ", "s1", " ", "s3", " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "s3f"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", 
            SubscriptBox["\[CapitalIota]", "1"], " ", 
            SuperscriptBox["s2", "2"]}], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r2", " ", "s3"}], "-", 
              RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", "s2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r3", " ", 
               SubscriptBox["\[CapitalIota]", "1"], " ", 
               SuperscriptBox["s2", "2"]}], "+", 
              RowBox[{"s1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r2", " ", "s3"}], "-", 
                 RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
               SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
           RowBox[{"r2", " ", "r3", " ", "s1", " ", "s3", " ", 
            SubscriptBox["\[CapitalIota]", "4"], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", "s3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r3", " ", "r4", " ", 
          SubscriptBox["\[CapitalIota]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s4", " ", 
             SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
            RowBox[{"s3", " ", 
             SubscriptBox["\[CapitalIota]", "4"]}]}], ")"}], " ", 
          SuperscriptBox["s2", "2"]}], "+", 
         RowBox[{"s1", " ", 
          SubscriptBox["\[CapitalIota]", "s2r"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", "s3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r4", " ", "s2"}], "-", 
               RowBox[{"r2", " ", "s4"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "4"]}], "+", 
            RowBox[{"r4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", "s4", " ", 
             SubscriptBox["\[CapitalIota]", "s3f"]}]}], ")"}]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s2", " ", "s3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", 
            SubscriptBox["\[CapitalIota]", "1"], " ", 
            SuperscriptBox["s2", "2"]}], "+", 
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r2", " ", "s3"}], "-", 
              RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], 
        RowBox[{"r2", " ", "r3", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"r4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", 
             SubscriptBox["\[CapitalIota]", "1"], " ", 
             SuperscriptBox["s2", "2"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s3"}], "-", 
               RowBox[{"r3", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], 
         RowBox[{"r2", " ", "r3", " ", "s1", " ", "s3", " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "r1f"], "-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "r3r"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r4", " ", 
         SubscriptBox["\[CapitalIota]", "r3r"]}], "r3"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"r4", " ", 
          SubscriptBox["\[CapitalIota]", "r3r"]}], "r3"], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "s3f"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "r1f"], "-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"r3", " ", "s1", " ", 
            SubscriptBox["\[CapitalIota]", "r1f"]}], 
           RowBox[{"r1", " ", "s3", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}]]}], ")"}], " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r3", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "r1f"], " ", 
          SubscriptBox["\[CapitalIota]", "s3f"]}], 
         RowBox[{"r1", " ", "s3", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r3", " ", "r4", " ", "s1", " ", 
            SubscriptBox["\[CapitalIota]", "r1f"], " ", 
            SubscriptBox["\[CapitalIota]", "s3f"]}], "+", 
           RowBox[{"r1", " ", "s3", " ", 
            SubscriptBox["\[CapitalIota]", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r3", " ", 
               SubscriptBox["\[CapitalIota]", "4"]}], "-", 
              RowBox[{"r4", " ", 
               SubscriptBox["\[CapitalIota]", "s3f"]}]}], ")"}]}]}], ")"}]}], 
        
        RowBox[{"r3", " ", "r4", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "r1f"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r1", " ", "s3", " ", "s4", " ", 
          SubscriptBox["\[CapitalIota]", "1"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r3", " ", 
             SubscriptBox["\[CapitalIota]", "4"]}], "-", 
            RowBox[{"r4", " ", 
             SubscriptBox["\[CapitalIota]", "s3f"]}]}], ")"}]}], "+", 
         RowBox[{"r3", " ", "r4", " ", "s1", " ", 
          SubscriptBox["\[CapitalIota]", "r1f"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s4", " ", 
             SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
            RowBox[{"s3", " ", 
             SubscriptBox["\[CapitalIota]", "4"]}]}], ")"}]}]}], 
        RowBox[{"r3", " ", "r4", " ", "s1", " ", "s3", " ", 
         SubscriptBox["\[CapitalIota]", "r1f"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       RowBox[{"r4", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "r3"], "-", 
          FractionBox[
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "r1f"]}], 
           RowBox[{"r1", " ", "s3", " ", 
            SubscriptBox["\[CapitalIota]", "1"]}]]}], ")"}], " ", 
        SubscriptBox["\[CapitalIota]", "s3f"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{
        RowBox[{"r4", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "r3"], "-", 
           FractionBox[
            RowBox[{"s1", " ", 
             SubscriptBox["\[CapitalIota]", "r1f"]}], 
            RowBox[{"r1", " ", "s3", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}]]}], ")"}], " ", 
         SubscriptBox["\[CapitalIota]", "s3f"]}], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s4f"], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", "0"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "+", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "1"], "+", 
        SubscriptBox["\[CapitalIota]", "s1r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r1", " ", "s2", " ", 
         SubscriptBox["\[CapitalIota]", "s1r"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
        RowBox[{"r2", " ", 
         SuperscriptBox["s1", "2"], " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"r1", " ", 
          SuperscriptBox["s2", "2"], " ", 
          SubscriptBox["\[CapitalIota]", "s1r"], " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "+", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
         RowBox[{"s1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r2", " ", "s1", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}], "+", 
            RowBox[{"r1", " ", "s2", " ", 
             SubscriptBox["\[CapitalIota]", "s1r"]}]}], ")"}], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}]}], 
        RowBox[{"r2", " ", 
         SuperscriptBox["s1", "2"], " ", 
         SubscriptBox["\[CapitalIota]", "s2r"]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[CapitalIota]", "1"], "+", 
           SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[CapitalIota]", "1"], "+", 
            SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r2", " ", "s1", " ", "s4", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], 
         RowBox[{"r4", " ", "s2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[CapitalIota]", "1"], "+", 
               SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
            RowBox[{"s1", " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[CapitalIota]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r4", " ", "s2"}], "-", 
              RowBox[{"r2", " ", "s4"}]}], ")"}], " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}], "-", 
           RowBox[{"r4", " ", 
            SuperscriptBox["s2", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}]}], ")"}]}], 
        RowBox[{"r4", " ", "s2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[CapitalIota]", "1"], "+", 
              SubscriptBox["\[CapitalIota]", "s1r"]}], ")"}]}], "-", 
           RowBox[{"s1", " ", 
            SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s4f"], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", "0"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", 
       FractionBox[
        RowBox[{"s2", " ", 
         SubscriptBox["\[CapitalIota]", "1"]}], "s1"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"s2", " ", 
          SubscriptBox["\[CapitalIota]", "1"]}], "s1"], "-", 
        SubscriptBox["\[CapitalIota]", "s2r"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4f"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r2", " ", "s1", " ", "s4", " ", 
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          SubscriptBox["\[CapitalIota]", "s2r"]}], 
         RowBox[{
          RowBox[{"r4", " ", 
           SuperscriptBox["s2", "2"], " ", 
           SubscriptBox["\[CapitalIota]", "1"]}], "-", 
          RowBox[{"r4", " ", "s1", " ", "s2", " ", 
           SubscriptBox["\[CapitalIota]", "s2r"]}]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[CapitalIota]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r4", " ", 
             SubscriptBox["\[CapitalIota]", "1"], " ", 
             SuperscriptBox["s2", "2"]}], "+", 
            RowBox[{"s1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", "s4"}], "-", 
               RowBox[{"r4", " ", "s2"}]}], ")"}], " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}], 
         RowBox[{"r4", " ", "s2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s2", " ", 
             SubscriptBox["\[CapitalIota]", "1"]}], "-", 
            RowBox[{"s1", " ", 
             SubscriptBox["\[CapitalIota]", "s2r"]}]}], ")"}]}]]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalIota]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r1r"], "\[Rule]", 
       RowBox[{"-", 
        SubscriptBox["\[CapitalIota]", "1"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s2r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r2f"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3f"], "\[Rule]", 
       FractionBox[
        RowBox[{"r3", " ", 
         SubscriptBox["\[CapitalIota]", "4"]}], "r4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r3r"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "s4r"], "\[Rule]", 
       RowBox[{
        SubscriptBox["\[CapitalIota]", "s4f"], "-", 
        SubscriptBox["\[CapitalIota]", "4"]}]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4f"], "\[Rule]", 
       SubscriptBox["\[CapitalIota]", "4"]}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalIota]", "r4r"], "\[Rule]", "0"}]}], "}"}]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.639775326805159*^9, 3.639775433191249*^9, {3.639775674292942*^9, 
   3.639775678455982*^9}, 3.639775925361144*^9, {3.639776076025785*^9, 
   3.63977608601361*^9}, 3.639776126544115*^9, 3.639776202367586*^9, {
   3.639776330521064*^9, 3.639776348720318*^9}, 3.639776444623315*^9, 
   3.639776480537991*^9, {3.639776517760531*^9, 3.6397765689342117`*^9}, 
   3.639776608705592*^9, 3.639776920698987*^9, 3.639777187186421*^9, 
   3.639835169444231*^9, {3.63983525695682*^9, 3.639835279338757*^9}, 
   3.639835341023604*^9, 3.639835615982514*^9, 3.639835853633829*^9, 
   3.6398382269027023`*^9, {3.6398391756893873`*^9, 3.6398391952783327`*^9}, 
   3.639839248089986*^9, 3.639937826360244*^9, 3.639937896055586*^9, 
   3.639939734862235*^9, 3.639939881719056*^9, 3.6399400895010767`*^9, 
   3.6399401209516897`*^9, 3.639940152072028*^9, {3.639940257163068*^9, 
   3.63994027039958*^9}, 3.6399427536508207`*^9, 3.63994281313615*^9, 
   3.639942870608007*^9, 3.639942996424508*^9, 3.639943249919269*^9, 
   3.639943307945654*^9, 3.639944883186841*^9, 3.639944929747767*^9, {
   3.6399455493960333`*^9, 3.639945558412858*^9}, 3.6399461109979973`*^9, 
   3.639946158309659*^9, 3.639946437308902*^9, 3.639946628545527*^9, {
   3.639947030773038*^9, 3.639947038531248*^9}, 3.639947619522726*^9, 
   3.639947829038866*^9, 3.639949180323193*^9, 3.639949271572098*^9, 
   3.6399493433665257`*^9, 3.639949492218275*^9, 3.6399495270908537`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mismatch in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.639167456092875*^9, 3.639167459645553*^9}}],

Cell[TextData[{
 "To analyze the mismatch in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]],
 ", we start at the equation that most generally defines ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Rout"], TraditionalForm]]],
 ".  From there, we use our ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "Sout"], TraditionalForm]]],
 " analysis to apply the mismatch that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "4"], TraditionalForm]]],
 " would introduce to the circuit."
}], "Text",
 CellChangeTimes->{{3.639171697361162*^9, 3.6391717712450657`*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rout"], "=", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["I", "Sin"], "_"], "-", 
    SubscriptBox["I", "1"], "+", 
    SubscriptBox["I", "Rin"], "-", 
    SubscriptBox["I", "4"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rout"], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["s", "B2"], 
      SubscriptBox["s", "B1"]], 
     SubscriptBox["I", "Sin"]}], "-", 
    SubscriptBox["I", "1"], "+", 
    SubscriptBox["I", "Rin"], "-", 
    SubscriptBox["I", "4"]}]}], TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.639171459767262*^9, 3.639171494669066*^9}, {
  3.639171603403657*^9, 3.639171681013866*^9}, {3.639839514876184*^9, 
  3.639839518510911*^9}, {3.639839566066283*^9, 3.639839568392912*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["I", "Rout"], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      SubscriptBox["s", "B2"], 
      SubscriptBox["s", "B1"]], 
     SubscriptBox["I", "Sin"]}], "-", 
    RowBox[{"Min", "(", 
     RowBox[{
      RowBox[{
       FractionBox[
        SubscriptBox["r", "R1"], 
        SubscriptBox["r", "R4"]], 
       SubscriptBox["I", "Rin"]}], ",", 
      RowBox[{
       FractionBox[
        SubscriptBox["s", "B2"], 
        SubscriptBox["s", "B1"]], 
       SubscriptBox["I", "Sin"]}]}], ")"}], "+", 
    SubscriptBox["I", "Rin"], "-", 
    RowBox[{"Min", "(", 
     RowBox[{
      SubscriptBox["I", "Rin"], ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["s", "S4"], 
         SubscriptBox["s", "B2"]}], 
        RowBox[{
         SubscriptBox["s", "S1"], 
         SubscriptBox["s", "B1"]}]], 
       SubscriptBox["I", "Sin"]}]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.639171459767262*^9, 3.639171494669066*^9}, {
  3.639171603403657*^9, 3.63917165818664*^9}, {3.6392457600392923`*^9, 
  3.639245760283862*^9}, {3.639839542506131*^9, 3.6398395612559633`*^9}},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Function definitions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "Sout"], " ", "and", " ", 
    SubscriptBox["I", "Rout"]}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.639840248406353*^9, 3.639840262359386*^9}, {
  3.639840311694886*^9, 3.639840312871894*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ISout", "[", 
   RowBox[{
   "ISin_", ",", "IRin_", ",", "sB1_", ",", " ", "sB2_", ",", "sS1_", ",", 
    " ", "rR2_", ",", "sS2_", ",", "rR3_", ",", "sS3_", ",", "rR4_"}], "]"}], 
  ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{
        FractionBox["rR2", "rR4"], " ", "IRin"}], ",", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"sS2", " ", "sB2", " "}], 
         RowBox[{"sS1", " ", "sB1"}]], "ISin"}]}], "]"}], "+", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rR3", " "}], "rR4"], "IRin"}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"sS3", " ", "sB2", " "}], 
         RowBox[{"sS1", " ", "sB1"}]], "ISin"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"IRin", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{"ISin", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{"sB1", ">", "0"}], ",", 
      RowBox[{"sB2", ">", "0"}], ",", 
      RowBox[{"sS1", ">", "0"}], ",", 
      RowBox[{"rR2", ">", "0"}], ",", 
      RowBox[{"sS2", ">", "0"}], ",", 
      RowBox[{"rR3", ">", "0"}], ",", 
      RowBox[{"sS3", ">", "0"}], ",", 
      RowBox[{"rR4", ">", "0"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IRout", "[", 
   RowBox[{
   "ISin_", ",", "IRin_", ",", "sB1_", ",", "sB2_", " ", ",", "rR1_", ",", 
    "sS1_", ",", "rR4_", ",", "sS4_"}], "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"sB2", " "}], "sB1"], "ISin"}], "-", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"rR1", " "}], "rR4"], "IRin"}], ",", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"sB2", " "}], "sB1"], "ISin"}]}], "]"}], "+", "IRin", "-", 
     RowBox[{"Min", "[", 
      RowBox[{"IRin", ",", 
       RowBox[{
        FractionBox[
         RowBox[{"sS4", " ", "sB2"}], 
         RowBox[{"sS1", " ", "sB2"}]], " ", "ISin"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"IRin", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{"ISin", "\[GreaterEqual]", "0"}], ",", 
      RowBox[{"sB1", ">", "0"}], ",", 
      RowBox[{"sB2", ">", "0"}], ",", 
      RowBox[{"rR1", ">", "0"}], ",", 
      RowBox[{"sS1", ">", "0"}], ",", 
      RowBox[{"rR4", ">", "0"}], ",", 
      RowBox[{"sS4", ">", "0"}]}], "}"}]}], "]"}]}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.639247465088295*^9, 3.63924773458062*^9}, {
  3.639262296706283*^9, 3.639262304852201*^9}, {3.639404704724305*^9, 
  3.6394047055918293`*^9}, {3.639407679049189*^9, 3.6394077978138313`*^9}, {
  3.639839419634718*^9, 3.6398394980597973`*^9}, {3.639839576015848*^9, 
  3.639839580158782*^9}, {3.639839610425408*^9, 3.639839613514855*^9}, {
  3.63983980082082*^9, 3.639839911756402*^9}, {3.639840193017066*^9, 
  3.6398401939663763`*^9}, {3.639840229526164*^9, 3.639840233652813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<\!\(\*SubscriptBox[\(I\), \(Sout\)]\)\>\"", "\[Equal]", 
  RowBox[{"ISout", "[", 
   RowBox[{
   "\"\<\!\(\*SubscriptBox[\(I\), \(Sin\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(I\), \(Rin\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(B1\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(B2\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(S1\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(r\), \(R2\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(S2\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(r\), \(R3\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(S3\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(r\), \(R4\)]\)\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\"\<\!\(\*SubscriptBox[\(I\), \(Rout\)]\)\>\"", "\[Equal]", 
  RowBox[{"IRout", "[", 
   RowBox[{
   "\"\<\!\(\*SubscriptBox[\(I\), \(Sin\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(I\), \(Rin\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(B1\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(B2\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(r\), \(R1\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(s1\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(r\), \(R4\)]\)\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(s\), \(S4\)]\)\>\""}], "]"}]}]}], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.639251525346971*^9, 3.6392516155312862`*^9}, {
  3.6398401069648933`*^9, 3.639840178834712*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sout\\)]\\)\"\>", 
   "\[LongEqual]", 
   RowBox[{
    RowBox[{"min", "(", 
     RowBox[{
      FractionBox[
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rin\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(R2\\)]\\)\"\>"}], \
"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(R4\\)]\\)\"\>"], ",", 
      FractionBox[
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sin\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B2\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(S2\\)]\\)\"\>"}], 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B1\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(S1\\)]\\)\"\>"}]]}], 
     ")"}], "+", 
    RowBox[{"min", "(", 
     RowBox[{
      FractionBox[
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rin\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(R3\\)]\\)\"\>"}], \
"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(R4\\)]\\)\"\>"], ",", 
      FractionBox[
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sin\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B2\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(S3\\)]\\)\"\>"}], 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B1\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(S1\\)]\\)\"\>"}]]}], 
     ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.639251587050761*^9, 3.639251616096279*^9}, 
   3.6394047244709377`*^9, {3.639407793306077*^9, 3.639407802085217*^9}, {
   3.63984016704653*^9, 3.6398402007617292`*^9}, 3.639840237033432*^9, 
   3.639849181120288*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rout\\)]\\)\"\>", 
   "\[LongEqual]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"min", "(", 
      RowBox[{
       FractionBox[
        RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rin\\)]\\)\"\>", 
         " ", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(R1\\)]\\)\"\>"}], \
"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(R4\\)]\\)\"\>"], ",", 
       FractionBox[
        RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sin\\)]\\)\"\>", 
         " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B2\\)]\\)\"\>"}], \
"\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B1\\)]\\)\"\>"]}], ")"}]}], "-", 
    RowBox[{"min", "(", 
     RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rin\\)]\\)\"\>", ",", 
      FractionBox[
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sin\\)]\\)\"\>", 
        " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(S4\\)]\\)\"\>"}], \
"\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(s1\\)]\\)\"\>"]}], ")"}], 
    "+", "\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rin\\)]\\)\"\>", "+", 
    FractionBox[
     RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sin\\)]\\)\"\>", 
      " ", "\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B2\\)]\\)\"\>"}], \
"\<\"\\!\\(\\*SubscriptBox[\\(s\\), \\(B1\\)]\\)\"\>"]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.639251587050761*^9, 3.639251616096279*^9}, 
   3.6394047244709377`*^9, {3.639407793306077*^9, 3.639407802085217*^9}, {
   3.63984016704653*^9, 3.6398402007617292`*^9}, 3.639840237033432*^9, 
   3.6398491815057898`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function definitions for distributions", "Subsection",
 CellChangeTimes->{{3.6398403052591753`*^9, 3.639840317003191*^9}}],

Cell[TextData[{
 "From Ben\[CloseCurlyQuote]s device analysis, we know that the mismatch \
parameter comes from a log-normal distribution.  The log-normal distribution \
comes from a normal distribution.  In other words, if ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 " comes from a normal distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"X", "\[Tilde]", 
     RowBox[{"\[ScriptCapitalN]", "(", 
      RowBox[{
       SubscriptBox["\[Mu]", "n"], ",", 
       SuperscriptBox[
        SubscriptBox["\[Sigma]", "n"], "2"]}], ")"}]}], ")"}], 
   TraditionalForm]]],
 ", then ",
 Cell[BoxData[
  FormBox["Y", TraditionalForm]]],
 " is defined as a log-normal distribution according to the following \
equation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "=", 
    SuperscriptBox["\[ExponentialE]", "X"]}], TraditionalForm]]],
 ".  The log-normal statistics ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Sigma]", "l"]}], TraditionalForm]]],
 " & ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "l"], TraditionalForm]]],
 ") are related to normal\[CloseCurlyQuote]s  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Sigma]", "n"]}], TraditionalForm]]],
 " & ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "n"], TraditionalForm]]],
 ") according to the following two equations:"
}], "Text",
 CellChangeTimes->{{3.639277327035478*^9, 3.639277431116534*^9}, {
   3.6392779879706984`*^9, 3.639278014169705*^9}, {3.63928226986278*^9, 
   3.6392823159296913`*^9}, 3.6398468640987463`*^9, {3.639846924299205*^9, 
   3.6398469388067617`*^9}, {3.6398470594431477`*^9, 3.639847139941945*^9}, {
   3.639847423414013*^9, 3.6398474737914267`*^9}, {3.639847572630828*^9, 
   3.639847741943297*^9}, {3.639847838142336*^9, 3.639847875493497*^9}, {
   3.639847971691917*^9, 3.639847994750896*^9}, {3.6398490031575747`*^9, 
   3.63984901978442*^9}, 3.639849521095355*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]LogNormal", "[", 
    RowBox[{"\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"LogNormalDistribution", "[", 
     RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]LogNormal", "[", 
    RowBox[{"\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{"Log", "[", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}], "]"}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  SubscriptBox["\[Mu]", "l"], "\[Rule]", " ", 
  RowBox[{"\[Mu]LogNormal", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "n"], ",", 
    SubscriptBox["\[Sigma]", "n"]}], "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]", "l"], "\[Rule]", " ", 
  RowBox[{"\[Sigma]LogNormal", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "n"], ",", 
    SubscriptBox["\[Sigma]", "n"]}], "]"}]}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.638669041491548*^9, 3.6386691586559143`*^9}, {
  3.638669188957786*^9, 3.6386692389466267`*^9}, {3.6388408283599377`*^9, 
  3.638840840531711*^9}, {3.638840937083275*^9, 3.638840977039003*^9}, {
  3.638843075209982*^9, 3.6388430889838676`*^9}, {3.639277445605468*^9, 
  3.6392774484484987`*^9}, {3.639277484180571*^9, 3.6392774964136257`*^9}, {
  3.6392775431924753`*^9, 3.639277646476193*^9}, {3.6392779038306007`*^9, 
  3.639277965014453*^9}, {3.6392782614565573`*^9, 3.639278401085579*^9}, {
  3.639278456943461*^9, 3.639278480330368*^9}, {3.6398490757124777`*^9, 
  3.639849108029077*^9}, {3.639849257565898*^9, 3.639849295736497*^9}, {
  3.639849554970765*^9, 3.639849566632103*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Mu]", "l"], "\[Rule]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SubscriptBox["\[Mu]", "n"], "+", 
     FractionBox[
      SubsuperscriptBox["\[Sigma]", "n", "2"], "2"]}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.63984929690594*^9, {3.639849564033856*^9, 3.639849568196363*^9}, 
   3.639861404486896*^9, 3.639942714004016*^9, 3.6447055162631407`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Sigma]", "l"], "\[Rule]", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       SubsuperscriptBox["\[Sigma]", "n", "2"]], "-", "1"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      SubscriptBox["\[Mu]", "n"], "+", 
      FractionBox[
       SubsuperscriptBox["\[Sigma]", "n", "2"], "2"]}]]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.63984929690594*^9, {3.639849564033856*^9, 3.639849568196363*^9}, 
   3.639861404486896*^9, 3.639942714004016*^9, 3.6447055166173077`*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume we only have access to a log-normal distribution ",
 Cell[BoxData[
  FormBox["Y", TraditionalForm]]],
 ", defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "~", 
    RowBox[{"ln\[ScriptCapitalN]", "(", 
     RowBox[{
      SubscriptBox["\[Mu]", "n"], ",", 
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "n"], "2"]}], ")"}]}], TraditionalForm]]],
 ", but we don\[CloseCurlyQuote]t know the underlying normal distribution\
\[CloseCurlyQuote]s statistics ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Mu]", "n"], ",", " ", 
     SubscriptBox["\[Sigma]", "n"]}], ")"}], TraditionalForm]]],
 ".  We can get the mean and standard deviation of the distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Mu]", "l"], ",", " ", 
     SubscriptBox["\[Sigma]", "l"]}], ")"}], TraditionalForm]]],
 " and then calculate/approximate the underlying normal\[CloseCurlyQuote]s \
mean and standard deviation based on the following two equations:"
}], "Text",
 CellChangeTimes->{{3.639850312976664*^9, 3.6398504511507053`*^9}, {
  3.6398504924547358`*^9, 3.639850496014679*^9}, {3.639850555169937*^9, 
  3.639850608213583*^9}, {3.6398507384547567`*^9, 3.639850749610553*^9}, {
  3.6398515498596888`*^9, 3.639851635531848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Normal", "[", 
    RowBox[{"\[Mu]l_", ",", "\[Sigma]l_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Sigma]l", "2"], "\[Equal]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]LogNormal", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "/.", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Mu]n", "+", 
               FractionBox[
                SuperscriptBox["\[Sigma]n", "2"], "2"]}]], " ", "\[Rule]", 
             " ", "\[Mu]l"}]}], ")"}], "2"]}], ",", "\[Sigma]n"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}], "&&", 
       RowBox[{"\[Mu]l", ">", "0"}], "&&", 
       RowBox[{"\[Sigma]l", ">", "0"}], "&&", 
       RowBox[{"\[Sigma]n", ">", "0"}]}]}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]Normal", "[", 
    RowBox[{"\[Mu]l_", ",", "\[Sigma]l_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]l", "\[Equal]", 
          RowBox[{"\[Mu]LogNormal", "[", 
           RowBox[{"\[Mu]n", ",", 
            RowBox[{"\[Sigma]Normal", "[", 
             RowBox[{"\[Mu]l", ",", "\[Sigma]l"}], "]"}]}], "]"}]}], "&&", 
         RowBox[{"\[Mu]l", ">", "0"}]}], ",", "\[Mu]n"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}], "&&", 
       RowBox[{"\[Mu]l", ">", "0"}], "&&", 
       RowBox[{"\[Sigma]l", ">", "0"}]}]}], "]"}], "\[LeftDoubleBracket]", 
    "2", "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Mu]", "n"], "\[Rule]", " ", 
  RowBox[{"\[Mu]Normal", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "l"], ",", 
    SubscriptBox["\[Sigma]", "l"]}], "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]", "n"], "\[Rule]", " ", 
  RowBox[{"\[Sigma]Normal", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "l"], ",", 
    SubscriptBox["\[Sigma]", "l"]}], "]"}]}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.639277665999312*^9, 3.639277861303575*^9}, {
  3.639278080924713*^9, 3.639278107306633*^9}, {3.639278139309194*^9, 
  3.639278169753366*^9}, {3.6392785082707453`*^9, 3.6392785905480423`*^9}, {
  3.639278641008483*^9, 3.639278673774889*^9}, {3.63927871156111*^9, 
  3.63927886331848*^9}, {3.6392789062048073`*^9, 3.639278924947418*^9}, {
  3.639279253350355*^9, 3.639279285221961*^9}, {3.6392793509118843`*^9, 
  3.639279355829028*^9}, {3.6398493159670553`*^9, 3.639849422381221*^9}, {
  3.639849594486272*^9, 3.639849648656499*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Mu]", "n"], "\[Rule]", 
   RowBox[{"log", "(", 
    RowBox[{"Root", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["#1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Mu]", "l", "2"], "+", 
           SubsuperscriptBox["\[Sigma]", "l", "2"]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["#1", "2"], " ", 
         SubsuperscriptBox["\[Mu]", "l", "4"]}]}], "&"}], ",", "4"}], "]"}], 
    ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.639849424932794*^9, 3.639849601218726*^9, 
  3.639861405862536*^9, 3.639942715553844*^9, 3.644705517715453*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Sigma]", "n"], "\[Rule]", 
   SqrtBox[
    RowBox[{"log", "(", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Mu]", "l", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "l", "2"]}], 
      SubsuperscriptBox["\[Mu]", "l", "2"]], ")"}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.639849424932794*^9, 3.639849601218726*^9, 
  3.639861405862536*^9, 3.639942715553844*^9, 3.644705518010353*^9}]
}, Open  ]],

Cell[TextData[{
 "When ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "n", "2"], "\[LessLess]", "1"}], 
   TraditionalForm]]],
 ", these simplify to"
}], "Text",
 CellChangeTimes->{{3.6392794064935703`*^9, 3.639279421205902*^9}, {
  3.639280321134543*^9, 3.639280333670005*^9}, {3.639280451519827*^9, 
  3.639280454079338*^9}, {3.639280507532919*^9, 3.639280525578074*^9}, {
  3.639280837811816*^9, 3.639280851249703*^9}, {3.6392808818385067`*^9, 
  3.639280910795855*^9}, {3.639281701453292*^9, 3.639281706928315*^9}, {
  3.639851663952334*^9, 3.63985166705272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]LogNormalApprox", "[", "\[Mu]n_", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"\[Mu]LogNormal", "[", 
       RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]n", "+", 
        FractionBox[
         SuperscriptBox["\[Sigma]n", "2"], "2"]}], ")"}], "\[Rule]", " ", 
      "\[Mu]n"}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]LogNormalApprox", "[", 
    RowBox[{"\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"\[Sigma]LogNormal", "[", 
       RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]n", "+", 
        FractionBox[
         SuperscriptBox["\[Sigma]n", "2"], "2"]}], ")"}], "\[Rule]", " ", 
      "\[Mu]n"}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Mu]", "l"], "\[Rule]", " ", 
  RowBox[{"\[Mu]LogNormalApprox", "[", 
   SubscriptBox["\[Mu]", "n"], "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]", "l"], "\[Rule]", " ", 
  RowBox[{"\[Sigma]LogNormalApprox", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "n"], ",", 
    SubscriptBox["\[Sigma]", "n"]}], "]"}]}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.63927943291812*^9, 3.6392794516661158`*^9}, {
  3.639280336839242*^9, 3.639280352415469*^9}, {3.639280528020693*^9, 
  3.639280652556939*^9}, {3.639280857008593*^9, 3.639280868270129*^9}, {
  3.6392809465634727`*^9, 3.6392809952624598`*^9}, {3.6392811465143967`*^9, 
  3.639281150009194*^9}, {3.639281589438613*^9, 3.639281685572974*^9}, {
  3.639281719925475*^9, 3.639281808747953*^9}, {3.639281839082593*^9, 
  3.6392818557597837`*^9}, {3.639282087800102*^9, 3.639282093628846*^9}, {
  3.639851677587667*^9, 3.6398517645635033`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Mu]", "l"], "\[Rule]", 
   SuperscriptBox["\[ExponentialE]", 
    SubscriptBox["\[Mu]", "n"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.639851746365367*^9, 3.639851765148573*^9}, 
   3.6398614064846973`*^9, 3.639942716341502*^9, 3.644705518460726*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Sigma]", "l"], "\[Rule]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     SubscriptBox["\[Mu]", "n"]], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       SubsuperscriptBox["\[Sigma]", "n", "2"]], "-", "1"}]]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.639851746365367*^9, 3.639851765148573*^9}, 
   3.6398614064846973`*^9, 3.639942716341502*^9, 3.644705518742002*^9}]
}, Open  ]],

Cell[TextData[{
 "Similarly, for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "l", "2"], "\[LessLess]", "1"}], 
   TraditionalForm]]],
 ", the equation for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "n"], TraditionalForm]]],
 " simplifes as written below.  For ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "n"], TraditionalForm]]],
 ", we don\[CloseCurlyQuote]t simplify it based on this assumption, because \
if we did ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "n"], TraditionalForm]]],
 " would always equal 0, which is obviously incorrect."
}], "Text",
 CellChangeTimes->{{3.6392794064935703`*^9, 3.639279421205902*^9}, {
  3.639280321134543*^9, 3.639280333670005*^9}, {3.639280451519827*^9, 
  3.639280454079338*^9}, {3.639280507532919*^9, 3.639280525578074*^9}, {
  3.639280837811816*^9, 3.639280851249703*^9}, {3.6392808818385067`*^9, 
  3.639280910795855*^9}, {3.6392810287686567`*^9, 3.639281073329151*^9}, {
  3.6392819259505463`*^9, 3.639281926510743*^9}, {3.639851870231304*^9, 
  3.639851894229025*^9}, {3.639851968462714*^9, 3.639852017120428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]NormalApprox", "[", "\[Mu]l_", "]"}], "=", 
   RowBox[{"\[Mu]n", "/.", 
    RowBox[{
     RowBox[{"Refine", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"\[Mu]l", "\[Equal]", 
          RowBox[{"\[Mu]LogNormalApprox", "[", "\[Mu]n", "]"}]}], ",", 
         "\[Mu]n"}], "]"}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}]}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Mu]", "n"], "\[Rule]", " ", 
  RowBox[{"\[Mu]NormalApprox", "[", 
   SubscriptBox["\[Mu]", "l"], "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]", "n"], "\[Rule]", " ", 
  RowBox[{"\[Sigma]Normal", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "l"], ",", 
    SubscriptBox["\[Sigma]", "l"]}], "]"}]}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{
  3.639281046729466*^9, {3.639281111002026*^9, 3.639281117622232*^9}, {
   3.6392811573886003`*^9, 3.639281159588361*^9}, {3.639281251257927*^9, 
   3.6392812691226587`*^9}, {3.6392814061250963`*^9, 3.63928140658963*^9}, {
   3.639281484031258*^9, 3.6392815053995934`*^9}, {3.63928204303419*^9, 
   3.639282068824505*^9}, {3.639282120564455*^9, 3.639282131669071*^9}, {
   3.639282179435074*^9, 3.639282211631159*^9}, {3.639851791335947*^9, 
   3.6398518361659718`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Mu]", "n"], "\[Rule]", 
   RowBox[{"log", "(", 
    SubscriptBox["\[Mu]", "l"], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.6398518392035*^9, 3.6398614070790033`*^9, 
  3.639942717239916*^9, 3.644705519097022*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Sigma]", "n"], "\[Rule]", 
   SqrtBox[
    RowBox[{"log", "(", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Mu]", "l", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "l", "2"]}], 
      SubsuperscriptBox["\[Mu]", "l", "2"]], ")"}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6398518392035*^9, 3.6398614070790033`*^9, 
  3.639942717239916*^9, 3.644705519394126*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot of distribution of mismatch parameters", "Subsection",
 CellChangeTimes->{{3.639408967393381*^9, 3.6394089751042833`*^9}}],

Cell[TextData[{
 "The following plot shows the log-normal distribution from which the \
mismatch terms are taken (in blue) and the normal distribution, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalN]", "(", 
    RowBox[{
     SubscriptBox["\[Mu]", "l"], ",", 
     SubscriptBox["\[Sigma]", "l"]}], ")"}], TraditionalForm]]],
 ", that approximates this log-normal distribution (in orange)."
}], "Text",
 CellChangeTimes->{{3.6394089807760963`*^9, 3.639409008811468*^9}, {
  3.639853641122607*^9, 3.639853652045265*^9}, {3.639853943869193*^9, 
  3.639854084902903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]n", "=", "0"}], ",", " ", 
     RowBox[{"\[Sigma]n", "=", "0.125"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"LogNormalDistribution", "[", 
          RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], ",", "x"}], "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"\[Mu]LogNormal", "[", 
            RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], ",", 
           RowBox[{"\[Sigma]LogNormal", "[", 
            RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], "]"}], ",", "x"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(s\), \(_\)]\) or \!\(\*SubscriptBox[\(r\), \
\(_\)]\) value\>\"", ",", " ", "\"\<PDF\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.639408810447096*^9, 3.639408942855136*^9}, {
  3.6394090167251663`*^9, 3.639409017208108*^9}, {3.6394090569576387`*^9, 
  3.639409111873117*^9}, {3.639840776633668*^9, 3.639840777696994*^9}, {
  3.6398532962722893`*^9, 3.639853462215839*^9}, {3.639854009784783*^9, 
  3.6398540110520906`*^9}, {3.6398541187479887`*^9, 3.639854148955234*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw9d3VUlO0XLR2KICkYSEqXggHMewZBlG5BRaRLQUBKkBAEkU4FCSmR+gBF
QpRGGmkYmqF76Bjqzl3r3t/8M2uv55l99tnnvPOew2n6UtuChIiIaImUiOj/
fitbLHTXLFogRP/vM1/w0HSCTQH+P2Y52x9ezKb7Pyx6h+lrMpv5/7B0142i
aDbn/+GaxHqpMLZ34Bj/Brz860n834a4B7PFwqWsLJdx8y5Gc2cc2we2THAr
fpuq94qZiypWKW194ydURlt+eNIqJlrWdf3+ffZqiKfMUy5tsLlh4D86XB/S
AD2uPigl7tCbL7+/EonfbgHbv2lPbeP7b29GDjQTE3eCb9bbkpaVp9LNtY3V
nbI9MKAu3rzs+lnG5rXSuUcrfcDEv/NaZfW9bO4l+qdGu33Q0vtIbE0lRHal
EpNvRtQPzkoWeE2OCFl7EmtVe6Z+MJ3F2ShKxco6hwSG+Mv2Q1wnw2PyjVTZ
UhH1kSDFfjj3dRMbJ5chu9fJLBSu2Q89/8bSYye/ynowfW2NN++HiIblToUb
+bI+yfXUBaH9IOt8i7hFrUy2BkIeFX/sBx0GwfIO8wpZkintnPLUfvgZY0f0
DFsp++7a1IP6n/1waFQu/eFqvSzlc8eFjuZ+QJ372+zwslk2uJAoCDPaD4Ir
hkbeQp2y7VrNg2Nz/eBxbBGm+Klb9tx2BN/0ej8c5QtO1GN6ZdU/6rst4Ann
v74/WzQZkI28fbVplWwApEhVZ9VkhmS7h+dYtmgHwJ/quVWg/agsg1eB5T7r
ALQIOXFwkk7K6l51LT3mGoCGSG4ZKcop2bhaFAWpyAAM6EbwcSnPyA6YkT+k
ujUAx+p67Sq9c7KsFB1fz8kNAA/i5b6Suyj7KDt2h0FlAFgS5eSEh1dkPysb
3mPVG4B73VHWyVLrsqMr3HFXng1A5Zb5VonkpuyViOUZLpsB6PClM89z2JY1
kiiW5H81ACajWh5v1ndlU3s93ol4DYDKHy/Jtd8HslMud/uuvx8Avm9lc6kj
R7LcrGd4bkcNQJqa6Z8YYSKUeUX3K1TiAPTpkPpGXiVBZRkm1N/9OgAkmlzu
uapkqPkTY8YHhQNwlzmN3qaCAsWfxm+m9msA1kbfe1M5UKNs5dd/aNcPAPH3
wjehLjSovNkyEoOOAVDWisD39dKhVt77aD8dHIAY/2azx630KFHB++mm2AGo
9ilHB2AZUS/baTetlgdg7okK3k6KBVVkPyBntzMAikMXmCvaWVGb51OinE4H
wGWb4npdwSXUjWILrBv1IFQ1HvFmTrOjnPVEJLwYB6FFIMZaSJoTVbq37et3
ZRD89T/inklxo/YT/nS95xuEMlzsv1lrXtQd2XccYRKD4MvPEFI/zIfyGFdx
iJYZBBnOIL2UKEHUH1/Gmk/3BsEDt13YEiuCOuYaoUvWGITvxpfuC7uKo5C/
6c/SHxH4gJE6XvM6ytfKtvCb2SCISnCRhRtJomqpr5/m2w2CYLZzltPXmyh+
XfGyYPdBMJu+g6szv4OKTBF9ae0/CCtyAoFPXWVR+wvCfIrhg+CT/qcucBpQ
xjeEJrgTBoFbdqJGbkQO1ewl8Ik4cxBcExWGHx3Lo8Sa+TQmCgYhtp6xWd9I
EfWR4Rpl5a9BOB/yq+MGuRLqxJCn+nPDINRMuaxnHKigLL9xubl3DkJOQPB9
MQUNVMcGh9jD4UHYExX7yOmmhZKUvTp/Y3YQkluey/C+1UElBV75Qr8+CJ4j
ZJ7Tf/VQZN2X9HH4QVCZqMkvVTFAPb90ka6DHAMPLU6waWxPUD0WrE255zHw
ozEx3eSWEUq6iMUn6BIGvpk7Xa0eMEal45luWV7DAJHBi9XCOlMU9T1GnLwE
BiQYLoj8mDFHOUTQf+OUxUDu2Gye510rFGaI7tmpIgHz+Ao9nLJBoXloL4xp
YSD0rlaRSNsLVLY9TWeFIQa04fN5TRIH1PlfZ97HW2GAYaVb8H2bI8qNlBpc
nTBwYHrl0eDfV6hxNco9HS8MXKA/qtDcdUEpxpMXSgRhQLTot72/qTuqYIrU
ii4GA09MRNNDznuiWERIrq4mY2CJ6lY5O6U3ytuNaLA1GwPtL3Q62rN8UbO1
J+HZxRjwUZzmp3L1Q6nSHCsGVmHgv0Bn70KXd6ifDw9PzFowsGfcxJOSG4i6
nHZQKteHgcZXrxuuXfyA8l/es786gQF6BhF59tYQ1JLU7rXjRQxkjUenzdeE
o7R9t8eHtzFgIsrtUEMShapo3fxYfoqB6EpP3+bOaBQn84b6xzNDgJj6Jv9u
i0UFPcNRODMPwVjttSqRw4+o9ZzVKi2OISDxzOPnMEtAGWwvu4oJDcGvaj/+
s9RJqGpkSfTczSEgiimNW9hMQV37sDC3hB4CYiOhL18Y01DhvXMpzSpDoPtv
Ne3TQDpq98rsw6yHQ/CcDFMNjZkoI+tp2ncmQ2CmUEM8MJeFavyBbTR5MQT/
FZfP4mVzUCLHE97gNgSHnMejvzryULH3x29e8RsCyZiXntEpBaijqNE1fOgQ
mL/mvVE7XIQyHx3Ownwagieq+lRBoT9Q7deGjErTh6A3CiMoZP0TJek4yBL7
3xAsWJj5BjmWohJ/9/9zLB+Cb6MyQv355SgSir5Ajfoh2Pmkg8lk/42y1exB
RP4R8p/1S9toq0T1fO7aPTM0BHEi9vcZntag7sz+K1iYHoKNPkeTiL1aVKpY
h2Xj2hBo3uEoTCuvR1F5tLFnHgzBTL0EU23GX5RDQ8vAW7Jh2BSsCfj+pwk1
SNsc/oxuGAruJ975QNmKQh41KqIuDkMDtYBGWVA7Kiuj4eQi7zA01kbiz9zr
RDkE6GJBbBg+mYTetqboRslYzdSb3xmGa8l9j9KCelAUSs5ZH+SHQb3nXXaO
UB+qS5DsQ4HaMPBeuEwutNmP+kwT+7xXfxjQycPkZBODKPM1bvV9k2F4RxLS
q7IzhDr4Ls9413UYQlRnzMvzxlENMb07lr7DMNLj7p6VM4kKdzHDhAQPg6pV
XUcS2xTKQH+roih2GPLIrfnx36ZRXHf8k/tThsEW/dyLR38WtXKR0RefPQzJ
eIfuQoF5VNlRuunV4mHgbuTxNuFaRKnW1PHZNA0DQ93a5UfRqyiWdO0z4d3D
wLp235eDah2F9Z9a+TEyDHfZnHI6jDdQ+RZOnYOzBH9WNbNE+zdRrvdJfhzh
hiGRD7loZrWNQgtEx3Lih0F7zBf5wbaLOnuWy02RbAQosVWJYWt7qNR/crKR
rCPwyzPifuyZI5RtUTd7CdcIVNZi0FH6JyipaBPiYeEROKPF+sDUhgghct6Y
Prk5An5U1o+7q4mRVr23jdxyI/BnI9wVJ06KxN6iz3mgMgLua+wlZVVkiBFb
Woid3gjggqKnHzynQLZGazTLbAjxvlKIkwieQaqqNG+MvhoB+edCweJyNEhQ
6iQzsfcIdOwtdN15S4to+zns8waNQO4dZ5IQ1/PIZXOiEeXoEbBQ2qncr6dH
5u5FVr5MGgH+XirueEFG5DsfR2ps1gj8/G9/+nY+E6K4DBbjFSNgwPSe/ykV
K3K+o/M+6d8R8K2r5L82z4aMFDwT5O8cgdvSSYs+i5eQrEgcjdrQCARHt3mu
0rMjDk4+OMfpEeDeinYJl+BApHXpej6ujkCA/r2D7ZecCPnNLz9/743AkCrf
i6K/XMjng6rX5DSjENrNJFVbyYuYj6gbCrKMAj3PL3SuGR8iVjmOaHCMQsfF
Ym5GfgEEn2LP6Sw4CkGxi4uM54SQBt8T0gTJUdiUemA5zySChJuGz1Uio3A3
lFtrVU4MMVBgb5l6MAqStd/vPmwTR1YpkXDhp6MQc7J7kcvkBlK+2OGgZTUK
CkGvyf06JRG/tqc6ro6jULX1PSNb/yai+t+qVKLnKFDAg0fqh7cQlggv1pqA
USiMi793/88dZNLh3OFMxCg4WNfOvUuSQfK0k8eoP48Cnje/90IKCkGzVKbr
FIwCWBrfYqSUQ8jimF/eKx+FsZ4RKwPpu0gzo73MrbpRKA8Aehk/eSQ0upFS
oH0U9s9SFZ2ZVEA06K/2XRwYBbJfCxhBPUWEIdItlWZyFKjqaB4xTd9HBmi7
XpwsjsIrIU2LhyFKiBHNW/Kp41HoJFsNiJdQQ7hChrp7KceAhd8+5voNDWSW
+nrKX/ox6Lp8/UAkTxPJDgq2Lbs0Bu/pFtdj/mkhLyinb+bwjsFcL5XCDJkO
Ih4oQ5ooNgbWEmjNBxq6yDZZbGfonTGI/mP0BV+gh3iS3LN2UBuD6aRnGRHF
BgjyNlnSVH8MClcYMPeePEZIiHaJdE3G4PFtKcutK4ZIo7d6x73nY/DPJ/HD
reOnSPBxVsItlzHAlrpsNeOfIepvTi0EfMbg1qGEvwyNCUJ/qH/90gfC76+u
RzILmyLx+1RtJ0ljwPV+I3gp3RwxdDP5tJ5F0FetxcRyZIFw7P4ymyoi6Mse
Mv1ma4XMODOI91WMQUZx+v44zhr5tmV79LdhDM7Eyq7Shtkitk71zWX/xqDh
DfQmyr9ARDcuxeVgxoCu+Uv2MZM9UrrWLhK2MgY11j5R8pSOiIcdL957dwy2
8GVuZFecEGTFq9GBaBz6etpZQuRfIX8XRZ/pMo2DuJQGbXOjCxJk/V5IkX0c
Cha5J8J53RDV+Ym9W/zjwI3Y5aIS3JG+mcjIS7LjYPANXcbU4InEmy0anlMc
h9u/rdf+enkhhlNyAqca4wCiGUlOWj7I9MRm7ZTZOLAoYGWVst4iWUYq4X12
46DlnH418rcfYjuW8bjRbRzYrInk1yf9kc1h3a2ckHE4t3i0GfIsECl99F91
Ytw4DKWmBOdXvEc8MOShYV/GYdrZNOa7wAeEeKCUx7F4HDKs3rRW3w9FGnTp
Nkwrx2GQwcr5wkEYEtRrVanbNA66h0p9G3URyPlu1oe3R8YBW1cgXtEThfRp
OHIJzo7DWXxfofNkNPLpX8vaJdw4RClEXkWOYxD2do/3pyQT0IGhchWz+ohM
KffqbNBMQEx6Doq69BOS1SLEMc0yAa3i5ikPLyQgIk2j5Y2CE7CxaneZnzkJ
YVl7vhopNQHmTyfSDgeTESLmQ84n6An4w37F163kC9JnyhaC05uA3/e5/0hM
pyFVH7KrfxlPQEt2tu7bk3Qku+jWtv/zCcBoAIeeYCby5kTvKevbCZAek/oi
VpaFWPLORk2FTABVV4oY38VsRFPVuTH/4wQcnaQ2BUTlIDyfo8Xk8ifAMCak
YKE2H6Gt5TQ/WzYBjJQxIw+8CpD9+aL4/toJGHgtFTrDX4S0S3US2w5OALbv
Onsj7w+k1NDopuTUBFwYaLHov1OMpPqv2p6sTIBXb9NVrac/kYoFclsl4klI
SayR7+wvRcTeqL0roJgEpodXY0KEy5FMurgURppJsOGtIhH4+AsJv8nTO8Yy
CXf3Ev5tff2DkLY+X717eRJqHVwMpNSrEPenxZTZnJNwa5m2uIaiBjF9d1fW
SXgSSs8ri+4v1SKDF4IfDkpMwhSLDnfLeh2imtftIHtrEv4wTW6nkDUgUj3G
XynuToLUp/UQ4UeNSK5FdvXz+5OQ8Zim3zSxCWE/wA11qU6CmyIUJ641I1Qc
PrSJ+pOgtY9749LWhngVN/ITPZ0EmRx66omHHcimIq28hekkLNhz3B7b/YeM
2iW7idlNAk1fTbK6bDeiRTwbFes0CeIeBmog2oM0xgrnH7hNwmUVjPpn4V6k
6PfvyXq/SeBcGNze1OxHeDVID/mDCHxng8RuuA8gn6eUmcPDJgFtr/DSrGAQ
eUc9rGQQPwkxpFOZ1srDyEESp3ll8iQYD752+P19BLEXt/HmypgEdd+gQLzg
GGKgv/9j5b9JqLl0BqMsNIl0LEGHVvEksHD+RD0mxyJ3vd/Pl5YT9Pzmw3At
YRHhryyX39ZPAgljABGmfxpJu210c655Elyqn2A6xmYQlvavmir/JmHf2200
YnMWIdqSDGAemoSha75ELQoLiEvgmy8e45NArH4+1s1/EVlia/g1MT0JXVVE
+SbdS0gfWmctZ20SllpvDqYkryL4L9PJP7YmIWf4iT8XKQ7hPH2l9nt/Et6x
X4gXll1H7Ctj89tJsDDj4rx5q3UDib3Ma9hPiYXvgnmJOimbSIVnydlxGix8
4Re6m+q5hVBKD9jiWLCAQp3I3NfZQUQTLC/uX8KCBH+ft5X6LqK7v9tCxIkF
Ilf+AQXdPSS19IIAgxAWGrRi2pbeHiDSNx7NSwIW/nD27/3neIIYRy9+RClg
QaPMZtGq8xR5v/FaUVEJC66/MYuYZCLoK/z8VV8HCwE/46bYOEkATyukZ2yA
hbuRHzLb1kiAw/43mc1TLHQI95BvNJCCnfComYcVFlobCigmQsghNuQFo/8L
LHiy3Pqn7UUBFUtHdSGOWNCdvVEY6U4JFDlXuJI9saC2Ou+PDaOGVN5nk9UR
WLDvZ+BvQWih8R0uojkWC6EfmFmef6CD1Wkf6E7AwvlovqthDudBOj01ZSoD
C9bOgZl1o/RgTCyhvpyNhZch9pUpyQwQaFx7vPUfFg6ZssaPLRihl33KkLwc
C5dVFe4a0DID3suJhrYSCzkOvl5Ta8zAMUbyh6UOC+aT4t3nMCzwIpH7En87
FlhWT4l9/rICBavFkPIkFqwCkhwwzFdA2G0nSGcWCw/wOy7WCuygMxBw23AJ
C8xOAneUva8CYVj7ZLeNhUVvqeimM5zQuHXzvusBFro7FFYmfnHCinbTrvcJ
FobdJxrsX3LBHfoFvUiqKRi9Ql/1b40bjB3cyRPOTUGLYaQ54y8eCOykKklj
mIJq4cjckmBe6AkTYCq+PAWrCZXC5+7xwYszz3v6xafgzu0DesUrQpBVyVKq
fHMKgiVU/FLRwjDhUJdQLTMFVczdg2IvRUB7kM0kR3EKbrTJt3vhxCA0+K8C
u+oUNJjjhCjSxOEvypE/RmsKSoP/zZRpSsDtzGbcG8MpiLvIJy3bcB2c9J17
N0wI/PcUu/2DbkDeGY4yS6sp+GVMO3dVVxLYHd28NZ2mQKqod0mb5CaQIdfO
8QRNQYJ3oNVh7R1ANrrX48OmQMHO77dEszS4ZXr1nYuZgg82+PjFQRlYOtOf
uJc8Bft6/z5dYkaAp8rX50XGFFw3T+KUlgd46ihshs2egijrtQh6BA1dg/6C
bcVT4Eli7zHyXg7OhIjRon9NQUxBVFSo1F2QR0Y2flZNgeqR9oPHi3ehNPP6
r5SWKTBieII7b64ASY7Y+04TU3BJrepyUt59GOAJE5qfmQIzsoyHwxEPgA5z
m85waQqKeW/0TnsqgR8SOXBvh+CX51K+ygsVwp4gU1GBJ9THgvgdn6Mq7GTO
J4sRTYMvNz6txVsNrM+CBdvZabh4bibVrkQD0quWHoSfnwaRAOxlr5eaMOL4
UZiUZRomW++qSVBrgTpmdWuFYxoCuWRa91S0QfJrkl/NzWm483pFE82oB/YG
DyylZKeBRXWw9EevHnw7u62UKzcNuYlj0bqfH8JFJxX6WNVp8FnxtRuWNgBd
3r1tKu1poNBm2bnI/AjCMOkYL/1pMBGzo1XYfQREgP9iZUrg+6nNy/zvCUhv
fvUftSLgbN1Yrr+G8OqrlpWW3TQ0MZ7xm65/CnNnc0Rl3KfB5UixRH/oGbRh
9Ctpw6eh5wpz1UUpU/Abnme2jZmG2q+0hXGdpnB71M3+b/w0dOTLjn61N4PM
iU9X32RMg00wsctphTm8mRt8u1g+DSi7zXLaSCu4vmA1rFA1DfSxZ9SztK1h
YXHvemo9wS/uzCeDF21Ad/XCzMN/05COjaKK+2MLItv6ig3T01DMM+MdpWQP
MzvzKVcXp0GYtq2NBPUSPu+57XmsEXABWeiXSw5AcfgpW+JgGizUv54+43CE
cWLMmS+0M6A7P/tH6+EriCW1NsMzzsCezIfJmNVXoEy+/1uPbQYwrvaeq0HO
UErFakfDQ7gfonTlQbsLRNAZdL6+MwNrNrcuPQlyB0X6Bb5+ZAaqbIeIWeRf
wxGDu6+4wgyYn6dmLyXxAGuWeIl5dQK2dE1njvIE9BVMjK75DGyttiZ6rHrD
Lrv1SqHNDAiIF2W96/GBfI59hbMvZ0Dj25eDQiNfYOVh3a19PQMNSSK4d9pv
YUPQwEAsYgYGmZu8p575Q7bwQlFw7Ayke8w3uC37g5GoO/Vcwgzs3CKnfePx
Dlol4iuSMmdAJrZzmy0jANJvYy6fqZgB8imD/J8cQWAgbe1iUT0DbYa9v1ta
goBWdr+jpmEGHm/U5sy6fgAPYPVx6yTEuz/n6j8WDDqKBtiZmRnQZ7H8kDoe
BhWMEp3TizNgOOIQ/zApHLiw1JVTazNgXC7GwGEUAZuev+Mn92egUkTG5pJb
JER+Z9ccpZmFf84XkuU4ownv4T3UCP0sMC5SGzlGRcMz1S6hYZZZCLmqarxH
GgOi828pMRyzIMj7KVN0PQbaL89W9UrOwo+FM3wv5uJAcqkyv+fOLIQf5F56
afsREss+fu5GZgF9furx5Y2PYKv9wLXzwSwoZf48SaOIB6qgPJE2w1l4oczo
+FHnMyhsOSbVvZsFXbOXmy98vkB+jXJw7YdZ0Pr84rCWLRUYw7nda8JnYbuL
g83PJRWm+Pt1quJnweG0kVX6ehr4Gt0+W5E/C0zrWefu1qbDghD9Qfn3WUiR
15/LFcgAjYPFubLSWdCnSas7jskA9tjEupKaWRinY9bxss+EypaT19/7ZsFV
jjcxRyYLeD4NWhUNzcK82Mk6388sCDUv0iscn4UVRdonLaLfwPDUROK/hVkw
uk5PHCOYDXjJvwvZR7PwWzskhxGVCzdTQ/RTeebg6OVKfWBfARTV+rw+KzgH
sRPUNKq+hSA0/SrRVWwOnLTGD2IuFAHHNcMJVek50FczqLrWVgRn84WtDjTm
YOlQc+n3vR8Q2MHxwVyPwNcsSRqW/QOIcEx5nY/noO1T0Vmmc8WwK3G89tVi
jjCfKdU/GimGybIOV23POVD/4HLFKKwEngzVxlf6zoHKv9Ae95MSGMCXVPAH
zoHOzr0WF8dSaEOlnJxEzsEIUxK9yNMyKK23D8zLmgPLPR1pcdVfENJJ95Gs
Zw7uxy2xRYZVAsUGafnLwTnIbHEK9LpaBb4M+0PDo3OQLTdvklNcBa56k1e+
z89B3kWVnt6pajAeKfr69HgO7D7emwsRrYWb81olpfzzsGTCyg3T9VBEpTjI
KToPz3Dnzn+ABhASlD4IvTEPNZ8xZzmTG4DDjgtlhsyD6MDvFkXDv3B2a7OB
TnceBNiyhCqWGmHyJKbP2mceDJn7eaqVW4FmpSvE7d08POVaCYstaYXbQ+fk
Az/Mw2903/2fnG0QWfz+e0bMPNjsdviPHLcB2tozfPzbPJjVttygaOyAtG7T
B7pd84DTJ1Xqa+uCf1VfTk3750H+TQ4/A0034PNGSx2H52Ftw2OfXK0btAMf
8kbMzMPiz1klxu5uIJFRJmndn4exueO7E9geMM2U+EMYzsFPUvYhJV8/hEfZ
v1K/tgBEpaWJDK/6ocI7T/Cp0AK41XEcYqv7geERb4KH1AI89NO+0vVkAOrP
sbmWKC0AV2Hcj5OkQeBxIxIXcloAuZxpUeTeMMwqdWaw1C9APAs7exzrJPCE
8EVENS9A5DKRyS+NSTBv9/Gg+bcAnTd7rR+/J+w16uJaJEMLcLb6KZqRMCeP
60SdrK4tQPpljUDTCSxgnuo8+ntxEVZ5/di9/05Dq+MgrbPTIlCZt/uT4eaB
ulgMv+a2CMRvN28VEnQ+2H4/a+NFwDlXY3veLECT6+0/z4IWoTjgVcJbmkXC
ezvBRiVlEbh5dq45SyxBZcCTBq7WRSCvxnrejFqBooSJ192cS9BmRDfU0r0O
LwQuD1/nWwJLx0+JmofrwP/LQDpWeAmmWq90UvBuwBdMN/7hrSVQdsR8PXXf
gPALDZ6jqkvw3PeSJTP3JtjFZXvNuy3By3v3mZ/6bIFglOPbY8LS8olvxllX
dxe+BpF+EPBYBvHwd6NtSkfAMBPkLeqzDOdGHo1Suh2BL9A633i3DKbU8e2K
mUfweJf1GSp8GR4YWxS3nhwBnbmolFb6MozvCa4NFB/Da3iEdW9dhl+5D5lN
r5yC2m7BneaLK/A3mpQkaZsIXaElKdZxdQWaT56PlJ0hRvP/94unh2cFDJd6
v7VwEKNJzBvoRkVXoI3jc2aHKjG6rHtoFnd3BY64q05UM4nRnP+RRV94vgIq
6T1MGE0S9I7Z4yXL3yswMUi59SWZFO3KeMiIqVkhzFuRFa+LSdG7dYkopcYV
cJ17ry/dQsCcY5FC3SvAoe1oaL9Nit6feHZrfW4FBuX4KuOUyND4JxbvXjOs
gk//nzsBa2Roj7MUBUsXVsGtReDJZxJy9GFF1uCTK6ug+CTubwQLOfqIbUEQ
4V8FooLBJTaEHH08aNtNgqzCrKfxUGoIOZpI14E91GYVXOf1GPg4KNC+pPQP
ju1XAaX07g7TdQo0cfF3R3vnVdh492ZyRJ4CTcKw1aDpswoxw3OPDywp0KRd
Ls+Z41ZBR6JkyyyPAk2h6lmeUrMKZb5WYT+EKdGBh5em6BpX4ffWIyouWUo0
Rd6fs2/bVoEhgEbYSoUSTXnmxMhsYBUGLAsMHW0o0VTNvuT8K6tw1+CNgHcG
JfqsQqD29wtrIE4qpCtPR4WWrX5J33h5DZp3h7Bsl6jQ9tKPuoY518D3ta58
8zUqdI+4sDqZ8BrwitmO56Go0J+v9Cjpo9dgkSZZPNiGCt0e/5vqxb01mEvG
0V9ypkKfMH5t8lVeg3c9+5/8vKnQJmfc7+XqrgF77uTZ/mgqNP/eFblj6zWg
02K5+O4XFfqxEyURg/0ayGX8S2uso0KHrq5XXXu1BgMnDkPjbVRo3HS9rKbX
Gpwb88NFjFGhS7tsbmdErUET5ezZzRMq9IKKzl7ZxzWArXcmExTU6ItNsqXt
iWsgQcf3XxotNdqrkk5y9+sayGuSjWReoUYr5JaIKVWsQbtXxc+MO9RoV94v
a0+r16ASEzp4E02Nzk4N+s+pYQ0Kdl85pihSo89+eiKU9G8N7l31GF3SpkbL
MtxbKupdg4ic8fhOA2q0fZhozl/MGqwLTqUHGVGje/yJ+XBTa4Cq0fV1s6FG
k50uzZIurMGki4bif/bU6JsefZmsq2uganSKlL2iRic4fOO6u7cGv7D+Zfe9
qNHGT9XY487igIvJ3fdxODU6GnNzLOc8DjINOaIkoqnRDTocSVXMOHBRqW8Z
jaNG8ylvsS1cxQHFsGNVYRI12uDvKOaIBwcC7LZ+g1+o0cHoxk/0gjho/yLp
3ZtOjV67mcAsI4mDJHT2zQfZ1GiOH359GndwoFQvTFKbS43WFnkRY47gINL8
Njftf9Tod9l62q/lcdCy+yRDrJAaXcIN9OEPcJD3mDiM9zs1ei6FvytdDQcv
XW2XcT+o0awXGSLKtHHQea2oNfwnNVo57lCtXR8HRIK1t0hKqdFvzs/SYA1x
UEtmglYuo0YLDv9Aj5rgQLwnsdGknBo9lOHrPGiJI8whaz81flGjg+zUs3ue
46DpXcpFpgqCf7cuj3Y44KCM9TtlIQHPEC3Rtbjg4DbpcijHb2p0TGuZfIMH
Dp5Tdf62JuC7sQFu1T44GBxNynpPwOtPdfIq3uGA41jD2IuAU/g4J0o+4ID/
bcqREgGrbawxfA/HQcTSXsQqgf+o4o9ifgwOKtf8xawJOPddsMe3eBw4ynJu
/CLoM1A3KEhPxsGhrPnyFEE/Beu1qeR0HHB2x0lNE/L7id1iTviGg37qH/MV
hPzN8mqVYvMJ+YxaXrQtoUYzuER4RXwnnPcxzK8XU6NrkKffg0sJ8avqrTQI
ftpTCc0G/MZBuaZUWUARNfpyzz7r2xocUHV3rscUUKNbExtV3/wl4JIscY98
avRri1hft1YcaIJbzG1CPQf2xRbs+nBgtnD3NvKVUM+640s2QwS/po5KAwj9
cCO0TcN8HAcXHwv1fCX0S+RVq7LHCzhwXrU1ckigRiOLkst6q4R6cmrSX/pI
jV79QXJVaxMH385pzKQQ+lFZMSXw/hEOkoupXK6HEPyivPk0jWgdGuW8Xt99
T43uW7m8x066Dq+vvhES9qdG+5UuCV6kWoeGITrhMA9q9LhSYPR5hnWwoo1p
+2BF6C9RO+FwpnWgeyRp/tyUGh3KqNt49sI6+JezYvmeUqNlxjjxFJfXITbt
nch1wvMY71Bpcsy7DtSimmWR0tTol3qZhx7868BomMqkLkmNVpQOidsXXAe7
AJPCeRFq9A7po5YtsXXIv6StU8RB6PdP2+JLd9ZBtFjCNomMGk1TJUQ0qLYO
vnT0eOpGKvSqKsfPYM11OCmb1Fz8Q4X+N8JkjeisgwaJrkh6MRU64uC486vB
OvAtbvqlpVKhGaS6vjibrcOC/AbduDsVmjXfGRherwMee/dnCBcV+kDaZuuv
5zrIeyb85b5AhR5uefrttfc6ZO811iacpUInzivSYf3X4SOTXjrHNiWanZtt
ojCcwB/CLZJeT4nm+VzprZa5Dmi71J+lhpRocoEf14m/rUOO82qtpgYleq4s
a+5nDiFe875nhxwl+lt/hPrlwnXCvvRezOEaJVqQ3pR9+dc6rFx3FTNbo0CL
B1FUBXWuw83ja8sKrynQKFeN43r8OhwrXefl8yJH79oueCodE/SaR5202pGj
i569xf87JehlZsM/NSJHcykV7w2RbcBEsesTbSBHU12+sImj3QCMsMK4JxE5
uq92fO4S9wZ0KwprnfElQ784Z9/1SmUDQuPen+9xIUUnZYZmcCdtAMLyLMJU
iRhtpCfZQa2yCeuj3PEU/AdgfEkttVxtE26voDeryQ7ABGvxykpzE764iBSF
YffB3O4T21+9TWBE1ZpYJe6DTQDewtd4E2bJor5fPL8PziU1J7sum8DyKqGh
9HgXgpnVxGdSN4G4FtOisLwNoSMWpDEZm3CDFreKb92GsDTvAbmsTVhM0r7S
nrsNkSJFb77kEfhQcdI1ttsQd4+x5XHpJjAUewRvLW9BqsuQSXfbJhS9GmzJ
3NqEkn6LmKrdTfgdQvrqiHUDIom5JeBgE2R+FvEgJ+tgKzL5r/pwk7BvuTz9
PL0O7AGPz9QSbUE6Y8+n9IJ1CJTUeFt/ZgucqXS9tu6tw8OY2y+b2bfg47BE
O2ytwZ7mWZUexS3gC8q+l7m0DD1vmhe0lbZAJJa+efH3MuRnBwT2qmyB5El/
n0XYMhgTEdX1aW7BCfmNAGKJZWgu3L49+HgLyqNPxho9liCedvzaqP0WnBk2
xvuzLsKd9iKSuY9bMEJvM+L+Zg4up3tWJCVswc+pN984tOaAyF3RSSdpC9wi
vzRQXJuDZu5RbE3aFqSM+/qEdc3CQ0/K2sT8LeDI4Ch4yz8LToJGPlp1WxAU
zfV8YXoa8oPOHv1Z3YKrl3io895jIdJooPjV+hZkZbzVHDLDwivJtOeCW1tA
HSLMJ4fGgvTkzZFP+1sgs/y56c/BJLTcMq1wIt0Gqh2TdKOXkzA3V+7Oz7YN
/lY9GPnWceC4Z7kTo7ANTcL/Kr02h2HUt9/t8v1tOB7Hq+n+GYb4Pwr4TKVt
sI+jXPUPHAZ6Se7TEvVtWE95uLxyaRhIuCepMAbbsHwaMj2iPASzRI8vX7bb
BooboUOj5YOQ+0dNPjNuGxqZxpyGe/rAcv/PX+H4bYi3Mo1l/9YH3JLCD0o+
b0OXyuiZIs8+SMo7o9b4ZRt6TuD1L94+CPvc9HAhZxvKqUNXn3j1goO7nK1w
1TbYcYp0hUj3gJSkVNTPuW3IQMPTk95OEP/Eoi6+uA3mOf/EWiI6QRC/dyaf
0LeBAYlr9KqdwFFT8S5jfRu8VaddLjb+gzOqaPdo/DZIyCp+2a7ugEkzlWcO
tDsgEnXhws3WNhhuFL68cn4HEl2tHcLD2qBfgHbIinEHmG4ybDzSaoNWXJf2
M9Yd+Ef+tOH+cCuUeD5UVOfaAVH7JrUXGy0QHGMiInxzB4wPnt+4L9kM73bv
Ln27vQMtVQX/+Z80gc8jnm/cMjtQn8e5yd/SBM5X5zkuoXfguXWZdt6zJniW
94LpjPIOvF6KHfeKagTJerfD+ac7wBnEL9FJ+RcmNsNaMgJ2QAO78mZeug5m
Tt+k6gXtgMfZOnq/c3WwQPPCjTJkB3To2o3fTtbC+jVl3ueRO3BmAqOW974W
iJ5QvL2euAMlpBXO8cM1wFXvfbu2aAfSd0XdXHmq4VqXHd2r4h0oaHy5kdBf
BYJjhnM8pTuw+PneV4f3VXBjTzo26PcO3F/Xt7y+WgkKQns4jcYdiE5vsJyq
+QOWMS+/jY/sEPqapr3nfQXYphp5R47vwNvImtww+Qqw/09N7y52B6y/P0LN
n/4CtyYh0qy5HaCVvZPg6PELgg7njew2dmA72Eip1rUccsyMWY4odoEySpxT
PqQUVm5oBbBd3wXGkWbjiUvF0JI1cy1ZchfK2pJtY1Z+QBabezPHrV0Qn33x
4kflDzA+TTnLL7sL8+wqtKImP6C3dSXqpuIuRFZynCP/7ztUmASl6DzeBZuQ
3xd89YvgU98l9KDhLrieJYn0Fy0C5/uF2MfPCPxE49az5EUgKjLAY2q+C2bK
sn5+zwshfZ87z8F+FxoZeSY/3CiADxHVZWF+uzCHp/pYOpMHliQ6j+gDdmHN
o+nLSHIe3HWZw8e+34XXOr7pWfp5cPT4HJIUugtkX6clBDpyweHak4bcj7uQ
9+ic5u/qHDCo3O1qyt2FNob6hI3ab3BtWWSJuHcXUqnRotTXM4GGqvPr737C
/eDuTZaDDNjicTBxwewCv+vs3q+aDKgx+oFZGNsFO6HmexVaGfC452ZT58Iu
rAcOX/D2SIfwX5CZfLILK8R3o1ZmU8F5YPKZPvEe8A79EyosSYUnW28v0ZPt
Qd4HVoXNgFTgF2mIfke9B9t0ERd2+FKhLvXB2+dMe/Ar/tvGp+kU2HmvZXRH
cA/wtUuS7reSYDRzk21LeA8aeUypd2YToa42pj9fbA92+dkeq8clQvhhvyqH
1B4cYJl2wnY/A//LxzKU6D2YCjMupKhPAMOHZqz9ensQm3nxK5vfJ2jgcelx
eLsHlzJYF3xCYsD/W4XBkf8edNFjlCP1YuCuINHE+8A9SMNorApzxECtWMhy
SsgenJ20LyYvi4Yq6TSyjrg9YBp+L0K/HAVlmh03BXL3IFR8hMz9eSS49jJU
/szfAx/q7LqfqEi4+dBAHl24Bw60V4ltz0fCzyfTGvo/94AMmzjgZB8BRZYH
1gFVe9DTXTkazxQOuW94E7E9e9BfJDedHBwCNqe2nHb9e3ClgqqIHRUC/H5F
3/YH9+B6nAGV/XowZL2X+Uk3tgc3PbuNHR4FQ0a0Vgdqfg/IIayjXfIDJGV7
nSYc7oHsXZ8sGbr3ENHXb6bNsw8Ze68C/BT9IdQ7jKf72j6IfhKofXzeH4L5
781qCOzD3IuF+vphPwh489NSTXQfxP0m3O46+oEnT4zNg9v74K7WWNWW+Ras
nDVfIqr7oIQlkcTy+II5O5V4pfo+cE5H/bq35gOmzdXrMlr70Kghf7Mmxgee
XhZzuvOQwId7uBiJ9QadhnMuksb7MKhWcvQ0yAuAqc1D0HkfvtFkcH0h8gTZ
Kj+ZHNd9eO7NJu1Z7AHS1tJHfK/3gWqdfVjAygOk/uR48Xrvg9N3Dvndrtcg
ZB7kyxG0Dwjxgwr6Ane48PNeIEvSPrS2PBOICXUFJqNjxbiUfRjo0M/NVHEF
BqoSSqa0fcgsrbxqc9YVzhnyfKDP2gdvD6ZM0jAXICUjDaUp2gdKBT1htXhn
wOnURJE07MMdmezlog4n2P0W8KKscR+4qm09gqKd4ORQ+f6Lln0ATlMvBgMn
oMnsP+r/tw9hH4RXpWYdgX97ySpnaB8KuVx2/SkdwTiWGdHE7QOPm/fC9X57
sFoYZiXf3AcxMe1J61f2YC+buvVrm6A/yLimmcEe3swI5nDj90H2ynzLvq4d
xEuimfYIc9v5YJn1yrnn0NVnu5R88QD6hjLSWVE2MMgv/lf7ygEQBQ2pvVix
hvE3O18oOQ6g68IBY3mSNazw+Oo58h7ABqN5ijCRNVC5xNUoiB+AY8QQm2yP
Jcgx13xcvncAb6qz0lJTzeGBTYBj6oMDaLz/fU7CyBw0K5VV9VQOgG/Y4nHU
ZXMwsugnrtY8ANpDJ6XviWbgUbL0IvrJASRevcoqmWEKP/SY5e84HgCdZum6
Zr8xRNP5LFS/OgBtW+J1nXRjcGpZCFN0PQBrimfHyy+NQQL1B6PjSbi/nVLf
R2MMRTxm9vYBBxBmSrJc/tkICraKEjISDsDv9LzlSOcTCP/vIggmHUC2hV4e
recTsLd6N1OUcgCr3rh/MnxPQGREX6wq4wCGr7z94e73GPLrThow/x3AjvF6
qITCI8iNUl0/V3cARsKPO59sPoRgldK42IYDSMN3YzfyHoItOYfMpaYD8HVW
p3xk+RAEXm8F8LcfgLv/gVzUmB5kG3++JD9wAF6Xkrpt+nUhS2xB0X3pAHBW
ApQ9C9oQuKi1crJyAPz8g8ovC7TBMuN3VACOEO9ihORvZ23gvRAxGr1NyC+I
75o+qTZknkg5/XdyADpsmAkbfi3I6PBPnmLAgxZD08kfDg0IlTg0/MKMBwx9
3TOScnVwjXO6bMiKh9r09wHJmurw4KlJYv8VPGzV65o1BKjB2gqS0MyPh5pd
n0OTUxW4TYOPLUDwUKivlOIgrAScDo66z+XwQG5lpC01+ADO9C0w8ivgwU1P
7S6D/wMYSxyMTlPCg+bX5SOK8fvgJ1QSGauLhzY/5ZteqYrQoewQ6mGLh7Lx
FudmXQUoLZhXuWWHB6NOHrdAOgVIZXh2dvslHiS67gwKtMmD07BasJ0LHpjX
W+SY78kDq61QkLEvHjwmrL+Iy98F0w9z/oof8aDaWIDjtkSDyupTedIEPAy/
tdTaFEGDpFY/SU0iHlIK6qT2VwAo2Rre3knDw4A5bDkwAmFeT/MRzsfDx4Z7
zPyOKNhrMvRkqMPDuaLO/b7n0sCuo+hS14CH0ri13y8YpEFxXOylUxMe7mk/
AKGKO/Bxm8Sspx0Pj2QkR8+duwOSnDnK0YN4WF8cvUlecwucPHbYGFbxMENT
T1SlLwWfyScY63B4+OZxTZmDTgpqI5vPOW3i4VhQxO9VkySc/5ZI3LOHBxnv
/JxJaUko7JVbjCI5BMO6PXV/4RuwIhxeTs96CJNaw+df3ZYApnK3H7UXD+E+
z0B46LE4yMib5DteOQRLqptFtvXiEPxIMrWbi4BFQ9dstcRBIHD4fZTIIfgV
PCZ/uSIKlhPX9OnlD2EY/0lzp1YIwm3Pa9XeOwTTqy4d702FoGTnQNnxwSEY
BQW0PCYTAjKaDqRb7RB4ZFM2vqsIQsbtV9eiDA6h5EAov2SBHyajqnfO2x9C
6A8OyxqDazDpp1YR7UA4f3K17Mf5a4B9NeLN9OoQDDCJIkEtvDClt0fJ6n4I
bu7shd0oXphmE7t41e8QzvNb1cSK88BcWgoi8vEQaArnVdNluWAuWpi0MP4Q
QhR0VaOICdi/okk88RCms/w8ZJo4Yd5iQFMy9RBy5C6blutywoIArZlM7iEM
XDlsZ3HngOXvXu+Vqg7hSD1N90rlFVhJP6vaVnMI96I2B54ZEnBMwnm1+kP4
lSHqOXB0GVZcShI0mw+hZuYGWkvuMqzdWc3T7zmEPaf6NhbMRVivNeyymDsE
iq7htP47rLD+Yyl2fuEQghJqjb4vXYCNDPdHNsuHEPf7lX1w0gXYDIiderF+
CBy+HRL8pBdgS6l9+xX+EMJuFRFVjTDDbrcMmx/tEZR7tw92lDECkd3g3h36
Iwj+0Hu9xJERzlC9GthgPILHyX7YSGFGYEdyY0zYjsDbsUaB9SsD3MtlpZXj
OQIGA+Y62jR6iPXbISGSPoLT3iqeTX86SLkShS2TPQItCcGIF4x0kF0uXPMS
jiD3kTmfYyYt/Fkz85pQOILx3VvDpG3nYOZxz16VxhGcj9OfqRaggRs3Cle8
LI7AMr/9oroANcj+U26Tsj4C8jvM9hc6qUDRZi5n1fYIfK11ddhdqeDxlytW
Tx2OQHNMsrW3iRL8zoZiZT2PYPLlWbTNawrombYeOIw8goXjxZQWejIY9SYr
KY4h6BO0N//QQgpzbKkxzz8eAenp1+IHfqSA1xjUHEk8gn8yT66V75IA5597
bRVZR8AxMGJ+tEQMDrFcNa//HEF+q9H35KNTRDvO1Ia0+gj0Ax6IpEeeIlIf
0xnCagn8lLlE566dIvhPXBapjUfwx9cukFTvBAlI5DrT1HUEIaxHbPt1R8jn
dC5dptkjmLM5M6Q6coC8yTA9Tp4/gp7+0vkf/gfIs8z0LL6lI5i6IjEhK3KA
8GRxHUjjjoAyIDz/P/99pDCHK8Xk4Ai+fVHQSEbtIQ1FXAsF545BdKX8bsHU
NpL13TTq9vlj+Jv941d+4jby4Ue6dB3DMfw5oqiJ19tG1H9yhfVfOAb0pXhd
kfYtZKiM6/oR5zF8lPEq3KnfRNaquN4o3TwGv3vyssEj60hXtSlv7+1juD20
n0yVvo4U16T/M5Q5hhs7YzwPbNYR9zouTgf0Mbi3Kb4g3sYhJI1cjR+Vj2Ey
4J8h/4M15EIH1/kZo2MIPeZx95FYRm7v9G0ZmxxDRQfXP2RgCTG48n5wzOwY
AvzfNwm9WUI+2y2nDFofwzjtkolP2yLCTvtTpM3pGIgnDcm+ui0g1zTuqfwI
PIb5+GWHfyRzyH23PVGxD8fwTFvZqLR8FrH+ksOQH3IMxraKbLEvZ5Fc3Lnh
r5HHUPLDxJNncgYRjRywTvh8DBoURN/l26cRqW6rQN+CY8gxX72y0YFFHh6w
2R4XHYMzc65AbxQWceVsV/MoPgbso6/6Xg+xSLmjOLNz+THwKDLMXp2aRGQZ
DjKs6o5BXe7XBQOSSURBJ7hWfeAYgvguspK0jCIWnrJf2zDH8F1AJz3QahQJ
zFgLejByDLXfBjo0KUeR5i1tzbuTx9DQxGX4VXkEUY29NCG1dAzPPy+/H5sY
QnT6848unxD82zhXxis3iHh/e4HvJDqB4+0ryW+XB5Ds18L7fqQn0ECsU830
aQA5upK/tUB1Am8bnxl3bvQjWZZ5Sz8ZT0DyFxxeLelD8Hs5GFWBE3DZ3Bb/
72UPwtNqM3AqdAJscXXt0UI9iEaSQN8P0RPC/81kg8NCN5KJzulklTwBtzjS
WUqLbkT9Q3bjDHICstmxSgo2XUj6xW8/3+ieAHvV2ym1mx1I+4rlDzH9E8Je
RpPG2NqO7FVdK5p6dAJl4eXmFs/aEVWzrLwHz05g5sN/lR/D25DdvK/pTLYn
cDS8qZxw0oIoozIj831OIOteXOcXjibEmc48/JnfCfjsZtV+b21EvmC5QxkC
TqCikkfg1KUR2Q7IeO8efALXYuYjpLv+Iin/0r0V4k6g9RtJYUV0A7L5LO3F
aC7Bj6V2MiXVOmTnE7mUyX8nIJSm6JJBU4fsd9oczxaewIeiX+WYjlrkFK6H
436eQO9bRoFm7VqEhqO+kKSa4HdAxvBzyxqEd3Jmk7/3BMR0G5dGzCsRflal
3//1n4BFuc/Kk5M/iLDmf/7XMSfg9cnlESrhD3K9xoVJduwEQt/H/6Lv/Y0g
qRQ3NeZP4DMZ6ZDvwwrEwJj/tcvhCZB6n/7Jiy9DnsSHyuGPT8CD3qFQTLEM
Mepap/YhOgUya6n+ru1SxAL963MQ+SmYMYRFPtErRZw4lP8k0p3CPirKVIi7
BAmdfH5ay30KZ5ctLqWt/UAiWLuaFK+dwt2p2/nK+T+QaE3JyDb+U4izkpcZ
tv2BJNQccfSLnEJhcALdl6XvSFZq2N2FW6eQ9bZ//fl2EVJtXBhAq3oKD4x3
fwo9LUAqOl+ojKufQthlltHbc/8hpYggfYHWKRyflZNmdPwPyb/8NUlN/xTk
GeJYmULzkc+Yz8WhpqcQLGhmFTKQi3y8b/Da0OIUGsSk4xTtcpGoUmYQtj4F
PQOrgM/kuUhQbGRrm90pyH52Rm9L5yAumoHYM69PgTacRLil7BviUC3/bdjz
FFxyeLsyHn9DXogS2+V6n4JaSUfWwkkWYkrzZl/p3SlEHmUiiSpZiGazI92H
iFPodmPoOr+TiQihn6Ios04h2+753JR/OnKt8CLpYPYpnOOjZzyVTke42DHN
WXmn4KXf4nprKw1hPdLWVfx+Cnn3HXuXLdMQivIHzwP+nAKdnMrO2uNUhISP
QkKv+hSIHva4u19MRY7j6nd56k5BMUbN8LDkC7L9CvFraDqFaUZhVkxlCoIV
k0wg7T0FUv314OnpJGQ0ZcOot/8Ucu4zw7RjEoI5V8iTgSHoV+LMTiVOQv4t
CxTdHT8FBn/RujvXEpE/3642vV08BQPj5TpR/wSknGUsVGuFUJ/pdnoL9gSk
OOCzNifuFK606q/z/o5Hcs2Yx2u2TyHGgz5K7OAT8rWnJyNy7xR8zYyzXnz+
hKTKRdoY409hOW91/TLqE5JUpCYmfkx4Ct587JbGfkQ+XT27c3p6Cm4ktVU1
gR+R/wPj/dah
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(s\\), \\(_\\)]\\) or \
\\!\\(\\*SubscriptBox[\\(r\\), \\(_\\)]\\) value\"", TraditionalForm], 
     FormBox["\"PDF\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Large,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6394088660345783`*^9, 3.639408943768415*^9}, 
   3.639409017812393*^9, {3.639409078904326*^9, 3.639409112780987*^9}, 
   3.6398533147282553`*^9, {3.6398533883607883`*^9, 3.639853462872102*^9}, 
   3.6398541496992607`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PDFLNormDist", "[", 
   RowBox[{"x_", ",", "\[Mu]n_", ",", "\[Sigma]n_"}], "]"}], ":=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"LogNormalDistribution", "[", 
     RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.639409543631119*^9, 3.639409568954118*^9}, {
  3.63985349413204*^9, 3.6398535106546383`*^9}}],

Cell[TextData[{
 "The following calculation shows that the probability of getting a negative \
number from the mismatch parameters is nearly 0, if we assume that the \
distribution is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"LogNormal", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Mu]", "n"], "=", "0"}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "n"], "=", "0.125"}]}], "]"}], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6394096979418287`*^9, 3.639409762887733*^9}, {
  3.639853541859043*^9, 3.639853555238409*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PDFLNormDist", "[", 
    RowBox[{"#", ",", "0", ",", "0.125"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.01"}], ",", 
    RowBox[{"-", "0.001"}], ",", 
    RowBox[{"-", "0.0001"}], ",", 
    RowBox[{"-", "0.00001"}], ",", 
    RowBox[{"-", "0.000001"}], ",", "0", ",", "0.000001"}], "}"}]}]], "Input",
 
 CellChangeTimes->{{3.6394095720667877`*^9, 3.639409677765882*^9}, {
  3.639853514770475*^9, 3.6398535271046867`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
    "8.43282181235551928590227911767206814182509440212188`15.954589770191005*^\
-2647"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.639409585487496*^9, 3.639409626424913*^9}, 
   3.6394096783052063`*^9, {3.63985351607973*^9, 3.6398535276779633`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Theoretical and numerical analysis of 1 ADC stage", "Subsection",
 CellChangeTimes->{{3.639247183293353*^9, 3.639247192572095*^9}, {
  3.6392584309089117`*^9, 3.6392584340916243`*^9}, {3.639841726733852*^9, 
  3.63984173088969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]n", "=", "0"}], ",", 
       RowBox[{"\[Sigma]n", "=", "0.125"}], ",", 
       RowBox[{"numSamples", "=", 
        SuperscriptBox["10", "5"]}], ",", 
       RowBox[{"numBins", "=", "100"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"distISout", "=", " ", 
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"ISout", "[", 
          RowBox[{
          "ISin", ",", "IRin", ",", "sB1", ",", "sB2", ",", "sS1", ",", "rR2",
            ",", "sS2", ",", "rR3", ",", "sS3", ",", "rR4"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sB1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sB2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR3", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS3", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"distIRout", "=", " ", 
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"IRout", "[", 
          RowBox[{
          "ISin", ",", "IRin", ",", "sB1", ",", "sB2", ",", "rR1", ",", "sS1",
            ",", "rR4", ",", "sS4"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sB1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sB2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"distISoutData", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"distISout", ",", "numSamples"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distISoutEst", "=", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"distISoutData", ",", 
         RowBox[{"LogNormalDistribution", "[", 
          RowBox[{"\[Mu]s", ",", "\[Sigma]s"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distISoutHist", "=", 
       RowBox[{"HistogramDistribution", "[", 
        RowBox[{"distISoutData", ",", "numBins"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"I", "'"}], "m", " ", "throwing", " ", "away", " ", "data", 
         " ", "points", " ", "that", " ", "were", " ", "selected", " ", 
         "that", " ", "result", " ", "in", " ", "IRout", " ", "to", " ", 
         "equal", " ", "0.", "  ", "I", " ", "do", " ", "this", " ", 
         "because", " ", "in", " ", "practice"}], ",", " ", 
        RowBox[{
        "one", " ", "of", " ", "the", " ", "two", " ", "currents", " ", 
         "will", " ", "always", " ", "be", " ", "somewhat", " ", "larger", 
         " ", "than", " ", "the", " ", "other"}], ",", " ", "therefore", ",", 
        " ", 
        RowBox[{
        "there", " ", "should", " ", "always", " ", "be", " ", "some", " ", 
         "current", " ", "going", " ", "out", " ", 
         SubscriptBox["I", "Rout"]}]}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutData", "=", 
       RowBox[{"Select", "[", " ", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"distIRout", ",", "numSamples"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutEst", "=", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"distIRoutData", ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]r", ",", "\[Sigma]r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutHist", "=", 
       RowBox[{"HistogramDistribution", "[", 
        RowBox[{"distIRoutData", ",", "numBins"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pISout", "=", 
       RowBox[{"PDF", "[", 
        RowBox[{"distISoutHist", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pIRout", "=", 
       RowBox[{"PDF", "[", 
        RowBox[{"distIRoutHist", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "Style", "[", 
                "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \(Sout\
\)]]\):\>\"", "]"}], ",", 
               RowBox[{"Mean", "[", "distISoutHist", "]"}], ",", 
               "\"\<\\t\>\"", ",", 
               RowBox[{
               "Style", "[", 
                "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
               RowBox[{"StandardDeviation", "[", "distISoutHist", "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "Style", "[", 
                "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \(Rout\
\)]]\):\>\"", "]"}], ",", 
               RowBox[{"Mean", "[", "distIRoutHist", "]"}], ",", 
               "\"\<\\t\>\"", ",", 
               RowBox[{
               "Style", "[", 
                "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
               RowBox[{"StandardDeviation", "[", "distIRoutHist", "]"}]}], 
              "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Grid", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "Style", "[", 
                  "\"\<\!\(\*SubscriptBox[\(I\), \(Sout\)]\) Estimated \
Distribution:\>\"", "]"}], ",", "distISoutEst"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "Style", "[", 
                  "\"\<\!\(\*SubscriptBox[\(I\), \(Rout\)]\) Estimated \
Distribution:\>\"", "]"}], ",", "distIRoutEst"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
            "}"}], ","}], "*)"}], 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DiscretePlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"pISout", ",", "pIRout"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "xMin", ",", "xMax", ",", "0.01"}], "}"}], 
              ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"Placed", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(I\), \(Sout\)]\)\>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(I\), \(Rout\)]\)\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{
               "{", "\"\<\!\(\*SubscriptBox[\(I\), \(out\)]\)Value\>\"", 
                "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Histogram", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"distISoutData", ",", "distIRoutData"}], "}"}], ",", 
                "50", ",", "\"\<PDF\>\""}], "]"}], ","}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PDF", "[", 
                 RowBox[{"distISoutEst", ",", "x"}], "]"}], ",", 
                RowBox[{"PDF", "[", 
                 RowBox[{"distIRoutEst", ",", "x"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}]}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ISin", ",", "0.333333", ",", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(Sin\)]\)\>\""}], "}"}], ",", "0", ",",
      "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IRin", ",", "0.666666", ",", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(Rin\)]\)\>\""}], "}"}], ",", "0", ",",
      "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xMin", ",", "0", ",", "\"\<\!\(\*SubscriptBox[\(x\), \(min\)]\)\>\""}],
       "}"}], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xMax", ",", "1.0", ",", 
       "\"\<\!\(\*SubscriptBox[\(x\), \(max\)]\)\>\""}], "}"}], ",", "0.5", 
     ",", "5", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.639247196865918*^9, 3.639247287257627*^9}, 
   3.639247325171747*^9, {3.639247394125679*^9, 3.6392473958387947`*^9}, {
   3.639248666018483*^9, 3.639248689158017*^9}, {3.639248727731224*^9, 
   3.63924875100253*^9}, {3.639248812153656*^9, 3.6392488978009653`*^9}, {
   3.63924906300029*^9, 3.6392491157622423`*^9}, {3.6392494358608513`*^9, 
   3.639249509901636*^9}, {3.639249663648559*^9, 3.639249731425128*^9}, {
   3.639249763996098*^9, 3.6392497764710093`*^9}, {3.6392499045337553`*^9, 
   3.639250043667596*^9}, {3.639250077797571*^9, 3.639250112592123*^9}, {
   3.639250189236055*^9, 3.6392502910944357`*^9}, {3.639250364596734*^9, 
   3.63925045929198*^9}, {3.639250531893037*^9, 3.639250587491931*^9}, {
   3.639250896276485*^9, 3.639250913970956*^9}, {3.639251137211268*^9, 
   3.6392511698192387`*^9}, {3.639251365920002*^9, 3.639251386846921*^9}, {
   3.639251458991065*^9, 3.639251493264037*^9}, {3.639251646880183*^9, 
   3.6392516880582113`*^9}, {3.639251720058482*^9, 3.639251721184993*^9}, {
   3.639251804509508*^9, 3.639251832810459*^9}, {3.639251865725794*^9, 
   3.63925191118373*^9}, {3.639251949382854*^9, 3.639252033267108*^9}, {
   3.639252395241897*^9, 3.639252396791625*^9}, {3.639252525729929*^9, 
   3.6392526396599703`*^9}, {3.639252700245564*^9, 3.639252728079897*^9}, {
   3.639252763523654*^9, 3.639252809289115*^9}, {3.639253071815825*^9, 
   3.639253100374259*^9}, {3.639253202629068*^9, 3.639253217050571*^9}, {
   3.639253280946604*^9, 3.639253296448615*^9}, {3.6392533358317957`*^9, 
   3.6392535398444233`*^9}, {3.6392536150674763`*^9, 3.63925361605881*^9}, {
   3.639255490560884*^9, 3.639255490840069*^9}, {3.6392556424919567`*^9, 
   3.639255646920432*^9}, {3.6392557203594227`*^9, 3.639255759182085*^9}, {
   3.639255812929307*^9, 3.639255890550905*^9}, {3.63925593456625*^9, 
   3.639256067532805*^9}, {3.639256099475439*^9, 3.6392561130009108`*^9}, {
   3.6392561841118298`*^9, 3.639256185329632*^9}, {3.639256238595133*^9, 
   3.639256323871175*^9}, {3.6392563875758047`*^9, 3.639256447305532*^9}, {
   3.639256532372808*^9, 3.6392565885350857`*^9}, {3.6392574175465097`*^9, 
   3.639257442286645*^9}, {3.639257798580824*^9, 3.639257853142874*^9}, {
   3.639257887276092*^9, 3.639257932803195*^9}, {3.639408124668084*^9, 
   3.639408125693534*^9}, {3.6398412803405046`*^9, 3.639841344084758*^9}, {
   3.639841382375939*^9, 3.639841399430119*^9}, {3.6398415705037603`*^9, 
   3.639841617939505*^9}, {3.6398542211056433`*^9, 3.639854226688142*^9}, {
   3.639854307241847*^9, 3.6398543118305187`*^9}, {3.639854441583255*^9, 
   3.6398544448502073`*^9}, {3.639854634550652*^9, 3.6398546381022778`*^9}, 
   3.639854679603071*^9, {3.63985473098755*^9, 3.639854776970044*^9}, {
   3.639855053331105*^9, 3.6398550778984118`*^9}, {3.63985513079146*^9, 
   3.639855150078521*^9}, {3.6398551955705433`*^9, 3.639855240801674*^9}, {
   3.6398554221514053`*^9, 3.639855428371028*^9}, {3.639855651675729*^9, 
   3.639855721853009*^9}, {3.639855764559327*^9, 3.63985588584085*^9}, {
   3.6398564200228367`*^9, 3.639856440891271*^9}, {3.6398565738837357`*^9, 
   3.639856575639653*^9}, {3.6398566066198378`*^9, 3.639856623583653*^9}, {
   3.6398566841899033`*^9, 3.639856701018997*^9}, {3.6398592431086617`*^9, 
   3.6398592493984003`*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`IRin$$ = 0.666666, $CellContext`ISin$$ = 
      0.333333, $CellContext`xMax$$ = 1., $CellContext`xMin$$ = 0, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`ISin$$], 0.333333, 
         "\!\(\*SubscriptBox[\(I\), \(Sin\)]\)"}, 0, 1, 0.01}, {{
         Hold[$CellContext`IRin$$], 0.666666, 
         "\!\(\*SubscriptBox[\(I\), \(Rin\)]\)"}, 0, 1, 0.01}, {{
         Hold[$CellContext`xMin$$], 0, 
         "\!\(\*SubscriptBox[\(x\), \(min\)]\)"}, -0.5, 0.5, 0.1}, {{
         Hold[$CellContext`xMax$$], 1., 
         "\!\(\*SubscriptBox[\(x\), \(max\)]\)"}, 0.5, 5, 0.1}}, 
      Typeset`size$$ = {576., {184.5, 192.5}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      True, $CellContext`ISin$653366$$ = 0, $CellContext`IRin$653367$$ = 
      0, $CellContext`xMin$653368$$ = 0, $CellContext`xMax$653369$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, 
        "Variables" :> {$CellContext`IRin$$ = 0.666666, $CellContext`ISin$$ = 
          0.333333, $CellContext`xMax$$ = 1., $CellContext`xMin$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`ISin$$, $CellContext`ISin$653366$$, 0], 
          Hold[$CellContext`IRin$$, $CellContext`IRin$653367$$, 0], 
          Hold[$CellContext`xMin$$, $CellContext`xMin$653368$$, 0], 
          Hold[$CellContext`xMax$$, $CellContext`xMax$653369$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        With[{$CellContext`\[Mu]n$ = 0, $CellContext`\[Sigma]n$ = 
           0.125, $CellContext`numSamples$ = 10^5, $CellContext`numBins$ = 
           100}, $CellContext`distISout = TransformedDistribution[
             $CellContext`ISout[$CellContext`ISin$$, $CellContext`IRin$$, \
$CellContext`sB1, $CellContext`sB2, $CellContext`sS1, $CellContext`rR2, \
$CellContext`sS2, $CellContext`rR3, $CellContext`sS3, $CellContext`rR4], {
              Distributed[$CellContext`sB1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sB2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR3, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS3, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]]}]; $CellContext`distIRout = TransformedDistribution[
             $CellContext`IRout[$CellContext`ISin$$, $CellContext`IRin$$, \
$CellContext`sB1, $CellContext`sB2, $CellContext`rR1, $CellContext`sS1, \
$CellContext`rR4, $CellContext`sS4], {
              Distributed[$CellContext`sB1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sB2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]]}]; $CellContext`distISoutData = Select[
             
             RandomVariate[$CellContext`distISout, $CellContext`numSamples$], \
# > 0& ]; $CellContext`distISoutEst = 
           EstimatedDistribution[$CellContext`distISoutData, 
             
             LogNormalDistribution[$CellContext`\[Mu]s, \
$CellContext`\[Sigma]s]]; $CellContext`distISoutHist = 
           HistogramDistribution[$CellContext`distISoutData, \
$CellContext`numBins$]; $CellContext`distIRoutData = Select[
             
             RandomVariate[$CellContext`distIRout, $CellContext`numSamples$], \
# > 0& ]; $CellContext`distIRoutEst = 
           EstimatedDistribution[$CellContext`distIRoutData, 
             
             NormalDistribution[$CellContext`\[Mu]r, $CellContext`\[Sigma]r]]; \
$CellContext`distIRoutHist = 
           HistogramDistribution[$CellContext`distIRoutData, \
$CellContext`numBins$]; $CellContext`pISout = 
           PDF[$CellContext`distISoutHist, $CellContext`x]; \
$CellContext`pIRout = PDF[$CellContext`distIRoutHist, $CellContext`x]; 
          Grid[{{
              Grid[{{
                 Style[
                 "\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Sout\)]]\):"], 
                 Mean[$CellContext`distISoutHist], "\t", 
                 Style[
                 "\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \(Sout\
\)]]\):"], 
                 StandardDeviation[$CellContext`distISoutHist]}, {
                 Style[
                 "\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Rout\)]]\):"], 
                 Mean[$CellContext`distIRoutHist], "\t", 
                 Style[
                 "\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \(Rout\
\)]]\):"], 
                 StandardDeviation[$CellContext`distIRoutHist]}}]}, {
              Show[
               
               DiscretePlot[{$CellContext`pISout, $CellContext`pIRout}, \
{$CellContext`x, $CellContext`xMin$$, $CellContext`xMax$$, 0.01}, PlotRange -> 
                All, ImageSize -> Large, PlotLegends -> 
                Placed[{
                  "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                   "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, {Right, Top}], 
                AxesLabel -> {"\!\(\*SubscriptBox[\(I\), \(out\)]\)Value"}], 
               Plot[{
                 PDF[$CellContext`distISoutEst, $CellContext`x], 
                 
                 PDF[$CellContext`distIRoutEst, $CellContext`x]}, \
{$CellContext`x, $CellContext`xMin$$, $CellContext`xMax$$}, PlotRange -> All, 
                ImageSize -> Large]]}}]], 
        "Specifications" :> {{{$CellContext`ISin$$, 0.333333, 
            "\!\(\*SubscriptBox[\(I\), \(Sin\)]\)"}, 0, 1, 0.01, 
           Appearance -> {"Labeled", "Open"}}, {{$CellContext`IRin$$, 
            0.666666, "\!\(\*SubscriptBox[\(I\), \(Rin\)]\)"}, 0, 1, 0.01, 
           Appearance -> {"Labeled", "Open"}}, {{$CellContext`xMin$$, 0, 
            "\!\(\*SubscriptBox[\(x\), \(min\)]\)"}, -0.5, 0.5, 0.1, 
           Appearance -> {"Labeled", "Open"}}, {{$CellContext`xMax$$, 1., 
            "\!\(\*SubscriptBox[\(x\), \(max\)]\)"}, 0.5, 5, 0.1, 
           Appearance -> {"Labeled", "Open"}}}, "Options" :> {}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{623., {311., 319.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.639841636773254*^9, 3.639854312811763*^9, 3.6398544462185926`*^9, 
   3.6398546404312077`*^9, 3.639854682998508*^9, {3.63985473566578*^9, 
   3.6398547493046627`*^9}, 3.639854780875321*^9, {3.639855057264566*^9, 
   3.639855080529285*^9}, {3.639855142544677*^9, 3.63985515075378*^9}, {
   3.639855205953685*^9, 3.639855241465138*^9}, {3.6398554306472893`*^9, 
   3.63985543686195*^9}, {3.63985566590173*^9, 3.639855674612801*^9}, 
   3.639855725658883*^9, 3.639855769259777*^9, 3.6398564507995872`*^9, 
   3.639856581537752*^9, {3.639856613602284*^9, 3.639856625593403*^9}, {
   3.639856686792533*^9, 3.639856703073578*^9}, 3.639859746151018*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Theoretical and numerical analysis of 2 ADC stages", "Subsection",
 CellChangeTimes->{{3.639247183293353*^9, 3.639247192572095*^9}, {
  3.6392584309089117`*^9, 3.639258446304584*^9}, {3.639841737245021*^9, 
  3.639841752304678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]n", "=", "0"}], ",", 
       RowBox[{"\[Sigma]n", "=", 
        RowBox[{"0.125", "/", 
         SqrtBox["2"]}]}], ",", 
       RowBox[{"numSamples", "=", 
        SuperscriptBox["10", "5"]}], ",", 
       RowBox[{"numBins", "=", "100"}], ",", 
       RowBox[{"imgSz", "=", "500"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"distISout", "=", " ", 
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"ISout", "[", 
          RowBox[{
          "ISin", ",", "IRin", ",", "sB1", ",", "sB2", ",", "sS1", ",", "rR2",
            ",", "sS2", ",", "rR3", ",", "sS3", ",", "rR4"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sB1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sB2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR3", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS3", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"distIRout", "=", " ", 
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"IRout", "[", 
          RowBox[{
          "ISin", ",", "IRin", ",", "sB1", ",", "sB2", ",", "rR1", ",", "sS1",
            ",", "rR4", ",", "sS4"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sB1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sB2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"distISoutData", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"distISout", ",", "numSamples"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distISoutEst", "=", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"distISoutData", ",", 
         RowBox[{"LogNormalDistribution", "[", 
          RowBox[{"\[Mu]s", ",", "\[Sigma]s"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distISoutHist", "=", 
       RowBox[{"HistogramDistribution", "[", 
        RowBox[{"distISoutData", ",", "numBins"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutData", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"distIRout", ",", "numSamples"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutEst", "=", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"distIRoutData", ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]r", ",", "\[Sigma]r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutHist", "=", 
       RowBox[{"HistogramDistribution", "[", 
        RowBox[{"distIRoutData", ",", "numBins"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pISout", "=", 
       RowBox[{"PDF", "[", 
        RowBox[{"distISoutHist", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pIRout", "=", 
       RowBox[{"PDF", "[", 
        RowBox[{"distIRoutHist", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"distISout2", "=", " ", 
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"ISout", "[", 
          RowBox[{
          "ISin2", ",", "IRin2", ",", "sB1", ",", "sB2", ",", "sS1", ",", 
           "rR2", ",", "sS2", ",", "rR3", ",", "sS3", ",", "rR4"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ISin2", "\[Distributed]", "distISoutEst"}], ",", 
           RowBox[{"IRin2", "\[Distributed]", "distIRoutEst"}], ",", 
           RowBox[{"sB1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sB2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR3", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS3", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"distIRout2", "=", " ", 
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"IRout", "[", 
          RowBox[{
          "ISin2", ",", "IRin2", ",", "sB1", ",", "sB2", ",", "rR1", ",", 
           "sS1", ",", "rR4", ",", "sS4"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ISin2", "\[Distributed]", "distISoutEst"}], ",", 
           RowBox[{"IRin2", "\[Distributed]", "distIRoutEst"}], ",", 
           RowBox[{"sB1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sB2", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS1", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"rR4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
           RowBox[{"sS4", "\[Distributed]", 
            RowBox[{"LogNormalDistribution", "[", 
             RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"distISoutData2", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"distISout2", ",", "numSamples"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"distISoutEst2", "=", " ", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{"distISoutData2", ",", 
           RowBox[{"LogNormalDistribution", "[", 
            RowBox[{"\[Mu]s", ",", "\[Sigma]s"}], "]"}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"distISoutEst2", "=", " ", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"distISoutData2", ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]s", ",", "\[Sigma]s"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distISoutHist2", "=", 
       RowBox[{"HistogramDistribution", "[", 
        RowBox[{"distISoutData2", ",", "numBins"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutData2", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"distIRout2", ",", "numSamples"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutEst2", " ", "=", " ", 
       RowBox[{"EstimatedDistribution", "[", 
        RowBox[{"distIRoutData2", ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"\[Mu]r", ",", "\[Sigma]r"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distIRoutHist2", "=", 
       RowBox[{"HistogramDistribution", "[", 
        RowBox[{"distIRoutData2", ",", "numBins"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pISout2", "=", 
       RowBox[{"PDF", "[", 
        RowBox[{"distISoutHist2", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pIRout2", "=", 
       RowBox[{"PDF", "[", 
        RowBox[{"distIRoutHist2", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"Mean", "[", "distISoutHist", "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"StandardDeviation", "[", "distISoutHist", "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"Mean", "[", "distIRoutHist", "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"StandardDeviation", "[", "distIRoutHist", "]"}]}], 
               "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Grid", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"Mean", "[", "distISoutHist2", "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"StandardDeviation", "[", "distISoutHist2", "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"Mean", "[", "distIRoutHist2", "]"}], ",", 
                "\"\<\\t\>\"", ",", 
                RowBox[{
                "Style", "[", 
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
                RowBox[{"StandardDeviation", "[", "distIRoutHist2", "]"}]}], 
               "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DiscretePlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pISout", ",", "pIRout"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xMin", ",", "xMax", ",", "0.01"}], "}"}], 
               ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "imgSz"}], ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(I\), \(Sout\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(I\), \(Rout\)]\)\>\""}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{
                "{", "\"\<\!\(\*SubscriptBox[\(I\), \(out\)]\)Value\>\"", 
                 "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Histogram", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"distISoutData", ",", "distIRoutData"}], "}"}], ",",
                  "50", ",", "\"\<PDF\>\""}], "]"}], ","}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PDF", "[", 
                  RowBox[{"distISoutEst", ",", "x"}], "]"}], ",", 
                 RowBox[{"PDF", "[", 
                  RowBox[{"distIRoutEst", ",", "x"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "imgSz"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DiscretePlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pISout2", ",", "pIRout2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xMin", ",", "xMax", ",", "0.01"}], "}"}], 
               ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "imgSz"}], ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(I\), \(Sout\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(I\), \(Rout\)]\)\>\""}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{
                "{", "\"\<\!\(\*SubscriptBox[\(I\), \(out\)]\)Value\>\"", 
                 "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Histogram", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"distISoutData", ",", "distIRoutData"}], "}"}], ",",
                  "50", ",", "\"\<PDF\>\""}], "]"}], ","}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PDF", "[", 
                  RowBox[{"distISoutEst2", ",", "x"}], "]"}], ",", 
                 RowBox[{"PDF", "[", 
                  RowBox[{"distIRoutEst2", ",", "x"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "imgSz"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ISin", ",", "0.666666", ",", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(Sin\)]\)\>\""}], "}"}], ",", "0", ",",
      "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IRin", ",", "0.333333", ",", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(Rin\)]\)\>\""}], "}"}], ",", "0", ",",
      "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xMin", ",", "0", ",", "\"\<\!\(\*SubscriptBox[\(x\), \(min\)]\)\>\""}],
       "}"}], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xMax", ",", "1.5", ",", 
       "\"\<\!\(\*SubscriptBox[\(x\), \(max\)]\)\>\""}], "}"}], ",", "0.5", 
     ",", "5", ",", "0.1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Open\>\""}], "}"}]}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.6392583637198477`*^9, 3.639258365674827*^9}, {
   3.6392584866445627`*^9, 3.639258654094709*^9}, {3.639258690622794*^9, 
   3.6392587625917*^9}, {3.6392588001539717`*^9, 3.639258934686365*^9}, {
   3.6392590102840443`*^9, 3.6392590325097303`*^9}, {3.639259289895804*^9, 
   3.639259368000492*^9}, 3.639259429919499*^9, {3.639260363272928*^9, 
   3.639260374159984*^9}, {3.639260425263094*^9, 3.639260449691313*^9}, {
   3.639260543634362*^9, 3.639260544318821*^9}, {3.6392605954488497`*^9, 
   3.639260632888199*^9}, {3.639260681104212*^9, 3.639260688509076*^9}, {
   3.639260736317789*^9, 3.6392607393578672`*^9}, {3.639260802165998*^9, 
   3.639260816358234*^9}, {3.639260848120957*^9, 3.639261047726709*^9}, 
   3.639261109818225*^9, {3.639261151611149*^9, 3.639261164359655*^9}, 
   3.63926122844344*^9, {3.639261303982229*^9, 3.639261304820862*^9}, {
   3.639261335617516*^9, 3.639261351353458*^9}, {3.63926139024855*^9, 
   3.63926153960035*^9}, {3.639261642906928*^9, 3.639261707506942*^9}, {
   3.6392617983883963`*^9, 3.639261850406152*^9}, {3.63926194104121*^9, 
   3.639262004233469*^9}, {3.6392620987792892`*^9, 3.639262099204678*^9}, {
   3.639262178110612*^9, 3.639262190299676*^9}, {3.639262222378422*^9, 
   3.639262222996872*^9}, {3.639262421166651*^9, 3.6392624661778603`*^9}, {
   3.639262519905463*^9, 3.6392626245967827`*^9}, {3.6392626614318743`*^9, 
   3.639262661929408*^9}, {3.639314262684043*^9, 3.639314264358976*^9}, {
   3.639314475428318*^9, 3.639314489708706*^9}, {3.6393145386162786`*^9, 
   3.639314544272676*^9}, {3.639314660302305*^9, 3.6393146679696617`*^9}, {
   3.639330838079504*^9, 3.639330841496338*^9}, 3.6394047782848673`*^9, 
   3.6398415496654654`*^9, {3.6398418447526293`*^9, 3.6398419405267267`*^9}, {
   3.639854227543983*^9, 3.639854241389493*^9}, {3.639854298232036*^9, 
   3.6398543013999357`*^9}, {3.639855929966367*^9, 3.639855999111273*^9}, {
   3.639856055083452*^9, 3.639856072978437*^9}, {3.639856124268639*^9, 
   3.639856163047658*^9}, {3.639856209523563*^9, 3.639856210010482*^9}, {
   3.63985923160658*^9, 3.639859235804586*^9}, {3.6447057011062937`*^9, 
   3.644705724979656*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`IRin$$ = 0.333333, $CellContext`ISin$$ = 
      0.666666, $CellContext`xMax$$ = 1.5, $CellContext`xMin$$ = 0, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`ISin$$], 0.666666, 
         "\!\(\*SubscriptBox[\(I\), \(Sin\)]\)"}, 0, 1, 0.01}, {{
         Hold[$CellContext`IRin$$], 0.333333, 
         "\!\(\*SubscriptBox[\(I\), \(Rin\)]\)"}, 0, 1, 0.01}, {{
         Hold[$CellContext`xMin$$], 0, 
         "\!\(\*SubscriptBox[\(x\), \(min\)]\)"}, -0.5, 0.5, 0.1}, {{
         Hold[$CellContext`xMax$$], 1.5, 
         "\!\(\*SubscriptBox[\(x\), \(max\)]\)"}, 0.5, 5, 0.1}}, 
      Typeset`size$$ = {1009., {159., 167.}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      True, $CellContext`ISin$8937$$ = 0, $CellContext`IRin$8938$$ = 
      0, $CellContext`xMin$8939$$ = 0, $CellContext`xMax$8940$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, 
        "Variables" :> {$CellContext`IRin$$ = 0.333333, $CellContext`ISin$$ = 
          0.666666, $CellContext`xMax$$ = 1.5, $CellContext`xMin$$ = 0}, 
        "ControllerVariables" :> {
          Hold[$CellContext`ISin$$, $CellContext`ISin$8937$$, 0], 
          Hold[$CellContext`IRin$$, $CellContext`IRin$8938$$, 0], 
          Hold[$CellContext`xMin$$, $CellContext`xMin$8939$$, 0], 
          Hold[$CellContext`xMax$$, $CellContext`xMax$8940$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        With[{$CellContext`\[Mu]n$ = 0, $CellContext`\[Sigma]n$ = 
           0.125/2^Rational[1, 2], $CellContext`numSamples$ = 
           10^5, $CellContext`numBins$ = 100, $CellContext`imgSz$ = 
           500}, $CellContext`distISout = TransformedDistribution[
             $CellContext`ISout[$CellContext`ISin$$, $CellContext`IRin$$, \
$CellContext`sB1, $CellContext`sB2, $CellContext`sS1, $CellContext`rR2, \
$CellContext`sS2, $CellContext`rR3, $CellContext`sS3, $CellContext`rR4], {
              Distributed[$CellContext`sB1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sB2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR3, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS3, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]]}]; $CellContext`distIRout = TransformedDistribution[
             $CellContext`IRout[$CellContext`ISin$$, $CellContext`IRin$$, \
$CellContext`sB1, $CellContext`sB2, $CellContext`rR1, $CellContext`sS1, \
$CellContext`rR4, $CellContext`sS4], {
              Distributed[$CellContext`sB1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sB2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]]}]; $CellContext`distISoutData = Select[
             
             RandomVariate[$CellContext`distISout, $CellContext`numSamples$], \
# > 0& ]; $CellContext`distISoutEst = 
           EstimatedDistribution[$CellContext`distISoutData, 
             
             LogNormalDistribution[$CellContext`\[Mu]s, \
$CellContext`\[Sigma]s]]; $CellContext`distISoutHist = 
           HistogramDistribution[$CellContext`distISoutData, \
$CellContext`numBins$]; $CellContext`distIRoutData = Select[
             
             RandomVariate[$CellContext`distIRout, $CellContext`numSamples$], \
# > 0& ]; $CellContext`distIRoutEst = 
           EstimatedDistribution[$CellContext`distIRoutData, 
             
             NormalDistribution[$CellContext`\[Mu]r, $CellContext`\[Sigma]r]]; \
$CellContext`distIRoutHist = 
           HistogramDistribution[$CellContext`distIRoutData, \
$CellContext`numBins$]; $CellContext`pISout = 
           PDF[$CellContext`distISoutHist, $CellContext`x]; \
$CellContext`pIRout = 
           PDF[$CellContext`distIRoutHist, $CellContext`x]; \
$CellContext`distISout2 = TransformedDistribution[
             $CellContext`ISout[$CellContext`ISin2, $CellContext`IRin2, \
$CellContext`sB1, $CellContext`sB2, $CellContext`sS1, $CellContext`rR2, \
$CellContext`sS2, $CellContext`rR3, $CellContext`sS3, $CellContext`rR4], {
              Distributed[$CellContext`ISin2, $CellContext`distISoutEst], 
              Distributed[$CellContext`IRin2, $CellContext`distIRoutEst], 
              Distributed[$CellContext`sB1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sB2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR3, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS3, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]]}]; $CellContext`distIRout2 = TransformedDistribution[
             $CellContext`IRout[$CellContext`ISin2, $CellContext`IRin2, \
$CellContext`sB1, $CellContext`sB2, $CellContext`rR1, $CellContext`sS1, \
$CellContext`rR4, $CellContext`sS4], {
              Distributed[$CellContext`ISin2, $CellContext`distISoutEst], 
              Distributed[$CellContext`IRin2, $CellContext`distIRoutEst], 
              Distributed[$CellContext`sB1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sB2, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS1, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`rR4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]], 
              Distributed[$CellContext`sS4, 
               
               LogNormalDistribution[$CellContext`\[Mu]n$, $CellContext`\
\[Sigma]n$]]}]; $CellContext`distISoutData2 = Select[
             Flatten[
              
              RandomVariate[$CellContext`distISout2, \
$CellContext`numSamples$]], # > 0& ]; $CellContext`distISoutEst2 = 
           EstimatedDistribution[$CellContext`distISoutData2, 
             
             NormalDistribution[$CellContext`\[Mu]s, $CellContext`\[Sigma]s]]; \
$CellContext`distISoutHist2 = 
           HistogramDistribution[$CellContext`distISoutData2, \
$CellContext`numBins$]; $CellContext`distIRoutData2 = Select[
             Flatten[
              
              RandomVariate[$CellContext`distIRout2, \
$CellContext`numSamples$]], # > 0& ]; $CellContext`distIRoutEst2 = 
           EstimatedDistribution[$CellContext`distIRoutData2, 
             
             NormalDistribution[$CellContext`\[Mu]r, $CellContext`\[Sigma]r]]; \
$CellContext`distIRoutHist2 = 
           HistogramDistribution[$CellContext`distIRoutData2, \
$CellContext`numBins$]; $CellContext`pISout2 = 
           PDF[$CellContext`distISoutHist2, $CellContext`x]; \
$CellContext`pIRout2 = PDF[$CellContext`distIRoutHist2, $CellContext`x]; 
          Grid[{{
              Grid[{{
                 Style[
                 "\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Sout\)]]\):"], 
                 Mean[$CellContext`distISoutHist], "\t", 
                 Style[
                 "\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \(Sout\
\)]]\):"], 
                 StandardDeviation[$CellContext`distISoutHist]}, {
                 Style[
                 "\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Rout\)]]\):"], 
                 Mean[$CellContext`distIRoutHist], "\t", 
                 Style[
                 "\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \(Rout\
\)]]\):"], 
                 StandardDeviation[$CellContext`distIRoutHist]}}], 
              Grid[{{
                 Style[
                 "\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Sout\)]]\):"], 
                 Mean[$CellContext`distISoutHist2], "\t", 
                 Style[
                 "\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \(Sout\
\)]]\):"], 
                 StandardDeviation[$CellContext`distISoutHist2]}, {
                 Style[
                 "\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Rout\)]]\):"], 
                 Mean[$CellContext`distIRoutHist2], "\t", 
                 Style[
                 "\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \(Rout\
\)]]\):"], 
                 StandardDeviation[$CellContext`distIRoutHist2]}}]}, {
              Show[
               
               DiscretePlot[{$CellContext`pISout, $CellContext`pIRout}, \
{$CellContext`x, $CellContext`xMin$$, $CellContext`xMax$$, 0.01}, PlotRange -> 
                All, ImageSize -> $CellContext`imgSz$, PlotLegends -> 
                Placed[{
                  "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                   "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, {Right, Top}], 
                AxesLabel -> {"\!\(\*SubscriptBox[\(I\), \(out\)]\)Value"}], 
               Plot[{
                 PDF[$CellContext`distISoutEst, $CellContext`x], 
                 
                 PDF[$CellContext`distIRoutEst, $CellContext`x]}, \
{$CellContext`x, $CellContext`xMin$$, $CellContext`xMax$$}, PlotRange -> All, 
                ImageSize -> $CellContext`imgSz$]], 
              Show[
               
               DiscretePlot[{$CellContext`pISout2, $CellContext`pIRout2}, \
{$CellContext`x, $CellContext`xMin$$, $CellContext`xMax$$, 0.01}, PlotRange -> 
                All, ImageSize -> $CellContext`imgSz$, PlotLegends -> 
                Placed[{
                  "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                   "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, {Right, Top}], 
                AxesLabel -> {"\!\(\*SubscriptBox[\(I\), \(out\)]\)Value"}], 
               Plot[{
                 PDF[$CellContext`distISoutEst2, $CellContext`x], 
                 
                 PDF[$CellContext`distIRoutEst2, $CellContext`x]}, \
{$CellContext`x, $CellContext`xMin$$, $CellContext`xMax$$}, PlotRange -> All, 
                ImageSize -> $CellContext`imgSz$]]}}]], 
        "Specifications" :> {{{$CellContext`ISin$$, 0.666666, 
            "\!\(\*SubscriptBox[\(I\), \(Sin\)]\)"}, 0, 1, 0.01, 
           Appearance -> {"Labeled", "Open"}}, {{$CellContext`IRin$$, 
            0.333333, "\!\(\*SubscriptBox[\(I\), \(Rin\)]\)"}, 0, 1, 0.01, 
           Appearance -> {"Labeled", "Open"}}, {{$CellContext`xMin$$, 0, 
            "\!\(\*SubscriptBox[\(x\), \(min\)]\)"}, -0.5, 0.5, 0.1, 
           Appearance -> {"Labeled", "Open"}}, {{$CellContext`xMax$$, 1.5, 
            "\!\(\*SubscriptBox[\(x\), \(max\)]\)"}, 0.5, 5, 0.1, 
           Appearance -> {"Labeled", "Open"}}}, "Options" :> {}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{1056., {285., 293.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{3.639856164020328*^9, 3.6398562162506*^9, 
  3.639859731162096*^9, 3.644705729637097*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Theoretical and numerical analysis of B ADC stages", "Subsection",
 CellChangeTimes->{{3.639247183293353*^9, 3.639247192572095*^9}, {
  3.6392584309089117`*^9, 3.639258446304584*^9}, {3.6393350826517057`*^9, 
  3.639335082956558*^9}, {3.639841741512331*^9, 3.6398417474846773`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distIoutB", "[", 
   RowBox[{"ISin0_", ",", "IRin0_", ",", "B_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ISin", "=", "ISin0"}], ",", 
      RowBox[{"IRin", "=", "IRin0"}], ",", "curDistIoutB"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Mu]n", "=", "0"}], ",", 
        RowBox[{"\[Sigma]n", "=", "0.0125"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"B", ">", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"curDistIoutB", "=", 
           RowBox[{"distIoutB", "[", 
            RowBox[{"ISin", ",", "IRin", ",", 
             RowBox[{"B", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distISout", "=", " ", 
           RowBox[{"TransformedDistribution", "[", 
            RowBox[{
             RowBox[{"ISout", "[", 
              RowBox[{
              "ISinB", ",", "IRinB", ",", "sB1", ",", "sB2", ",", "sS1", ",", 
               "rR2", ",", "sS2", ",", "rR3", ",", "sS3", ",", "rR4"}], "]"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ISinB", "\[Distributed]", 
                RowBox[{
                "curDistIoutB", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"IRinB", "\[Distributed]", 
                RowBox[{
                "curDistIoutB", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"sB1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sB2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR3", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS3", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR4", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distIRout", "=", " ", 
           RowBox[{"TransformedDistribution", "[", 
            RowBox[{
             RowBox[{"IRout", "[", 
              RowBox[{
              "ISinB", ",", "IRinB", ",", "sB1", ",", "sB2", ",", "rR1", ",", 
               "sS1", ",", "rR4", ",", "sS4"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ISinB", "\[Distributed]", 
                RowBox[{
                "curDistIoutB", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"IRinB", "\[Distributed]", 
                RowBox[{
                "curDistIoutB", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"sB1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sB2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR4", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS4", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
            "]"}]}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"distISout", "=", " ", 
           RowBox[{"TransformedDistribution", "[", 
            RowBox[{
             RowBox[{"ISout", "[", 
              RowBox[{
              "ISin", ",", "IRin", ",", "sB1", ",", "sB2", ",", "sS1", ",", 
               "rR2", ",", "sS2", ",", "rR3", ",", "sS3", ",", "rR4"}], "]"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"sB1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sB2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR3", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS3", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR4", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distIRout", "=", " ", 
           RowBox[{"TransformedDistribution", "[", 
            RowBox[{
             RowBox[{"IRout", "[", 
              RowBox[{
              "ISin", ",", "IRin", ",", "sB1", ",", "sB2", ",", "rR1", ",", 
               "sS1", ",", "rR4", ",", "sS4"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"sB1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sB2", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS1", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"rR4", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}], ",", 
               RowBox[{"sS4", "\[Distributed]", 
                RowBox[{"LogNormalDistribution", "[", 
                 RowBox[{"\[Mu]n", ",", "\[Sigma]n"}], "]"}]}]}], "}"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"distISout", ",", "distIRout"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.639328692381572*^9, 3.639328736762261*^9}, {
   3.639328787131083*^9, 3.639328795500808*^9}, {3.6393288282035723`*^9, 
   3.6393288390743103`*^9}, {3.6393289230931787`*^9, 
   3.6393290208939857`*^9}, {3.639329967822744*^9, 3.639330054140073*^9}, {
   3.639330125038012*^9, 3.639330163727353*^9}, {3.6393302560883617`*^9, 
   3.639330288909267*^9}, {3.639330594620243*^9, 3.6393306203217382`*^9}, {
   3.6393306646760693`*^9, 3.639330717553089*^9}, {3.6393307782588663`*^9, 
   3.6393308070327587`*^9}, {3.6393354209244623`*^9, 3.639335429576425*^9}, {
   3.639335555768093*^9, 3.6393355629961557`*^9}, {3.6393356257465487`*^9, 
   3.639335626987693*^9}, {3.6393358504249372`*^9, 3.639335865568775*^9}, {
   3.639335897462232*^9, 3.639335902939728*^9}, {3.639336506047333*^9, 
   3.639336528156088*^9}, {3.639340067300412*^9, 3.639340097074143*^9}, {
   3.639340133458548*^9, 3.639340134509408*^9}, {3.63934042504578*^9, 
   3.639340442706481*^9}, {3.6393405910429363`*^9, 3.639340603184716*^9}, {
   3.639340647621814*^9, 3.639340654274068*^9}, {3.639340685324828*^9, 
   3.639340792332464*^9}, {3.639340844015626*^9, 3.639340895878545*^9}, {
   3.639341172453043*^9, 3.639341321784018*^9}, {3.639341413929269*^9, 
   3.639341436190398*^9}, {3.639341698717189*^9, 3.639341826716668*^9}, {
   3.6393420173403587`*^9, 3.6393420176862993`*^9}, {3.639342065841915*^9, 
   3.639342077657857*^9}, {3.639344048721395*^9, 3.639344050257634*^9}, 
   3.639408169773466*^9, {3.639841984770924*^9, 3.639842079587039*^9}, {
   3.639854192268873*^9, 3.639854216246419*^9}, {3.639854248768261*^9, 
   3.6398542736994057`*^9}, 3.639863264605986*^9, 3.640009150164446*^9, 
   3.640012306020321*^9, {3.644705911290063*^9, 3.644705913850861*^9}, {
   3.644754913690481*^9, 3.644754914221142*^9}, 3.644755137820333*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getIoutData", "[", 
   RowBox[{"B0_", ",", "ISin0_", ",", "IRin0_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "=", "B0"}], ",", 
      RowBox[{"ISin", "=", "ISin0"}], ",", 
      RowBox[{"IRin", "=", "IRin0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"numSamples", "=", 
          SuperscriptBox["10", "5"]}], ",", 
         RowBox[{"numBins", "=", "100"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Mu]n", "=", "0"}], ",", 
            RowBox[{"\[Sigma]n", "=", "0.125"}], ",", 
            RowBox[{"numSamples", "=", 
             SuperscriptBox["10", "5"]}], ",", 
            RowBox[{"numBins", "=", "100"}], ",", 
            RowBox[{"ISin", "=", "0.666666"}], ",", 
            RowBox[{"IRin", "=", "0.333333"}]}], "}"}], ","}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"distIout", "=", " ", 
         RowBox[{"distIoutB", "[", 
          RowBox[{"ISin", ",", "IRin", ",", "B"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distISout", "=", 
         RowBox[{
         "distIout", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"distIRout", "=", 
         RowBox[{
         "distIout", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"distISoutData", "=", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"distISout", ",", "numSamples"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distISoutHist", "=", 
         RowBox[{"HistogramDistribution", "[", 
          RowBox[{"distISoutData", ",", "numBins"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distISoutEstNorm", "=", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{"distISoutData", ",", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]s", ",", "\[Sigma]s"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distISoutEstLN", "=", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"distISoutData", ",", 
             RowBox[{
              RowBox[{"#", ">", "0"}], "&"}]}], "]"}], ",", 
           RowBox[{"LogNormalDistribution", "[", 
            RowBox[{"\[Mu]s", ",", "\[Sigma]s"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"distIRoutData", "=", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"distIRout", ",", "numSamples"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distIRoutHist", "=", 
         RowBox[{"HistogramDistribution", "[", 
          RowBox[{"distIRoutData", ",", "numBins"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distIRoutEstNorm", "=", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{"distIRoutData", ",", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"\[Mu]r", ",", "\[Sigma]r"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distIRoutEstLN", "=", 
         RowBox[{"EstimatedDistribution", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"distIRoutData", ",", 
             RowBox[{
              RowBox[{"#", ">", "0"}], "&"}]}], "]"}], ",", 
           RowBox[{"LogNormalDistribution", "[", 
            RowBox[{"\[Mu]r", ",", "\[Sigma]r"}], "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "distISoutHist", ",", "distIRoutHist", ",", "distISoutEstNorm", ",", 
       "distIRoutEstNorm", ",", "distISoutData", ",", "distIRoutData", ",", 
       " ", "distISoutEstLN", ",", " ", "distIRoutEstLN"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellOpen->True,
 InitializationCell->True,
 CellChangeTimes->{{3.639339799992074*^9, 3.639339852514988*^9}, {
   3.639339905459176*^9, 3.639339912775689*^9}, {3.639341875079124*^9, 
   3.63934187810187*^9}, {3.6393419227875032`*^9, 3.639341956985384*^9}, {
   3.639342045142874*^9, 3.639342045718155*^9}, {3.6393422670584993`*^9, 
   3.63934227634906*^9}, {3.639342314472425*^9, 3.639342368388315*^9}, {
   3.63934307218889*^9, 3.639343082182877*^9}, {3.6393431698549232`*^9, 
   3.6393431704675617`*^9}, {3.639343204793312*^9, 3.639343218888489*^9}, {
   3.639343349503934*^9, 3.6393433887445087`*^9}, {3.6393434991692753`*^9, 
   3.639343516964118*^9}, 3.639343710217767*^9, {3.639344142446945*^9, 
   3.639344281306202*^9}, {3.639344575634212*^9, 3.639344584842391*^9}, {
   3.639345129251173*^9, 3.639345136699205*^9}, 3.639345445925808*^9, {
   3.63940675046951*^9, 3.63940675085741*^9}, {3.639407820270048*^9, 
   3.639407820597739*^9}, {3.639407877822794*^9, 3.639407878128789*^9}, {
   3.639407908386478*^9, 3.639407908713554*^9}, {3.639854277418895*^9, 
   3.639854281201995*^9}, {3.639856730829599*^9, 3.63985674824753*^9}, {
   3.639856949204818*^9, 3.639856952859489*^9}, {3.6398571399572153`*^9, 
   3.6398572021303043`*^9}, {3.6398584641885*^9, 3.6398584646233053`*^9}, {
   3.639859201081485*^9, 3.6398592151856117`*^9}, {3.6398608572153463`*^9, 
   3.639860915099321*^9}, {3.639860984433063*^9, 3.639860987623991*^9}, {
   3.639861017960885*^9, 3.639861056266396*^9}, {3.639861094663467*^9, 
   3.639861117185644*^9}, {3.639861769704277*^9, 3.639861823580002*^9}, 
   3.639863095821069*^9, 3.639863283616077*^9, 3.6399351814237328`*^9, {
   3.640011753507262*^9, 3.6400117868089113`*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"numB", "=", "4"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ISin0", "=", 
     RowBox[{"0.5", "-", 
      FractionBox["1", 
       SuperscriptBox["2", "numB"]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IRin0", "=", 
     RowBox[{"0.5", "+", 
      FractionBox["1", 
       SuperscriptBox["2", "numB"]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IOutTable", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getIoutData", "[", 
        RowBox[{"b", ",", "ISin0", ",", "IRin0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1", ",", "numB"}], "}"}]}], "]"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6398582436909647`*^9, 3.639858243897917*^9}, {
   3.639858472640415*^9, 3.639858472975213*^9}, {3.63986183317271*^9, 
   3.639861879696764*^9}, {3.639864276050756*^9, 3.6398642766455603`*^9}, {
   3.639935110312833*^9, 3.639935111300022*^9}, {3.6399501072038116`*^9, 
   3.639950107902158*^9}, 3.640011522657214*^9, 3.640016111649146*^9, {
   3.644705762164394*^9, 3.644705762708104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"numB", "=", "4"}], ",", 
     RowBox[{"xMin", "=", "0.0"}], ",", 
     RowBox[{"xMax", "=", "1.5"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distPlots", "=", 
     RowBox[{"Reap", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"distISoutHist", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distIRoutHist", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distISoutEstNorm", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distIRoutEstNorm", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distISoutData", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distIRoutData", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "6", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distISoutEstLN", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "7", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"distIRoutEstLN", "=", 
           RowBox[{
            RowBox[{
            "IOutTable", "\[LeftDoubleBracket]", "#", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "8", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"DiscretePlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PDF", "[", 
                RowBox[{"distISoutHist", ",", "x"}], "]"}], ",", 
               RowBox[{"PDF", "[", 
                RowBox[{"distIRoutHist", ",", "x"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "xMin", ",", "xMax", ",", "0.01"}], "}"}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(I\), \(Sout\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(I\), \(Rout\)]\)\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(I\), \(out\)]\)Value\>\"", ",", 
                "\"\<PDF\>\""}], "}"}]}], ",", " ", 
             RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"p2", "=", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PDF", "[", 
                RowBox[{"distISoutEstNorm", ",", "x"}], "]"}], ",", 
               RowBox[{"PDF", "[", 
                RowBox[{"distIRoutEstNorm", ",", "x"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"p3", "=", 
           RowBox[{"Histogram", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"distIRoutData", ",", "distIRoutData"}], "}"}], ",", 
             "50", ",", "\"\<PDF\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"p4", "=", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PDF", "[", 
                RowBox[{"distISoutEstLN", ",", "x"}], "]"}], ",", 
               RowBox[{"PDF", "[", 
                RowBox[{"distIRoutEstLN", ",", "x"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", "\[IndentingNewLine]", 
           RowBox[{"Grid", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"Grid", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
                    RowBox[{"Mean", "[", "distISoutHist", "]"}], ",", 
                    "\"\<\\t\>\"", ",", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Sout\)]]\):\>\"", "]"}], ",", 
                    RowBox[{
                    "StandardDeviation", "[", "distISoutHist", "]"}]}], "}"}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Mu]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
                    RowBox[{"Mean", "[", "distIRoutHist", "]"}], ",", 
                    "\"\<\\t\>\"", ",", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), SubscriptBox[\(I\), \
\(Rout\)]]\):\>\"", "]"}], ",", 
                    RowBox[{
                    "StandardDeviation", "[", "distIRoutHist", "]"}]}], 
                   "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
               "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"Show", "[", 
                RowBox[{"{", "p1", 
                 RowBox[{"(*", 
                  RowBox[{",", "p2", ",", "p4"}], "*)"}], "}"}], "]"}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
            "]"}], "]"}]}], "\[IndentingNewLine]", ")"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "numB"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "Style", "[", "\"\<\!\(\*SubscriptBox[\(I\), \(Sin\)]\):\>\"", 
           "]"}], ",", "ISin0", ",", "\"\<\\t\>\"", ",", 
          RowBox[{
          "Style", "[", "\"\<\!\(\*SubscriptBox[\(I\), \(Rin\)]\):\>\"", 
           "]"}], ",", "IRin0"}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{
            "distPlots", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "2"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.639343509143219*^9, 3.6393435345384283`*^9}, {
   3.6393436076792088`*^9, 3.639343669513245*^9}, {3.639343714992893*^9, 
   3.639343825834916*^9}, {3.6393439011811666`*^9, 3.63934392421929*^9}, {
   3.639344323070303*^9, 3.639344324612274*^9}, {3.639344898680389*^9, 
   3.639344922762781*^9}, {3.639345012067357*^9, 3.639345121833099*^9}, {
   3.639345214149702*^9, 3.6393454512363157`*^9}, {3.639345490678227*^9, 
   3.6393455283952312`*^9}, {3.639406763961068*^9, 3.639406764826641*^9}, {
   3.639842311234543*^9, 3.639842321800563*^9}, {3.639846813693769*^9, 
   3.639846820677041*^9}, {3.6398572098098497`*^9, 3.639857276228136*^9}, 
   3.6398574834668503`*^9, {3.63985787500657*^9, 3.639857892274603*^9}, {
   3.639858206698389*^9, 3.639858211398047*^9}, {3.639858258142441*^9, 
   3.639858258738945*^9}, {3.639861152026011*^9, 3.6398611797090197`*^9}, {
   3.639861211856812*^9, 3.6398612689686213`*^9}, 3.639861912709015*^9, {
   3.63986428003192*^9, 3.63986428114082*^9}, {3.639935113893866*^9, 
   3.639935114675228*^9}, {3.639950102156867*^9, 3.639950146775298*^9}, {
   3.6400117000425177`*^9, 3.640011700673151*^9}, 3.640011812725314*^9, {
   3.640012524673081*^9, 3.6400125541936083`*^9}, {3.6400125919785557`*^9, 
   3.640012593577593*^9}, {3.640016115119914*^9, 3.640016119374144*^9}, {
   3.64470576780788*^9, 3.644705768401355*^9}, {3.6447548819558992`*^9, 
   3.644754883445413*^9}, {3.644755048303276*^9, 3.6447550842996893`*^9}, {
   3.644755368317926*^9, 3.644755371468802*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sin\\)]\\):\"\>", ",", 
        "0.4375`", ",", "\<\"\\t\"\>", 
        ",", "\<\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rin\\)]\\):\"\>", ",", 
        "0.5625`"}], "}"}]},
     {
      GraphicsBox[{{}, {{InsetBox[
           TagBox[GridBox[{
              {
               TagBox[GridBox[{
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Sout\\)]]\\):\"\>", 
                   "0.8753916400000007`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Sout\\)]]\
\\):\"\>", "0.02051909431342864`"},
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Rout\\)]]\\):\"\>", 
                   "0.12494138000000005`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Rout\\)]]\
\\):\"\>", "0.007727910262737625`"}
                 },
                 AutoDelete->False,
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]},
              {
               TagBox[
                FormBox[
                 GraphicsBox[{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03,
                     0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 
                    0.}, {0.13, 0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {
                    0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 
                    0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.005}, {0.81, 0.085}, {
                    0.8200000000000001, 0.525}, {0.8300000000000001, 1.75}, {
                    0.84, 4.86}, {0.85, 9.67}, {0.86, 15.775}, {0.87, 
                    19.125}, {0.88, 18.42}, {0.89, 14.46}, {0.9, 8.88}, {0.91,
                     4.37}, {0.92, 1.685}, {0.93, 0.59}, {0.9400000000000001, 
                    0.18}, {0.9500000000000001, 0.06}, {0.96, 0.005}, {0.97, 
                    0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {1.01, 0.}, {1.02, 
                    0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 0.}, {1.06, 0.}, {
                    1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1, 0.}, {1.11, 
                    0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03,
                     0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.01}, {0.1, 0.52}, {0.11, 8.99}, {0.12,
                     43.42}, {0.13, 41.37}, {0.14, 6.07}, {0.15, 0.14}, {0.16,
                     0.}, {0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {
                    0.21, 0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 
                    0.}, {0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3,
                     0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxllDtoFFEUhlft0omxjQabCIJgar3TaZs0NlsJmsLCCFaxNZ0QC0G0sEka
mwVBMYJINAYfJKJGnahRZ3bz2PfO7s5DxMKdObvn4ueFJXybufee839ndvTc
pcnz+3K53J7e51bvszf3/7o6XDjtz1wz//JN5cWR2drE4l38f0H5zu103cPz
BeX6RPrNfex/oDzkzk+fHHqE8x4rH83PPY/GnuD8p8oLvd3u/BLue6Y8nq1l
3P9CeTka692wgnpeKk9mF75Cfa+V/Zn0wDeod1X5clre9Brqf6ss6x36sXwm
u+A9+rOc3paf+4B+15Wzdtx19P9R+VBazsgn5GF56kK6PiMfVzk9bbjgIq8N
5Tg9LtpAfl+UT2UHfkWelrPyZr8h303ltdV0bSLv78oHswJ/IH/L2XH5n/Dh
oR8Pfjz058GXj359+PPRfxE+i8ijCL8l5FOC7xLy2oL/LeRnWeZhG3lalvnY
Rr47mJcd5G1Z5mcX+VuWedqFjzJ8lOGjDB9l+KjAR8VIDleM+KgY6euhER9V
I7l45kbmo9rf/8eIj6qRXA444qNmsrbOHnHER032Xz/uiI+a7D887oiPutx7
8YQjdfS5dsyRe+v9ekYd8dHo17vfkXsbRvr83X+uYQZzIj6aZvA7Jj6aZvC7
LH+b2r8814KPFny04CPAfAXwE2DeAvgKMH8B/AWYxzZ8tjGfbfhtY14tS85t
zG8H72MH82xZ3s8O5tuyeOhg3rt4f7vI27LMTxf5W5Z56sJHCB8hfITwEcJH
CB8hfITwEcFHBB8RfETwEcFHBB8xfMTwEcNHDB8xfMTwkcBHAh8JfCTwkcBH
Ah+/lP8C/8GX9A==
                    "]], {}, {}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxlkztMFFEUhlftqDGxwtBhba2zhUZbqLcyUUuxhVZqLEiIFjbQ2Kwx0YiJ
MSoaHwGDog4o6Mwuj33vzO48jJVz7wnnxs+bTPHN495z/u/M+JUbU1dPlEql
Y8W1WFzHS/+v2dHqpXDmlvcvLyivjM21J1fu4fmy8t07Zt3H+1XlzqS58xDf
P1Ie8Zemz4088Y7qkP2eesvFXX8p8M5U5l+lE8/k+Z/xsuz/3MsmigePL5bl
vReeeavy4EJZznvpXQ5nii9Olc/ateod3ZdzXuv5q6nZ6A3qeas8ZQ98h37f
K9tjwg/KUu+a8k1T3vQ68vmoLGtDWfpxLH18Qp6Obd/zn5Wl301l246/ify/
KJ825Yx9RR6Or18z6xvy8ZXNbqNVH3ltKVtP6Rby21Y+bzf8jjwd2/LmfiDf
HeX1NbN2kPeu8klb4E/k79huV/kFHwH6CeAnQH8BfIXoN4S/EP3X4LOGPGrw
W0c+dfiuI689+N9Dfo5lHvaRp2OZj33ke4B5OUDejmV+DpG/Y5mnQ/howEcD
Phrw0YCPJnw04aMJHy3l29ZHCz5a8NGGjzZ8tOGjAx8d+OjARxc+uvDRhY8e
fPTgowcfffjow0cfPiL0E8FPhP4i+IrQbwR/EfqP4TNGHjH8xsgnhu8YeQ3g
f4D8HMv/OUCejmU+Bsh3iHkZIm/HMj9D5O9Y5mkIHwl8JPCRwEcCHwl8JPCR
wEcKHyl8pPCRwkcKHyl8ZPCRwUcGHxl8ZPCRwUcOHzl85PCRw0cOHzl8/Fb+
C/6VdUI=
                    "]], {}, {}}}}, InsetBox[
                    
                    TemplateBox[{
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sout\\)]\\)\"",
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rout\\)]\\)\""},
                    "PointLegend",
                    DisplayFunction->(FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ),
                    Editable->True,
                    InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                    "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
                    BaseStyle->{FontSize -> Larger},
                    FormatType->StandardForm]},
                  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                  Axes->True,
                  AxesLabel->{
                    FormBox[
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(out\\)]\\)Value\"", 
                    TraditionalForm], 
                    FormBox["\"PDF\"", TraditionalForm]},
                  AxesOrigin->{0, 0},
                  DisplayFunction->Identity,
                  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                  GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                  ImageSize->Full,
                  
                  Method->{
                   "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]},
                  PlotRange->{{0., 1.5}, {0., 43.42}},
                  PlotRangePadding->{{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}},
                  Ticks->{Automatic, Automatic}],
                 TraditionalForm],
                InterpretTemplate[Legended[
                  Graphics[{{{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 0.}, {0.13,
                     0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {0.17, 0.}, {
                    0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 0.}, {0.22, 
                    0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {0.26, 0.}, {
                    0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 0.}, {0.31, 
                    0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.005}, {0.81, 0.085}, {
                    0.8200000000000001, 0.525}, {0.8300000000000001, 1.75}, {
                    0.84, 4.86}, {0.85, 9.67}, {0.86, 15.775}, {0.87, 
                    19.125}, {0.88, 18.42}, {0.89, 14.46}, {0.9, 8.88}, {0.91,
                     4.37}, {0.92, 1.685}, {0.93, 0.59}, {0.9400000000000001, 
                    0.18}, {0.9500000000000001, 0.06}, {0.96, 0.005}, {0.97, 
                    0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {1.01, 0.}, {1.02, 
                    0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 0.}, {1.06, 0.}, {
                    1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1, 0.}, {1.11, 
                    0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}}, {
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.01}, {0.1, 0.52}, {0.11, 8.99}, {0.12, 
                    43.42}, {0.13, 41.37}, {0.14, 6.07}, {0.15, 0.14}, {0.16, 
                    0.}, {0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21,
                     0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}}}, {{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxllDtoFFEUhlft0omxjQabCIJgar3TaZs0NlsJmsLCCFaxNZ0QC0G0sEka
mwVBMYJINAYfJKJGnahRZ3bz2PfO7s5DxMKdObvn4ueFJXybufee839ndvTc
pcnz+3K53J7e51bvszf3/7o6XDjtz1wz//JN5cWR2drE4l38f0H5zu103cPz
BeX6RPrNfex/oDzkzk+fHHqE8x4rH83PPY/GnuD8p8oLvd3u/BLue6Y8nq1l
3P9CeTka692wgnpeKk9mF75Cfa+V/Zn0wDeod1X5clre9Brqf6ss6x36sXwm
u+A9+rOc3paf+4B+15Wzdtx19P9R+VBazsgn5GF56kK6PiMfVzk9bbjgIq8N
5Tg9LtpAfl+UT2UHfkWelrPyZr8h303ltdV0bSLv78oHswJ/IH/L2XH5n/Dh
oR8Pfjz058GXj359+PPRfxE+i8ijCL8l5FOC7xLy2oL/LeRnWeZhG3lalvnY
Rr47mJcd5G1Z5mcX+VuWedqFjzJ8lOGjDB9l+KjAR8VIDleM+KgY6euhER9V
I7l45kbmo9rf/8eIj6qRXA444qNmsrbOHnHER032Xz/uiI+a7D887oiPutx7
8YQjdfS5dsyRe+v9ekYd8dHo17vfkXsbRvr83X+uYQZzIj6aZvA7Jj6aZvC7
LH+b2r8814KPFny04CPAfAXwE2DeAvgKMH8B/AWYxzZ8tjGfbfhtY14tS85t
zG8H72MH82xZ3s8O5tuyeOhg3rt4f7vI27LMTxf5W5Z56sJHCB8hfITwEcJH
CB8hfITwEcFHBB8RfETwEcFHBB8xfMTwEcNHDB8xfMTwkcBHAh8JfCTwkcBH
Ah+/lP8C/8GX9A==
                    "]], Null, {}, {}}}}, {{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxlkztMFFEUhlftqDGxwtBhba2zhUZbqLcyUUuxhVZqLEiIFjbQ2Kwx0YiJ
MSoaHwGDog4o6Mwuj33vzO48jJVz7wnnxs+bTPHN495z/u/M+JUbU1dPlEql
Y8W1WFzHS/+v2dHqpXDmlvcvLyivjM21J1fu4fmy8t07Zt3H+1XlzqS58xDf
P1Ie8Zemz4088Y7qkP2eesvFXX8p8M5U5l+lE8/k+Z/xsuz/3MsmigePL5bl
vReeeavy4EJZznvpXQ5nii9Olc/ateod3ZdzXuv5q6nZ6A3qeas8ZQ98h37f
K9tjwg/KUu+a8k1T3vQ68vmoLGtDWfpxLH18Qp6Obd/zn5Wl301l246/ify/
KJ825Yx9RR6Or18z6xvy8ZXNbqNVH3ltKVtP6Rby21Y+bzf8jjwd2/LmfiDf
HeX1NbN2kPeu8klb4E/k79huV/kFHwH6CeAnQH8BfIXoN4S/EP3X4LOGPGrw
W0c+dfiuI689+N9Dfo5lHvaRp2OZj33ke4B5OUDejmV+DpG/Y5mnQ/howEcD
Phrw0YCPJnw04aMJHy3l29ZHCz5a8NGGjzZ8tOGjAx8d+OjARxc+uvDRhY8e
fPTgowcfffjow0cfPiL0E8FPhP4i+IrQbwR/EfqP4TNGHjH8xsgnhu8YeQ3g
f4D8HMv/OUCejmU+Bsh3iHkZIm/HMj9D5O9Y5mkIHwl8JPCRwEcCHwl8JPCR
wEcKHyl8pPCRwkcKHyl8ZPCRwUcGHxl8ZPCRwUcOHzl85PCRw0cOHzl8/Fb+
C/6VdUI=
                    "]], Null, {}, {}}}}}}}, {
                   AspectRatio -> GoldenRatio^(-1), Axes -> True, 
                    AxesLabel -> {
                    "\!\(\*SubscriptBox[\(I\), \(out\)]\)Value", "PDF"}, 
                    AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> Full, 
                    Method -> {
                    "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]}, 
                    PlotRange -> {{0., 1.5}, {0., 43.42}}, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                  Placed[
                   Unevaluated[
                    PointLegend[{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, {
                    "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                    "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, 
                    Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
                    "Column", 
                    LegendMarkers -> {{None, Automatic}, {
                    None, Automatic}}]], {Right, Top}, Identity]]& ],
                AutoDelete->True,
                Editable->True,
                SelectWithContents->False,
                Selectable->True]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"], {192., -192.}, {Center, Center}, {360., 360.}], 
          InsetBox[
           TagBox[GridBox[{
              {
               TagBox[GridBox[{
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Sout\\)]]\\):\"\>", 
                   "0.24990346000000002`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Sout\\)]]\
\\):\"\>", "0.015936045725390303`"},
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Rout\\)]]\\):\"\>", 
                   "0.7504358000000003`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Rout\\)]]\
\\):\"\>", "0.02685980289751084`"}
                 },
                 AutoDelete->False,
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]},
              {
               TagBox[
                FormBox[
                 GraphicsBox[{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03,
                     0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 
                    0.}, {0.13, 0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {
                    0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.22}, {0.21, 
                    0.99}, {0.22, 4.95}, {0.23, 11.56}, {0.24, 21.12}, {0.25, 
                    24.6}, {0.26, 20.33}, {0.27, 10.87}, {0.28, 4.09}, {0.29, 
                    1.04}, {0.3, 0.18}, {0.31, 0.01}, {0.32, 0.}, {0.33, 
                    0.}, {0.34, 0.}, {0.35000000000000003`, 0.}, {0.36, 0.}, {
                    0.37, 0.}, {0.38, 0.}, {0.39, 0.}, {0.4, 0.}, {
                    0.41000000000000003`, 0.}, {0.42, 0.}, {0.43, 0.}, {0.44, 
                    0.}, {0.45, 0.}, {0.46, 0.}, {0.47000000000000003`, 0.}, {
                    0.48, 0.}, {0.49, 0.}, {0.5, 0.}, {0.51, 0.}, {0.52, 
                    0.}, {0.53, 0.}, {0.54, 0.}, {0.55, 0.}, {0.56, 0.}, {
                    0.5700000000000001, 0.}, {0.58, 0.}, {0.59, 0.}, {0.6, 
                    0.}, {0.61, 0.}, {0.62, 0.}, {0.63, 0.}, {0.64, 0.}, {
                    0.65, 0.}, {0.66, 0.}, {0.67, 0.}, {0.68, 0.}, {
                    0.6900000000000001, 0.}, {0.7000000000000001, 0.}, {0.71, 
                    0.}, {0.72, 0.}, {0.73, 0.}, {0.74, 0.}, {0.75, 0.}, {
                    0.76, 0.}, {0.77, 0.}, {0.78, 0.}, {0.79, 0.}, {0.8, 
                    0.}, {0.81, 0.}, {0.8200000000000001, 0.}, {
                    0.8300000000000001, 0.}, {0.84, 0.}, {0.85, 0.}, {0.86, 
                    0.}, {0.87, 0.}, {0.88, 0.}, {0.89, 0.}, {0.9, 0.}, {0.91,
                     0.}, {0.92, 0.}, {0.93, 0.}, {0.9400000000000001, 0.}, {
                    0.9500000000000001, 0.}, {0.96, 0.}, {0.97, 0.}, {0.98, 
                    0.}, {0.99, 0.}, {1., 0.}, {1.01, 0.}, {1.02, 0.}, {1.03, 
                    0.}, {1.04, 0.}, {1.05, 0.}, {1.06, 0.}, {1.07, 0.}, {
                    1.08, 0.}, {1.09, 0.}, {1.1, 0.}, {1.11, 0.}, {1.12, 
                    0.}, {1.1300000000000001`, 0.}, {1.1400000000000001`, 
                    0.}, {1.1500000000000001`, 0.}, {1.16, 0.}, {1.17, 0.}, {
                    1.18, 0.}, {1.19, 0.}, {1.2, 0.}, {1.21, 0.}, {1.22, 
                    0.}, {1.23, 0.}, {1.24, 0.}, {1.25, 0.}, {1.26, 0.}, {
                    1.27, 0.}, {1.28, 0.}, {1.29, 0.}, {1.3, 0.}, {1.31, 
                    0.}, {1.32, 0.}, {1.33, 0.}, {1.34, 0.}, {1.35, 0.}, {
                    1.36, 0.}, {1.37, 0.}, {1.3800000000000001`, 0.}, {
                    1.3900000000000001`, 0.}, {1.4000000000000001`, 0.}, {
                    1.41, 0.}, {1.42, 0.}, {1.43, 0.}, {1.44, 0.}, {1.45, 
                    0.}, {1.46, 0.}, {1.47, 0.}, {1.48, 0.}, {1.49, 0.}, {1.5,
                     0.}, {1.5, 0}, {1.49, 0}, {1.48, 0}, {1.47, 0}, {
                    1.46, 0}, {1.45, 0}, {1.44, 0}, {1.43, 0}, {1.42, 0}, {
                    1.41, 0}, {1.4000000000000001`, 0}, {
                    1.3900000000000001`, 0}, {1.3800000000000001`, 0}, {
                    1.37, 0}, {1.36, 0}, {1.35, 0}, {1.34, 0}, {1.33, 0}, {
                    1.32, 0}, {1.31, 0}, {1.3, 0}, {1.29, 0}, {1.28, 0}, {
                    1.27, 0}, {1.26, 0}, {1.25, 0}, {1.24, 0}, {1.23, 0}, {
                    1.22, 0}, {1.21, 0}, {1.2, 0}, {1.19, 0}, {1.18, 0}, {
                    1.17, 0}, {1.16, 0}, {1.1500000000000001`, 0}, {
                    1.1400000000000001`, 0}, {1.1300000000000001`, 0}, {
                    1.12, 0}, {1.11, 0}, {1.1, 0}, {1.09, 0}, {1.08, 0}, {
                    1.07, 0}, {1.06, 0}, {1.05, 0}, {1.04, 0}, {1.03, 0}, {
                    1.02, 0}, {1.01, 0}, {1., 0}, {0.99, 0}, {0.98, 0}, {
                    0.97, 0}, {0.96, 0}, {0.9500000000000001, 0}, {
                    0.9400000000000001, 0}, {0.93, 0}, {0.92, 0}, {0.91, 0}, {
                    0.9, 0}, {0.89, 0}, {0.88, 0}, {0.87, 0}, {0.86, 0}, {
                    0.85, 0}, {0.84, 0}, {0.8300000000000001, 0}, {
                    0.8200000000000001, 0}, {0.81, 0}, {0.8, 0}, {0.79, 0}, {
                    0.78, 0}, {0.77, 0}, {0.76, 0}, {0.75, 0}, {0.74, 0}, {
                    0.73, 0}, {0.72, 0}, {0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], 
                    PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 
                    0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 
                    0.}, {0.13, 0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {
                    0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 
                    0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.055}, {
                    0.67, 0.15}, {0.68, 0.46}, {0.6900000000000001, 1.12}, {
                    0.7000000000000001, 2.745}, {0.71, 5.445}, {0.72, 8.25}, {
                    0.73, 11.87}, {0.74, 13.815}, {0.75, 14.86}, {0.76, 
                    14.145}, {0.77, 10.8}, {0.78, 7.54}, {0.79, 4.395}, {0.8, 
                    2.795}, {0.81, 1.22}, {0.8200000000000001, 0.605}, {
                    0.8300000000000001, 0.155}, {0.84, 0.07}, {0.85, 0.05}, {
                    0.86, 0.005}, {0.87, 0.}, {0.88, 0.}, {0.89, 0.}, {0.9, 
                    0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 0.}, {
                    0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {0.96, 
                    0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {1.01, 
                    0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 0.}, {
                    1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1, 
                    0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxlkztMFFEUhlftqEzEFmNhxFpJbPROpy3EkspELcUWWqmxMDFa2EBjs4mJ
iZioUdH4CBgQcPC9w3PfO7M7D0v33iPnxs+bbCbfwpx7zv+dPX75+tiVQ6VS
6UD/c6f/OVj6/0wNli9EkzfNv3xbeX5oujE6fx9/n1O+d9eeB/j/snJz1H7z
EO8/Uh4IZyfODTxGvSfKp8ZnXmXDT1H/ufJc/+1w9gXue6l82p0F3P9aeSEb
7t/wBv28VR5zF75Df++N9LVooklb8IOxVQfLHf1+adGeI8EN297Ekjlm2x46
GUj/H//ySCBVl43UPRvIPMvGtXnpTHDRXbBiXJlnJwKZb8W4a8YPB+4x88nI
e7GReVfN/hzuEa6afc/yXNN5pI915OH52lV7PiOfUFnmDpHXhnJuy2UbyO+L
8nlX8Kuy5OnZtTf9DfvwXVly9ix5/1A+6hr8if3xLDn+UpZTwTwV7FsF83kW
XxHmjbCfEebfVBafm8jDs/jdQj6eRc8W8trG/m8jP8+yDzvI07Psxw7y3cW+
7CJvz7I/e8jfs+zTHnxU4aMKH1X4qMJHDT5q8FGDj7ryLeejDh91+GjARwM+
GvDRhI8mfDThowUfLfhowUcbPtrw0YaPDnx04KMDHzHmieEnxnwxfMWYN4a/
GPMn8JkgjwR+E+STwHeCvLrw30V+nuX32UWenmU/usi3h33pIW/Psj895O9Z
9qkHHyl8pPCRwkcKHyl8pPCRwkcGHxl8ZPCRwUcGHxl85PCRw0cOHzl85PCR
w0cBHwV8FPBRwEcBHwV8/Fb+A+mFhvA=
                    "]], {}, {}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxllD1oU1EYhqOiQzehXaMOYkWdnPWcTXFr50yCOlrBqS4Odq6DIDoI0i6C
BATBClXUKFVpRa2aqlVzk+Y/bW+S++No7vlyz6GPB+7w5uZ8P+/zfffQ+cuT
F/ZkMpldg+f24Nmd+f9cG82f8aZvqJ36ltUL2Zn2xMI9vJ+3+u6d5DzA//NW
dyaSXx7h/mOrR4pzU6dGniDeU6uP5mZfheOLiP/c6vnB7eLcC+R7afVJcwrI
/9rqQjg+yPAG9SxZPWkSvkV976z2ppOA71HvstVXkvKmVlD/B6vlfEQ/Tp81
CT6hP6eTbLnZz+h31WrTTnEV/X+x+kBSTvYr/HD60sXkfIM/RauTaKP5Ivxa
szpKwoVr8O+71adNwB/w02lT3sxP+Ltu9cpyctbh9y+rx0yBv+G/0yZc7g94
lNBPCXxK6K8EXh769cDPQ/9l8CzDjzL4VuBPBbwr8GsD/Dfgn9MyD1Ul9x4q
8bOq0j2S+aiq1Gfxt6akr66Seakp8WWvFr9ryviyNKZlfuqS7/pBLf7XlQn3
7IiWeaor0/f9Y1qqaiiJc0ILj4Yycc4d18KjocTnw1ryNob1Z7XwaCr5rO3X
8r+mkrz7tNTdVOJjXwmP1vB9Rd00PFpKfC1IXV5Lpd818aWt0u+gxGkr8fnq
8F4bPDrg0QGPDnhsYr6dFh6bmPct7O8W5t9p4bGNfXBaeGxjP3z042NffPTn
Y3989Ou08PPRfxf71YUfTguHLvxxOp3TnX71sI89+Oe07GcPfjot89GDv33s
bx9+O53OYarFf6dlnvrgEYBHAB4BeATgEYBHAB4BeITgEYJHCB4heITgEYJH
BB4ReETgEYFHBB4ReMTgEYNHDB4xeMTgEYPHX6v/ARZSpdo=
                    
                    "]], {}, {}}}}, InsetBox[
                    
                    TemplateBox[{
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sout\\)]\\)\"",
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rout\\)]\\)\""},
                    "PointLegend",
                    DisplayFunction->(FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ),
                    Editable->True,
                    InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                    "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
                    BaseStyle->{FontSize -> Larger},
                    FormatType->StandardForm]},
                  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                  Axes->True,
                  AxesLabel->{
                    FormBox[
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(out\\)]\\)Value\"", 
                    TraditionalForm], 
                    FormBox["\"PDF\"", TraditionalForm]},
                  AxesOrigin->{0, 0},
                  DisplayFunction->Identity,
                  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                  GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                  ImageSize->Full,
                  
                  Method->{
                   "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]},
                  PlotRange->{{0., 1.5}, {0., 24.6}},
                  PlotRangePadding->{{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}},
                  Ticks->{Automatic, Automatic}],
                 TraditionalForm],
                InterpretTemplate[Legended[
                  Graphics[{{{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 0.}, {0.13,
                     0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {0.17, 0.}, {
                    0.18, 0.}, {0.19, 0.}, {0.2, 0.22}, {0.21, 0.99}, {0.22, 
                    4.95}, {0.23, 11.56}, {0.24, 21.12}, {0.25, 24.6}, {0.26, 
                    20.33}, {0.27, 10.87}, {0.28, 4.09}, {0.29, 1.04}, {0.3, 
                    0.18}, {0.31, 0.01}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}}, {
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 0.}, {0.13,
                     0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {0.17, 0.}, {
                    0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 0.}, {0.22, 
                    0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {0.26, 0.}, {
                    0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 0.}, {0.31, 
                    0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.055}, {
                    0.67, 0.15}, {0.68, 0.46}, {0.6900000000000001, 1.12}, {
                    0.7000000000000001, 2.745}, {0.71, 5.445}, {0.72, 8.25}, {
                    0.73, 11.87}, {0.74, 13.815}, {0.75, 14.86}, {0.76, 
                    14.145}, {0.77, 10.8}, {0.78, 7.54}, {0.79, 4.395}, {0.8, 
                    2.795}, {0.81, 1.22}, {0.8200000000000001, 0.605}, {
                    0.8300000000000001, 0.155}, {0.84, 0.07}, {0.85, 0.05}, {
                    0.86, 0.005}, {0.87, 0.}, {0.88, 0.}, {0.89, 0.}, {0.9, 
                    0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 0.}, {
                    0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {0.96, 
                    0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {1.01, 
                    0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 0.}, {
                    1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1, 
                    0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}}}, {{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxlkztMFFEUhlftqEzEFmNhxFpJbPROpy3EkspELcUWWqmxMDFa2EBjs4mJ
iZioUdH4CBgQcPC9w3PfO7M7D0v33iPnxs+bbCbfwpx7zv+dPX75+tiVQ6VS
6UD/c6f/OVj6/0wNli9EkzfNv3xbeX5oujE6fx9/n1O+d9eeB/j/snJz1H7z
EO8/Uh4IZyfODTxGvSfKp8ZnXmXDT1H/ufJc/+1w9gXue6l82p0F3P9aeSEb
7t/wBv28VR5zF75Df++N9LVooklb8IOxVQfLHf1+adGeI8EN297Ekjlm2x46
GUj/H//ySCBVl43UPRvIPMvGtXnpTHDRXbBiXJlnJwKZb8W4a8YPB+4x88nI
e7GReVfN/hzuEa6afc/yXNN5pI915OH52lV7PiOfUFnmDpHXhnJuy2UbyO+L
8nlX8Kuy5OnZtTf9DfvwXVly9ix5/1A+6hr8if3xLDn+UpZTwTwV7FsF83kW
XxHmjbCfEebfVBafm8jDs/jdQj6eRc8W8trG/m8jP8+yDzvI07Psxw7y3cW+
7CJvz7I/e8jfs+zTHnxU4aMKH1X4qMJHDT5q8FGDj7ryLeejDh91+GjARwM+
GvDRhI8mfDThowUfLfhowUcbPtrw0YaPDnx04KMDHzHmieEnxnwxfMWYN4a/
GPMn8JkgjwR+E+STwHeCvLrw30V+nuX32UWenmU/usi3h33pIW/Psj895O9Z
9qkHHyl8pPCRwkcKHyl8pPCRwkcGHxl8ZPCRwUcGHxl85PCRw0cOHzl85PCR
w0cBHwV8FPBRwEcBHwV8/Fb+A+mFhvA=
                    "]], Null, {}, {}}}}, {{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxllD1oU1EYhqOiQzehXaMOYkWdnPWcTXFr50yCOlrBqS4Odq6DIDoI0i6C
BATBClXUKFVpRa2aqlVzk+Y/bW+S++No7vlyz6GPB+7w5uZ8P+/zfffQ+cuT
F/ZkMpldg+f24Nmd+f9cG82f8aZvqJ36ltUL2Zn2xMI9vJ+3+u6d5DzA//NW
dyaSXx7h/mOrR4pzU6dGniDeU6uP5mZfheOLiP/c6vnB7eLcC+R7afVJcwrI
/9rqQjg+yPAG9SxZPWkSvkV976z2ppOA71HvstVXkvKmVlD/B6vlfEQ/Tp81
CT6hP6eTbLnZz+h31WrTTnEV/X+x+kBSTvYr/HD60sXkfIM/RauTaKP5Ivxa
szpKwoVr8O+71adNwB/w02lT3sxP+Ltu9cpyctbh9y+rx0yBv+G/0yZc7g94
lNBPCXxK6K8EXh769cDPQ/9l8CzDjzL4VuBPBbwr8GsD/Dfgn9MyD1Ul9x4q
8bOq0j2S+aiq1Gfxt6akr66Seakp8WWvFr9ryviyNKZlfuqS7/pBLf7XlQn3
7IiWeaor0/f9Y1qqaiiJc0ILj4Yycc4d18KjocTnw1ryNob1Z7XwaCr5rO3X
8r+mkrz7tNTdVOJjXwmP1vB9Rd00PFpKfC1IXV5Lpd818aWt0u+gxGkr8fnq
8F4bPDrg0QGPDnhsYr6dFh6bmPct7O8W5t9p4bGNfXBaeGxjP3z042NffPTn
Y3989Ou08PPRfxf71YUfTguHLvxxOp3TnX71sI89+Oe07GcPfjot89GDv33s
bx9+O53OYarFf6dlnvrgEYBHAB4BeATgEYBHAB4BeITgEYJHCB4heITgEYJH
BB4ReETgEYFHBB4ReMTgEYNHDB4xeMTgEYPHX6v/ARZSpdo=
                    "]], 
                    Null, {}, {}}}}}}}, {
                   AspectRatio -> GoldenRatio^(-1), Axes -> True, 
                    AxesLabel -> {
                    "\!\(\*SubscriptBox[\(I\), \(out\)]\)Value", "PDF"}, 
                    AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> Full, 
                    Method -> {
                    "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]}, 
                    PlotRange -> {{0., 1.5}, {0., 24.6}}, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                  Placed[
                   Unevaluated[
                    PointLegend[{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, {
                    "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                    "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, 
                    Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
                    "Column", 
                    LegendMarkers -> {{None, Automatic}, {
                    None, Automatic}}]], {Right, Top}, Identity]]& ],
                AutoDelete->True,
                Editable->True,
                SelectWithContents->False,
                Selectable->True]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"], {576., -192.}, {Center, Center}, {360., 360.}]}, {
          InsetBox[
           TagBox[GridBox[{
              {
               TagBox[GridBox[{
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Sout\\)]]\\):\"\>", 
                   "0.5000332799999998`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Sout\\)]]\
\\):\"\>", "0.033998739767455544`"},
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Rout\\)]]\\):\"\>", 
                   "0.5005157199999999`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Rout\\)]]\
\\):\"\>", "0.03161744591543308`"}
                 },
                 AutoDelete->False,
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]},
              {
               TagBox[
                FormBox[
                 GraphicsBox[{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03,
                     0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 
                    0.}, {0.13, 0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {
                    0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 
                    0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.005}, {0.37, 0.015}, {
                    0.38, 0.03}, {0.39, 0.075}, {0.4, 0.16}, {
                    0.41000000000000003`, 0.395}, {0.42, 0.815}, {0.43, 
                    1.52}, {0.44, 2.67}, {0.45, 4.205}, {0.46, 6.1}, {
                    0.47000000000000003`, 8.245}, {0.48, 10.295}, {0.49, 
                    11.04}, {0.5, 11.635}, {0.51, 10.91}, {0.52, 9.265}, {
                    0.53, 7.675}, {0.54, 5.84}, {0.55, 3.695}, {0.56, 2.45}, {
                    0.5700000000000001, 1.255}, {0.58, 0.72}, {0.59, 0.275}, {
                    0.6, 0.2}, {0.61, 0.03}, {0.62, 0.035}, {0.63, 0.005}, {
                    0.64, 0.}, {0.65, 0.}, {0.66, 0.005}, {0.67, 0.}, {0.68, 
                    0.}, {0.6900000000000001, 0.}, {0.7000000000000001, 0.}, {
                    0.71, 0.}, {0.72, 0.}, {0.73, 0.}, {0.74, 0.}, {0.75, 
                    0.}, {0.76, 0.}, {0.77, 0.}, {0.78, 0.}, {0.79, 0.}, {0.8,
                     0.}, {0.81, 0.}, {0.8200000000000001, 0.}, {
                    0.8300000000000001, 0.}, {0.84, 0.}, {0.85, 0.}, {0.86, 
                    0.}, {0.87, 0.}, {0.88, 0.}, {0.89, 0.}, {0.9, 0.}, {0.91,
                     0.}, {0.92, 0.}, {0.93, 0.}, {0.9400000000000001, 0.}, {
                    0.9500000000000001, 0.}, {0.96, 0.}, {0.97, 0.}, {0.98, 
                    0.}, {0.99, 0.}, {1., 0.}, {1.01, 0.}, {1.02, 0.}, {1.03, 
                    0.}, {1.04, 0.}, {1.05, 0.}, {1.06, 0.}, {1.07, 0.}, {
                    1.08, 0.}, {1.09, 0.}, {1.1, 0.}, {1.11, 0.}, {1.12, 
                    0.}, {1.1300000000000001`, 0.}, {1.1400000000000001`, 
                    0.}, {1.1500000000000001`, 0.}, {1.16, 0.}, {1.17, 0.}, {
                    1.18, 0.}, {1.19, 0.}, {1.2, 0.}, {1.21, 0.}, {1.22, 
                    0.}, {1.23, 0.}, {1.24, 0.}, {1.25, 0.}, {1.26, 0.}, {
                    1.27, 0.}, {1.28, 0.}, {1.29, 0.}, {1.3, 0.}, {1.31, 
                    0.}, {1.32, 0.}, {1.33, 0.}, {1.34, 0.}, {1.35, 0.}, {
                    1.36, 0.}, {1.37, 0.}, {1.3800000000000001`, 0.}, {
                    1.3900000000000001`, 0.}, {1.4000000000000001`, 0.}, {
                    1.41, 0.}, {1.42, 0.}, {1.43, 0.}, {1.44, 0.}, {1.45, 
                    0.}, {1.46, 0.}, {1.47, 0.}, {1.48, 0.}, {1.49, 0.}, {1.5,
                     0.}, {1.5, 0}, {1.49, 0}, {1.48, 0}, {1.47, 0}, {
                    1.46, 0}, {1.45, 0}, {1.44, 0}, {1.43, 0}, {1.42, 0}, {
                    1.41, 0}, {1.4000000000000001`, 0}, {
                    1.3900000000000001`, 0}, {1.3800000000000001`, 0}, {
                    1.37, 0}, {1.36, 0}, {1.35, 0}, {1.34, 0}, {1.33, 0}, {
                    1.32, 0}, {1.31, 0}, {1.3, 0}, {1.29, 0}, {1.28, 0}, {
                    1.27, 0}, {1.26, 0}, {1.25, 0}, {1.24, 0}, {1.23, 0}, {
                    1.22, 0}, {1.21, 0}, {1.2, 0}, {1.19, 0}, {1.18, 0}, {
                    1.17, 0}, {1.16, 0}, {1.1500000000000001`, 0}, {
                    1.1400000000000001`, 0}, {1.1300000000000001`, 0}, {
                    1.12, 0}, {1.11, 0}, {1.1, 0}, {1.09, 0}, {1.08, 0}, {
                    1.07, 0}, {1.06, 0}, {1.05, 0}, {1.04, 0}, {1.03, 0}, {
                    1.02, 0}, {1.01, 0}, {1., 0}, {0.99, 0}, {0.98, 0}, {
                    0.97, 0}, {0.96, 0}, {0.9500000000000001, 0}, {
                    0.9400000000000001, 0}, {0.93, 0}, {0.92, 0}, {0.91, 0}, {
                    0.9, 0}, {0.89, 0}, {0.88, 0}, {0.87, 0}, {0.86, 0}, {
                    0.85, 0}, {0.84, 0}, {0.8300000000000001, 0}, {
                    0.8200000000000001, 0}, {0.81, 0}, {0.8, 0}, {0.79, 0}, {
                    0.78, 0}, {0.77, 0}, {0.76, 0}, {0.75, 0}, {0.74, 0}, {
                    0.73, 0}, {0.72, 0}, {0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03,
                     0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 
                    0.}, {0.13, 0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {
                    0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 
                    0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.01}, {0.39, 0.01}, {0.4, 0.04}, {0.41000000000000003`, 
                    0.205}, {0.42, 0.49}, {0.43, 0.985}, {0.44, 2.125}, {0.45,
                     3.815}, {0.46, 5.895}, {0.47000000000000003`, 8.055}, {
                    0.48, 10.315}, {0.49, 12.415}, {0.5, 12.47}, {0.51, 
                    11.615}, {0.52, 10.07}, {0.53, 7.89}, {0.54, 5.12}, {0.55,
                     3.54}, {0.56, 2.04}, {0.5700000000000001, 1.12}, {0.58, 
                    0.5}, {0.59, 0.235}, {0.6, 0.085}, {0.61, 0.015}, {0.62, 
                    0.01}, {0.63, 0.015}, {0.64, 0.}, {0.65, 0.}, {0.66, 
                    0.}, {0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxllDtoU2EYhqPFpSA4RHSKF7zU2Vm/fxFd2zmTYB2t4FRxs7hZB6HoIEi7
uASkghVKUat4oRVj1bS11tyapLmek5xLR3P+9+T/8fWHJLzn8l3e5/ty4uqN
sWtDiURiX/8z0//sT/x/biczlwuTd+Vf/dDohdRUY3ThCd2fM/rxo+g8o+cz
RjdHoyvP6f0XRg/nZicuDL+keK+MPpeefuuPLFL8JaPn+m/nZl9TvjdGn9dn
mfK/M3rZH+lneE/1fDB6TCf8SPV9MrowGQX8TPWuGH0zKm9iler/YjTOV+rH
6is6QZb6szrKlp7+Rv2uGa3bya1R/9+NPhaVk/pBflh9fTw6P8mfnCDOLYm+
k5mcoK/7Ar/WZTA3QRTOXxfUNS/wb0MGHC7qgJuCPjcEfm6Kvp2siy5v6lcc
d0/g75bon/QBtboSnS3czx5S8Pu36LLHj6rDOs626Mt3jivUtS26jZlTCnH+
xPnOKHSZR95LZxXy5uP4pxX45FHvvZMK/eXR33xKoY9CXN8RhX4LAk4HFfgV
Yh+GFPovxvm9+LmiwOdq7Ecxfj4b+1iSwRzCn5LxG3hKgjxPY7/Khhd+y4Yn
/CvTPOyY5+HnDs2H1fC3QvNSoXmv0PxUjYZPVmOeqrQfNdrHGu2L1eBRo/3Z
pf3dpX2yGjzqRj/QPKwGjzrtW8No8GjQ/lkNHk3axybxaBKPFv2ftIhHi3i0
iUebeLSJR4d4dIhHh3g41I9DfBzqzyFeDvXrED+H+neJp0t+uMTXJX9c4u2S
X13i3yX/rMZ+dslPqzEfXfK3R/PSI7+txvz0yH+rMU894uERD494eMTDIx4e
8fCIh0c8fOLhEw+fePjEwycePvEIiEdAPALiERCPgHgExCMkHiHxCIlHSDxC
4hESjz2j/wIqH8Ix
                    "]], {}, {}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxlkztoFFEUhjfaBbFasZFEMeBa2wnx3k7bpE4lqKWxja1pjYUgWgiSNDYL
gmIEETWKGpKgRl2NMe4ru5vsa2Z3Hpbu3DN7L35eGIZ/Hufxf+ecuHh1+tLB
TCYzMrjuDK4Dmf/P9Wz+fGnuhvpX37Z6eWy+ObV8H++XrL53NzkP8X3e6tZU
8uQR/n9s9WhhcXZy9CniPbP69MzC6zD3HPFfWL00+Luw+BL5Xll9xpwV5H9j
9UqYG2R4i3reWT1tEr5HfR+sLs0lAVdR75rV15LyZtdR/4bVcj6iH6cvmASf
0J/TSbaZhc/od9Nq005hE/1/sXo8KWfsK/xw+srl5HyDPwWrk2jZfAF+fVfD
uYqScKHT4t8PNZyjcybgljI2Ta4q8XNLGRtnfitT3vzP9N5V4u92mm9Er68l
Zzt9f1iL37+UjPFRfcQUuCPxjh3X4v+O5HkwoYd5xJaclrhFZeJ4OS39FKXe
s6e08Ckqcz85oaW/ohIO41p4ldL+slr6LSmJc0gLv6HOaOm/rOS5n8Ypq2Ed
Eq4s9WU3lPCtKOH0JO27oqSvm0rwVKzf4lfVvpfnVctL/KtiHnYxv7uYD6fF
3xrmpYZ5r2F+6laL/3XMUx370cB8NbAvTguPBvZnD/u7h31yWnjsW33L8HBa
eOxj35pWC48m9s9p4dHCPrbAowUebfBog0cbPDrg0QGPDnh0waMLHl3w8NCP
Bz4e+vPAy0O/Hvh56N8HTx9++ODrwx8fvH341QP/HvxzWvazBz+dlvnowd8+
5qUPv52W+enDf6dlnvrgEYBHAB4BeATgEYBHAB4BeITgEYJHCB4heITgEYJH
BB4ReETgEYFHBB4ReMTgEYNHDB4xeMTgEYPHH6v/Anl4svs=
                    
                    "]], {}, {}}}}, InsetBox[
                    
                    TemplateBox[{
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sout\\)]\\)\"",
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rout\\)]\\)\""},
                    "PointLegend",
                    DisplayFunction->(FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ),
                    Editable->True,
                    InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                    "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
                    BaseStyle->{FontSize -> Larger},
                    FormatType->StandardForm]},
                  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                  Axes->True,
                  AxesLabel->{
                    FormBox[
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(out\\)]\\)Value\"", 
                    TraditionalForm], 
                    FormBox["\"PDF\"", TraditionalForm]},
                  AxesOrigin->{0, 0},
                  DisplayFunction->Identity,
                  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                  GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                  ImageSize->Full,
                  
                  Method->{
                   "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]},
                  PlotRange->{{0., 1.5}, {0., 12.47}},
                  PlotRangePadding->{{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}},
                  Ticks->{Automatic, Automatic}],
                 TraditionalForm],
                InterpretTemplate[Legended[
                  Graphics[{{{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 0.}, {0.13,
                     0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {0.17, 0.}, {
                    0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 0.}, {0.22, 
                    0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {0.26, 0.}, {
                    0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 0.}, {0.31, 
                    0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.005}, {0.37, 0.015}, {
                    0.38, 0.03}, {0.39, 0.075}, {0.4, 0.16}, {
                    0.41000000000000003`, 0.395}, {0.42, 0.815}, {0.43, 
                    1.52}, {0.44, 2.67}, {0.45, 4.205}, {0.46, 6.1}, {
                    0.47000000000000003`, 8.245}, {0.48, 10.295}, {0.49, 
                    11.04}, {0.5, 11.635}, {0.51, 10.91}, {0.52, 9.265}, {
                    0.53, 7.675}, {0.54, 5.84}, {0.55, 3.695}, {0.56, 2.45}, {
                    0.5700000000000001, 1.255}, {0.58, 0.72}, {0.59, 0.275}, {
                    0.6, 0.2}, {0.61, 0.03}, {0.62, 0.035}, {0.63, 0.005}, {
                    0.64, 0.}, {0.65, 0.}, {0.66, 0.005}, {0.67, 0.}, {0.68, 
                    0.}, {0.6900000000000001, 0.}, {0.7000000000000001, 0.}, {
                    0.71, 0.}, {0.72, 0.}, {0.73, 0.}, {0.74, 0.}, {0.75, 
                    0.}, {0.76, 0.}, {0.77, 0.}, {0.78, 0.}, {0.79, 0.}, {0.8,
                     0.}, {0.81, 0.}, {0.8200000000000001, 0.}, {
                    0.8300000000000001, 0.}, {0.84, 0.}, {0.85, 0.}, {0.86, 
                    0.}, {0.87, 0.}, {0.88, 0.}, {0.89, 0.}, {0.9, 0.}, {0.91,
                     0.}, {0.92, 0.}, {0.93, 0.}, {0.9400000000000001, 0.}, {
                    0.9500000000000001, 0.}, {0.96, 0.}, {0.97, 0.}, {0.98, 
                    0.}, {0.99, 0.}, {1., 0.}, {1.01, 0.}, {1.02, 0.}, {1.03, 
                    0.}, {1.04, 0.}, {1.05, 0.}, {1.06, 0.}, {1.07, 0.}, {
                    1.08, 0.}, {1.09, 0.}, {1.1, 0.}, {1.11, 0.}, {1.12, 
                    0.}, {1.1300000000000001`, 0.}, {1.1400000000000001`, 
                    0.}, {1.1500000000000001`, 0.}, {1.16, 0.}, {1.17, 0.}, {
                    1.18, 0.}, {1.19, 0.}, {1.2, 0.}, {1.21, 0.}, {1.22, 
                    0.}, {1.23, 0.}, {1.24, 0.}, {1.25, 0.}, {1.26, 0.}, {
                    1.27, 0.}, {1.28, 0.}, {1.29, 0.}, {1.3, 0.}, {1.31, 
                    0.}, {1.32, 0.}, {1.33, 0.}, {1.34, 0.}, {1.35, 0.}, {
                    1.36, 0.}, {1.37, 0.}, {1.3800000000000001`, 0.}, {
                    1.3900000000000001`, 0.}, {1.4000000000000001`, 0.}, {
                    1.41, 0.}, {1.42, 0.}, {1.43, 0.}, {1.44, 0.}, {1.45, 
                    0.}, {1.46, 0.}, {1.47, 0.}, {1.48, 0.}, {1.49, 0.}, {1.5,
                     0.}, {1.5, 0}, {1.49, 0}, {1.48, 0}, {1.47, 0}, {
                    1.46, 0}, {1.45, 0}, {1.44, 0}, {1.43, 0}, {1.42, 0}, {
                    1.41, 0}, {1.4000000000000001`, 0}, {
                    1.3900000000000001`, 0}, {1.3800000000000001`, 0}, {
                    1.37, 0}, {1.36, 0}, {1.35, 0}, {1.34, 0}, {1.33, 0}, {
                    1.32, 0}, {1.31, 0}, {1.3, 0}, {1.29, 0}, {1.28, 0}, {
                    1.27, 0}, {1.26, 0}, {1.25, 0}, {1.24, 0}, {1.23, 0}, {
                    1.22, 0}, {1.21, 0}, {1.2, 0}, {1.19, 0}, {1.18, 0}, {
                    1.17, 0}, {1.16, 0}, {1.1500000000000001`, 0}, {
                    1.1400000000000001`, 0}, {1.1300000000000001`, 0}, {
                    1.12, 0}, {1.11, 0}, {1.1, 0}, {1.09, 0}, {1.08, 0}, {
                    1.07, 0}, {1.06, 0}, {1.05, 0}, {1.04, 0}, {1.03, 0}, {
                    1.02, 0}, {1.01, 0}, {1., 0}, {0.99, 0}, {0.98, 0}, {
                    0.97, 0}, {0.96, 0}, {0.9500000000000001, 0}, {
                    0.9400000000000001, 0}, {0.93, 0}, {0.92, 0}, {0.91, 0}, {
                    0.9, 0}, {0.89, 0}, {0.88, 0}, {0.87, 0}, {0.86, 0}, {
                    0.85, 0}, {0.84, 0}, {0.8300000000000001, 0}, {
                    0.8200000000000001, 0}, {0.81, 0}, {0.8, 0}, {0.79, 0}, {
                    0.78, 0}, {0.77, 0}, {0.76, 0}, {0.75, 0}, {0.74, 0}, {
                    0.73, 0}, {0.72, 0}, {0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}}, {
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 0.}, {0.13,
                     0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {0.17, 0.}, {
                    0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 0.}, {0.22, 
                    0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {0.26, 0.}, {
                    0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 0.}, {0.31, 
                    0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.01}, {0.39, 0.01}, {0.4, 0.04}, {0.41000000000000003`, 
                    0.205}, {0.42, 0.49}, {0.43, 0.985}, {0.44, 2.125}, {0.45,
                     3.815}, {0.46, 5.895}, {0.47000000000000003`, 8.055}, {
                    0.48, 10.315}, {0.49, 12.415}, {0.5, 12.47}, {0.51, 
                    11.615}, {0.52, 10.07}, {0.53, 7.89}, {0.54, 5.12}, {0.55,
                     3.54}, {0.56, 2.04}, {0.5700000000000001, 1.12}, {0.58, 
                    0.5}, {0.59, 0.235}, {0.6, 0.085}, {0.61, 0.015}, {0.62, 
                    0.01}, {0.63, 0.015}, {0.64, 0.}, {0.65, 0.}, {0.66, 
                    0.}, {0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}}}, {{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxllDtoU2EYhqPFpSA4RHSKF7zU2Vm/fxFd2zmTYB2t4FRxs7hZB6HoIEi7
uASkghVKUat4oRVj1bS11tyapLmek5xLR3P+9+T/8fWHJLzn8l3e5/ty4uqN
sWtDiURiX/8z0//sT/x/biczlwuTd+Vf/dDohdRUY3ThCd2fM/rxo+g8o+cz
RjdHoyvP6f0XRg/nZicuDL+keK+MPpeefuuPLFL8JaPn+m/nZl9TvjdGn9dn
mfK/M3rZH+lneE/1fDB6TCf8SPV9MrowGQX8TPWuGH0zKm9iler/YjTOV+rH
6is6QZb6szrKlp7+Rv2uGa3bya1R/9+NPhaVk/pBflh9fTw6P8mfnCDOLYm+
k5mcoK/7Ar/WZTA3QRTOXxfUNS/wb0MGHC7qgJuCPjcEfm6Kvp2siy5v6lcc
d0/g75bon/QBtboSnS3czx5S8Pu36LLHj6rDOs626Mt3jivUtS26jZlTCnH+
xPnOKHSZR95LZxXy5uP4pxX45FHvvZMK/eXR33xKoY9CXN8RhX4LAk4HFfgV
Yh+GFPovxvm9+LmiwOdq7Ecxfj4b+1iSwRzCn5LxG3hKgjxPY7/Khhd+y4Yn
/CvTPOyY5+HnDs2H1fC3QvNSoXmv0PxUjYZPVmOeqrQfNdrHGu2L1eBRo/3Z
pf3dpX2yGjzqRj/QPKwGjzrtW8No8GjQ/lkNHk3axybxaBKPFv2ftIhHi3i0
iUebeLSJR4d4dIhHh3g41I9DfBzqzyFeDvXrED+H+neJp0t+uMTXJX9c4u2S
X13i3yX/rMZ+dslPqzEfXfK3R/PSI7+txvz0yH+rMU894uERD494eMTDIx4e
8fCIh0c8fOLhEw+fePjEwycePvEIiEdAPALiERCPgHgExCMkHiHxCIlHSDxC
4hESjz2j/wIqH8Ix
                    "]], Null, {}, {}}}}, {{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxlkztoFFEUhjfaBbFasZFEMeBa2wnx3k7bpE4lqKWxja1pjYUgWgiSNDYL
gmIEETWKGpKgRl2NMe4ru5vsa2Z3Hpbu3DN7L35eGIZ/Hufxf+ecuHh1+tLB
TCYzMrjuDK4Dmf/P9Wz+fGnuhvpX37Z6eWy+ObV8H++XrL53NzkP8X3e6tZU
8uQR/n9s9WhhcXZy9CniPbP69MzC6zD3HPFfWL00+Luw+BL5Xll9xpwV5H9j
9UqYG2R4i3reWT1tEr5HfR+sLs0lAVdR75rV15LyZtdR/4bVcj6iH6cvmASf
0J/TSbaZhc/od9Nq005hE/1/sXo8KWfsK/xw+srl5HyDPwWrk2jZfAF+fVfD
uYqScKHT4t8PNZyjcybgljI2Ta4q8XNLGRtnfitT3vzP9N5V4u92mm9Er68l
Zzt9f1iL37+UjPFRfcQUuCPxjh3X4v+O5HkwoYd5xJaclrhFZeJ4OS39FKXe
s6e08Ckqcz85oaW/ohIO41p4ldL+slr6LSmJc0gLv6HOaOm/rOS5n8Ypq2Ed
Eq4s9WU3lPCtKOH0JO27oqSvm0rwVKzf4lfVvpfnVctL/KtiHnYxv7uYD6fF
3xrmpYZ5r2F+6laL/3XMUx370cB8NbAvTguPBvZnD/u7h31yWnjsW33L8HBa
eOxj35pWC48m9s9p4dHCPrbAowUebfBog0cbPDrg0QGPDnh0waMLHl3w8NCP
Bz4e+vPAy0O/Hvh56N8HTx9++ODrwx8fvH341QP/HvxzWvazBz+dlvnowd8+
5qUPv52W+enDf6dlnvrgEYBHAB4BeATgEYBHAB4BeITgEYJHCB4heITgEYJH
BB4ReETgEYFHBB4ReMTgEYNHDB4xeMTgEYPHH6v/Anl4svs=
                    "]], 
                    Null, {}, {}}}}}}}, {
                   AspectRatio -> GoldenRatio^(-1), Axes -> True, 
                    AxesLabel -> {
                    "\!\(\*SubscriptBox[\(I\), \(out\)]\)Value", "PDF"}, 
                    AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> Full, 
                    Method -> {
                    "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]}, 
                    PlotRange -> {{0., 1.5}, {0., 12.47}}, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                  Placed[
                   Unevaluated[
                    PointLegend[{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, {
                    "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                    "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, 
                    Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
                    "Column", 
                    LegendMarkers -> {{None, Automatic}, {
                    None, Automatic}}]], {Right, Top}, Identity]]& ],
                AutoDelete->True,
                Editable->True,
                SelectWithContents->False,
                Selectable->True]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"], {192., -576.}, {Center, Center}, {360., 360.}], 
          InsetBox[
           TagBox[GridBox[{
              {
               TagBox[GridBox[{
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Sout\\)]]\\):\"\>", 
                   "0.96164665`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Sout\\)]]\
\\):\"\>", "0.055867225428780524`"},
                  {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \
SubscriptBox[\\(I\\), \\(Rout\\)]]\\):\"\>", 
                   "0.03798317999999999`", "\<\"\\t\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), SubscriptBox[\\(I\\), \\(Rout\\)]]\
\\):\"\>", "0.028789148136423474`"}
                 },
                 AutoDelete->False,
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"]},
              {
               TagBox[
                FormBox[
                 GraphicsBox[{{{
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03,
                     0.}, {0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {
                    0.08, 0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 
                    0.}, {0.13, 0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {
                    0.17, 0.}, {0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 
                    0.}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.002}, {0.74, 0.01}, {0.75, 0.016}, {0.76, 0.024}, {0.77,
                     0.032}, {0.78, 0.072}, {0.79, 0.09}, {0.8, 0.14}, {0.81, 
                    0.248}, {0.8200000000000001, 0.352}, {0.8300000000000001, 
                    0.532}, {0.84, 0.738}, {0.85, 1.038}, {0.86, 1.472}, {
                    0.87, 1.922}, {0.88, 2.574}, {0.89, 3.19}, {0.9, 3.952}, {
                    0.91, 4.742}, {0.92, 5.33}, {0.93, 6.324}, {
                    0.9400000000000001, 6.436}, {0.9500000000000001, 7.002}, {
                    0.96, 7.14}, {0.97, 7.01}, {0.98, 6.928}, {0.99, 6.414}, {
                    1., 5.808}, {1.01, 4.858}, {1.02, 4.012}, {1.03, 3.358}, {
                    1.04, 2.49}, {1.05, 1.764}, {1.06, 1.444}, {1.07, 
                    0.976}, {1.08, 0.586}, {1.09, 0.384}, {1.1, 0.23}, {1.11, 
                    0.126}, {1.12, 0.08}, {1.1300000000000001`, 0.076}, {
                    1.1400000000000001`, 0.036}, {1.1500000000000001`, 
                    0.014}, {1.16, 0.006}, {1.17, 0.004}, {1.18, 0.}, {1.19, 
                    0.002}, {1.2, 0.002}, {1.21, 0.}, {1.22, 0.}, {1.23, 
                    0.}, {1.24, 0.}, {1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {
                    1.28, 0.}, {1.29, 0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 
                    0.}, {1.33, 0.}, {1.34, 0.}, {1.35, 0.}, {1.36, 0.}, {
                    1.37, 0.}, {1.3800000000000001`, 0.}, {
                    1.3900000000000001`, 0.}, {1.4000000000000001`, 0.}, {
                    1.41, 0.}, {1.42, 0.}, {1.43, 0.}, {1.44, 0.}, {1.45, 
                    0.}, {1.46, 0.}, {1.47, 0.}, {1.48, 0.}, {1.49, 0.}, {1.5,
                     0.}, {1.5, 0}, {1.49, 0}, {1.48, 0}, {1.47, 0}, {
                    1.46, 0}, {1.45, 0}, {1.44, 0}, {1.43, 0}, {1.42, 0}, {
                    1.41, 0}, {1.4000000000000001`, 0}, {
                    1.3900000000000001`, 0}, {1.3800000000000001`, 0}, {
                    1.37, 0}, {1.36, 0}, {1.35, 0}, {1.34, 0}, {1.33, 0}, {
                    1.32, 0}, {1.31, 0}, {1.3, 0}, {1.29, 0}, {1.28, 0}, {
                    1.27, 0}, {1.26, 0}, {1.25, 0}, {1.24, 0}, {1.23, 0}, {
                    1.22, 0}, {1.21, 0}, {1.2, 0}, {1.19, 0}, {1.18, 0}, {
                    1.17, 0}, {1.16, 0}, {1.1500000000000001`, 0}, {
                    1.1400000000000001`, 0}, {1.1300000000000001`, 0}, {
                    1.12, 0}, {1.11, 0}, {1.1, 0}, {1.09, 0}, {1.08, 0}, {
                    1.07, 0}, {1.06, 0}, {1.05, 0}, {1.04, 0}, {1.03, 0}, {
                    1.02, 0}, {1.01, 0}, {1., 0}, {0.99, 0}, {0.98, 0}, {
                    0.97, 0}, {0.96, 0}, {0.9500000000000001, 0}, {
                    0.9400000000000001, 0}, {0.93, 0}, {0.92, 0}, {0.91, 0}, {
                    0.9, 0}, {0.89, 0}, {0.88, 0}, {0.87, 0}, {0.86, 0}, {
                    0.85, 0}, {0.84, 0}, {0.8300000000000001, 0}, {
                    0.8200000000000001, 0}, {0.81, 0}, {0.8, 0}, {0.79, 0}, {
                    0.78, 0}, {0.77, 0}, {0.76, 0}, {0.75, 0}, {0.74, 0}, {
                    0.73, 0}, {0.72, 0}, {0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {0.32, 0},
                     {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {0.27, 0}, {
                    0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {0.22, 0}, {
                    0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {0.17, 0}, {
                    0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {0.12, 0}, {
                    0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {0.07, 0}, {
                    0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {0.02, 0}, {
                    0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2], PolygonBox[{{0., 34.395}, {0.01, 14.42}, {0.02, 
                    15.335}, {0.03, 14.39}, {0.04, 11.735}, {0.05, 9.46}, {
                    0.06, 7.345}, {0.07, 5.635}, {0.08, 3.85}, {0.09, 
                    2.565}, {0.1, 1.805}, {0.11, 1.22}, {0.12, 0.565}, {0.13, 
                    0.315}, {0.14, 0.205}, {0.15, 0.05}, {0.16, 0.025}, {0.17,
                     0.02}, {0.18, 0.01}, {0.19, 0.}, {0.2, 0.005}, {0.21, 
                    0.005}, {0.22, 0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {
                    0.26, 0.005}, {0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 
                    0.}, {0.31, 0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}},
                    VertexColors->None]}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], Opacity[
                    0.2]}}}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxllVtIVFEUhk0lTKLEtNAGK4gwJCKiB4la5yUqQkKLkJAI6QI9lEF0MejF
xJdCocAumJaGCCJkUhYiU1qZeCktR1NzLuo4zujc51RINOesPfvg34ZBfo+z
11r/t87vluJLBWcT4uLiVkQ/1dFPfNz/52Zay0Fb6W1aru9L3Z5V7s5vfwLP
G6R+9FA7TfD3LVJ78rXfvIDvt0mdbKkv2Zf8Gu57I/X2osr34ewOuL9T6obo
ty31Zqj3Turd+umC+t1Sd4WzoxU+QD+fpC7QC/ZAf5+ltpVqF/ZCv31SX9ba
K+mH/gek5vMF5jH0Ib3AV5jP0Fq1osohmHdYan0cyzDM/03qTVo7Wd/BD0Of
P6edEfDHIrV2W1qLBfwalTqiXRceBf/GpN6vX/gD/DS03l75OPg7IXV/n3Ym
wO9JqdP1Bn+C/4bWryuaAh5WmMcKfKwwnxV42WBeG/Czwfx24GkHP+zA1wH+
OIC3A/yaBv7T4J+heR9mwE9D837MgL+zsC+z4LeheX+c4L+Tlpr8Q3nFp4n3
yUnLc2lOPK8i5jFHf25d6Lhy7wExj9jzOmIec7R36ujd6outxDxcFMsZ5uGi
WE7wTxcV5rb1XO0cJOYxT28Pr47PqRihKp3HPNVl7pzcutJGzGOeEk+s2dFa
4yTm4aZB9Zjj+WMfMQ83nTyjdaAS83BTtJnUMvNfYh4e0h9XJyo8p0d8b5XC
PDzi/rUK81ignIr1YwNqqsI8FoQP6QrzWKDWGm/jxyMZCvNYFPNkKMxjkfac
0iYyKcxjkXjPTAr74hX+mBTm4aUyc+/TA682KszDS1o33sYMhXn4KKnZFB1x
g8Lz+ITf6xTuy0dcMEXM56NrnbVRB5MV5uUTvieIeX00nFecUpi7JPj5SOu+
NlMlnt8v6nkFT7/w007sh1/sw6jg66dY7rI/fjoepdO92Szq+in2f4j9CtD4
b+2Cl4J/QMzzjNi/AN1wbduV1HxH+BYQ9a4T+xkQ+1ci9iMA+x6U+837Ymj2
Owjvs6HZ/yC830HIqxC87yHIrxC8/yHIsxDkQQjyLQT5EIa8C0NeGJp5hCE/
DM08wpAnEcjHCOSLoZlHBPLG0MwjAjxUyFMV8kgFHirwUIGHCjx+Sf0Pt7cL
rA==
                    "]], {}, {}}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                    0.005833333333333334], AbsoluteThickness[1.6], 
                    LineBox[CompressedData["
1:eJxdlTtoU1EYx+NjyuAU3azoYgVx0LmeOMW1nbMoqKMKDlJXu7jEQZA6uLSL
CAFBMIKItkq1tFK1mqpV8+gj79yb3IeDg7nnu/cc/B1I4HfveX3/3xdy9OLV
qUv7UqnUntHn/uizN2XHoj+eL5w+l72VKeaq07dVee7aRLp8MuZ7qjNZGpt5
fCo7+m5Plh6q89XpTHEpeT+v9PObx7MPZqPxSOa3j8XziyqanrtwOCvPn6h0
dMCdQ/H6p2p1JRoHsvp5+pmKVo3N7I/3ey7rq3/ViXxhwR9/Eb8fyrmll0pv
k6mp+ejac6/ieevxPV6rCb3xsjqjx6JK7innv4l5VukcFt6qpG65z5JKcpnS
B75TSW6y7n38/kZ8z2XDco8VM/+6vsiqYbn/B5X6b6wZlnrWzH4699xH817q
sxydli98Miz1fjYsXi3LvuuGj+hgvxiWPCxfuRyNr4Yln7JhraFoWfLaMBxE
2/kbyO+b4bN6w++GJU/L4v2HYcl307D00Sby/mn4oL7gL+RvWW+X/w0fFdRT
gZ8K6rMsvqqotwp/VdRfg88a8qjBbx351OG7jry24H8L+VmWfthGnpalP7aR
7w76ZQd5W5b+2UX+lqWfduGjAR8N+GjARwM+mvDRhI8mfLQM39U+WvDRgo82
fLThow0fHfjowEcHPrrw0YWPLnz04KMHHz346MNHHz768OGgHgd+HNTnwJeD
eh34c1C/C58u8nDh10U+Lny7yGsA/wPkZ1l+nwPkaVn6Y4B8h+iXIfK2nPzP
JSz5W5Z+GsKHBx8efHjw4cGHBx8efHjw4cOHDx8+fPjw4cOHDx8BfATwEcBH
AB8BfATwEcJHCB8hfITwEcJHCB9/DP8D17qtfw==
                    "]], {}, {}}}}, 
                   InsetBox[
                    
                    TemplateBox[{
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Sout\\)]\\)\"",
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(Rout\\)]\\)\""},
                    "PointLegend",
                    DisplayFunction->(FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.10500000000000001`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ),
                    Editable->True,
                    InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.005833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                    "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
                    BaseStyle->{FontSize -> Larger},
                    FormatType->StandardForm]},
                  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
                  Axes->True,
                  AxesLabel->{
                    FormBox[
                    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(out\\)]\\)Value\"", 
                    TraditionalForm], 
                    FormBox["\"PDF\"", TraditionalForm]},
                  AxesOrigin->{0, 0},
                  DisplayFunction->Identity,
                  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                  GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                  ImageSize->Full,
                  
                  Method->{
                   "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]},
                  PlotRange->{{0., 1.5}, {0., 34.395}},
                  PlotRangePadding->{{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}},
                  Ticks->{Automatic, Automatic}],
                 TraditionalForm],
                InterpretTemplate[Legended[
                  Graphics[{{{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 0.}, {0.01, 0.}, {0.02, 0.}, {0.03, 0.}, {
                    0.04, 0.}, {0.05, 0.}, {0.06, 0.}, {0.07, 0.}, {0.08, 
                    0.}, {0.09, 0.}, {0.1, 0.}, {0.11, 0.}, {0.12, 0.}, {0.13,
                     0.}, {0.14, 0.}, {0.15, 0.}, {0.16, 0.}, {0.17, 0.}, {
                    0.18, 0.}, {0.19, 0.}, {0.2, 0.}, {0.21, 0.}, {0.22, 
                    0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {0.26, 0.}, {
                    0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 0.}, {0.31, 
                    0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.002}, {0.74, 0.01}, {0.75, 0.016}, {0.76, 0.024}, {0.77,
                     0.032}, {0.78, 0.072}, {0.79, 0.09}, {0.8, 0.14}, {0.81, 
                    0.248}, {0.8200000000000001, 0.352}, {0.8300000000000001, 
                    0.532}, {0.84, 0.738}, {0.85, 1.038}, {0.86, 1.472}, {
                    0.87, 1.922}, {0.88, 2.574}, {0.89, 3.19}, {0.9, 3.952}, {
                    0.91, 4.742}, {0.92, 5.33}, {0.93, 6.324}, {
                    0.9400000000000001, 6.436}, {0.9500000000000001, 7.002}, {
                    0.96, 7.14}, {0.97, 7.01}, {0.98, 6.928}, {0.99, 6.414}, {
                    1., 5.808}, {1.01, 4.858}, {1.02, 4.012}, {1.03, 3.358}, {
                    1.04, 2.49}, {1.05, 1.764}, {1.06, 1.444}, {1.07, 
                    0.976}, {1.08, 0.586}, {1.09, 0.384}, {1.1, 0.23}, {1.11, 
                    0.126}, {1.12, 0.08}, {1.1300000000000001`, 0.076}, {
                    1.1400000000000001`, 0.036}, {1.1500000000000001`, 
                    0.014}, {1.16, 0.006}, {1.17, 0.004}, {1.18, 0.}, {1.19, 
                    0.002}, {1.2, 0.002}, {1.21, 0.}, {1.22, 0.}, {1.23, 
                    0.}, {1.24, 0.}, {1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {
                    1.28, 0.}, {1.29, 0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 
                    0.}, {1.33, 0.}, {1.34, 0.}, {1.35, 0.}, {1.36, 0.}, {
                    1.37, 0.}, {1.3800000000000001`, 0.}, {
                    1.3900000000000001`, 0.}, {1.4000000000000001`, 0.}, {
                    1.41, 0.}, {1.42, 0.}, {1.43, 0.}, {1.44, 0.}, {1.45, 
                    0.}, {1.46, 0.}, {1.47, 0.}, {1.48, 0.}, {1.49, 0.}, {1.5,
                     0.}, {1.5, 0}, {1.49, 0}, {1.48, 0}, {1.47, 0}, {
                    1.46, 0}, {1.45, 0}, {1.44, 0}, {1.43, 0}, {1.42, 0}, {
                    1.41, 0}, {1.4000000000000001`, 0}, {
                    1.3900000000000001`, 0}, {1.3800000000000001`, 0}, {
                    1.37, 0}, {1.36, 0}, {1.35, 0}, {1.34, 0}, {1.33, 0}, {
                    1.32, 0}, {1.31, 0}, {1.3, 0}, {1.29, 0}, {1.28, 0}, {
                    1.27, 0}, {1.26, 0}, {1.25, 0}, {1.24, 0}, {1.23, 0}, {
                    1.22, 0}, {1.21, 0}, {1.2, 0}, {1.19, 0}, {1.18, 0}, {
                    1.17, 0}, {1.16, 0}, {1.1500000000000001`, 0}, {
                    1.1400000000000001`, 0}, {1.1300000000000001`, 0}, {
                    1.12, 0}, {1.11, 0}, {1.1, 0}, {1.09, 0}, {1.08, 0}, {
                    1.07, 0}, {1.06, 0}, {1.05, 0}, {1.04, 0}, {1.03, 0}, {
                    1.02, 0}, {1.01, 0}, {1., 0}, {0.99, 0}, {0.98, 0}, {
                    0.97, 0}, {0.96, 0}, {0.9500000000000001, 0}, {
                    0.9400000000000001, 0}, {0.93, 0}, {0.92, 0}, {0.91, 0}, {
                    0.9, 0}, {0.89, 0}, {0.88, 0}, {0.87, 0}, {0.86, 0}, {
                    0.85, 0}, {0.84, 0}, {0.8300000000000001, 0}, {
                    0.8200000000000001, 0}, {0.81, 0}, {0.8, 0}, {0.79, 0}, {
                    0.78, 0}, {0.77, 0}, {0.76, 0}, {0.75, 0}, {0.74, 0}, {
                    0.73, 0}, {0.72, 0}, {0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}}, {
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {{
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    
                    Polygon[{{0., 34.395}, {0.01, 14.42}, {0.02, 15.335}, {
                    0.03, 14.39}, {0.04, 11.735}, {0.05, 9.46}, {0.06, 
                    7.345}, {0.07, 5.635}, {0.08, 3.85}, {0.09, 2.565}, {0.1, 
                    1.805}, {0.11, 1.22}, {0.12, 0.565}, {0.13, 0.315}, {0.14,
                     0.205}, {0.15, 0.05}, {0.16, 0.025}, {0.17, 0.02}, {0.18,
                     0.01}, {0.19, 0.}, {0.2, 0.005}, {0.21, 0.005}, {0.22, 
                    0.}, {0.23, 0.}, {0.24, 0.}, {0.25, 0.}, {0.26, 0.005}, {
                    0.27, 0.}, {0.28, 0.}, {0.29, 0.}, {0.3, 0.}, {0.31, 
                    0.}, {0.32, 0.}, {0.33, 0.}, {0.34, 0.}, {
                    0.35000000000000003`, 0.}, {0.36, 0.}, {0.37, 0.}, {0.38, 
                    0.}, {0.39, 0.}, {0.4, 0.}, {0.41000000000000003`, 0.}, {
                    0.42, 0.}, {0.43, 0.}, {0.44, 0.}, {0.45, 0.}, {0.46, 
                    0.}, {0.47000000000000003`, 0.}, {0.48, 0.}, {0.49, 0.}, {
                    0.5, 0.}, {0.51, 0.}, {0.52, 0.}, {0.53, 0.}, {0.54, 
                    0.}, {0.55, 0.}, {0.56, 0.}, {0.5700000000000001, 0.}, {
                    0.58, 0.}, {0.59, 0.}, {0.6, 0.}, {0.61, 0.}, {0.62, 
                    0.}, {0.63, 0.}, {0.64, 0.}, {0.65, 0.}, {0.66, 0.}, {
                    0.67, 0.}, {0.68, 0.}, {0.6900000000000001, 0.}, {
                    0.7000000000000001, 0.}, {0.71, 0.}, {0.72, 0.}, {0.73, 
                    0.}, {0.74, 0.}, {0.75, 0.}, {0.76, 0.}, {0.77, 0.}, {
                    0.78, 0.}, {0.79, 0.}, {0.8, 0.}, {0.81, 0.}, {
                    0.8200000000000001, 0.}, {0.8300000000000001, 0.}, {0.84, 
                    0.}, {0.85, 0.}, {0.86, 0.}, {0.87, 0.}, {0.88, 0.}, {
                    0.89, 0.}, {0.9, 0.}, {0.91, 0.}, {0.92, 0.}, {0.93, 
                    0.}, {0.9400000000000001, 0.}, {0.9500000000000001, 0.}, {
                    0.96, 0.}, {0.97, 0.}, {0.98, 0.}, {0.99, 0.}, {1., 0.}, {
                    1.01, 0.}, {1.02, 0.}, {1.03, 0.}, {1.04, 0.}, {1.05, 
                    0.}, {1.06, 0.}, {1.07, 0.}, {1.08, 0.}, {1.09, 0.}, {1.1,
                     0.}, {1.11, 0.}, {1.12, 0.}, {1.1300000000000001`, 0.}, {
                    1.1400000000000001`, 0.}, {1.1500000000000001`, 0.}, {
                    1.16, 0.}, {1.17, 0.}, {1.18, 0.}, {1.19, 0.}, {1.2, 
                    0.}, {1.21, 0.}, {1.22, 0.}, {1.23, 0.}, {1.24, 0.}, {
                    1.25, 0.}, {1.26, 0.}, {1.27, 0.}, {1.28, 0.}, {1.29, 
                    0.}, {1.3, 0.}, {1.31, 0.}, {1.32, 0.}, {1.33, 0.}, {1.34,
                     0.}, {1.35, 0.}, {1.36, 0.}, {1.37, 0.}, {
                    1.3800000000000001`, 0.}, {1.3900000000000001`, 0.}, {
                    1.4000000000000001`, 0.}, {1.41, 0.}, {1.42, 0.}, {1.43, 
                    0.}, {1.44, 0.}, {1.45, 0.}, {1.46, 0.}, {1.47, 0.}, {
                    1.48, 0.}, {1.49, 0.}, {1.5, 0.}, {1.5, 0}, {1.49, 0}, {
                    1.48, 0}, {1.47, 0}, {1.46, 0}, {1.45, 0}, {1.44, 0}, {
                    1.43, 0}, {1.42, 0}, {1.41, 0}, {
                    1.4000000000000001`, 0}, {1.3900000000000001`, 0}, {
                    1.3800000000000001`, 0}, {1.37, 0}, {1.36, 0}, {
                    1.35, 0}, {1.34, 0}, {1.33, 0}, {1.32, 0}, {1.31, 0}, {
                    1.3, 0}, {1.29, 0}, {1.28, 0}, {1.27, 0}, {1.26, 0}, {
                    1.25, 0}, {1.24, 0}, {1.23, 0}, {1.22, 0}, {1.21, 0}, {
                    1.2, 0}, {1.19, 0}, {1.18, 0}, {1.17, 0}, {1.16, 0}, {
                    1.1500000000000001`, 0}, {1.1400000000000001`, 0}, {
                    1.1300000000000001`, 0}, {1.12, 0}, {1.11, 0}, {1.1, 0}, {
                    1.09, 0}, {1.08, 0}, {1.07, 0}, {1.06, 0}, {1.05, 0}, {
                    1.04, 0}, {1.03, 0}, {1.02, 0}, {1.01, 0}, {1., 0}, {
                    0.99, 0}, {0.98, 0}, {0.97, 0}, {0.96, 0}, {
                    0.9500000000000001, 0}, {0.9400000000000001, 0}, {
                    0.93, 0}, {0.92, 0}, {0.91, 0}, {0.9, 0}, {0.89, 0}, {
                    0.88, 0}, {0.87, 0}, {0.86, 0}, {0.85, 0}, {0.84, 0}, {
                    0.8300000000000001, 0}, {0.8200000000000001, 0}, {
                    0.81, 0}, {0.8, 0}, {0.79, 0}, {0.78, 0}, {0.77, 0}, {
                    0.76, 0}, {0.75, 0}, {0.74, 0}, {0.73, 0}, {0.72, 0}, {
                    0.71, 0}, {0.7000000000000001, 0}, {
                    0.6900000000000001, 0}, {0.68, 0}, {0.67, 0}, {0.66, 0}, {
                    0.65, 0}, {0.64, 0}, {0.63, 0}, {0.62, 0}, {0.61, 0}, {
                    0.6, 0}, {0.59, 0}, {0.58, 0}, {0.5700000000000001, 0}, {
                    0.56, 0}, {0.55, 0}, {0.54, 0}, {0.53, 0}, {0.52, 0}, {
                    0.51, 0}, {0.5, 0}, {0.49, 0}, {0.48, 0}, {
                    0.47000000000000003`, 0}, {0.46, 0}, {0.45, 0}, {
                    0.44, 0}, {0.43, 0}, {0.42, 0}, {
                    0.41000000000000003`, 0}, {0.4, 0}, {0.39, 0}, {
                    0.38, 0}, {0.37, 0}, {0.36, 0}, {
                    0.35000000000000003`, 0}, {0.34, 0}, {0.33, 0}, {
                    0.32, 0}, {0.31, 0}, {0.3, 0}, {0.29, 0}, {0.28, 0}, {
                    0.27, 0}, {0.26, 0}, {0.25, 0}, {0.24, 0}, {0.23, 0}, {
                    0.22, 0}, {0.21, 0}, {0.2, 0}, {0.19, 0}, {0.18, 0}, {
                    0.17, 0}, {0.16, 0}, {0.15, 0}, {0.14, 0}, {0.13, 0}, {
                    0.12, 0}, {0.11, 0}, {0.1, 0}, {0.09, 0}, {0.08, 0}, {
                    0.07, 0}, {0.06, 0}, {0.05, 0}, {0.04, 0}, {0.03, 0}, {
                    0.02, 0}, {0.01, 0}, {0., 0}}, VertexColors -> None]}}, {
                    Directive[
                    Opacity[0.2], 
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}}}, {{{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxllVtIVFEUhk0lTKLEtNAGK4gwJCKiB4la5yUqQkKLkJAI6QI9lEF0MejF
xJdCocAumJaGCCJkUhYiU1qZeCktR1NzLuo4zujc51RINOesPfvg34ZBfo+z
11r/t87vluJLBWcT4uLiVkQ/1dFPfNz/52Zay0Fb6W1aru9L3Z5V7s5vfwLP
G6R+9FA7TfD3LVJ78rXfvIDvt0mdbKkv2Zf8Gu57I/X2osr34ewOuL9T6obo
ty31Zqj3Turd+umC+t1Sd4WzoxU+QD+fpC7QC/ZAf5+ltpVqF/ZCv31SX9ba
K+mH/gek5vMF5jH0Ib3AV5jP0Fq1osohmHdYan0cyzDM/03qTVo7Wd/BD0Of
P6edEfDHIrV2W1qLBfwalTqiXRceBf/GpN6vX/gD/DS03l75OPg7IXV/n3Ym
wO9JqdP1Bn+C/4bWryuaAh5WmMcKfKwwnxV42WBeG/Czwfx24GkHP+zA1wH+
OIC3A/yaBv7T4J+heR9mwE9D837MgL+zsC+z4LeheX+c4L+Tlpr8Q3nFp4n3
yUnLc2lOPK8i5jFHf25d6Lhy7wExj9jzOmIec7R36ujd6outxDxcFMsZ5uGi
WE7wTxcV5rb1XO0cJOYxT28Pr47PqRihKp3HPNVl7pzcutJGzGOeEk+s2dFa
4yTm4aZB9Zjj+WMfMQ83nTyjdaAS83BTtJnUMvNfYh4e0h9XJyo8p0d8b5XC
PDzi/rUK81ignIr1YwNqqsI8FoQP6QrzWKDWGm/jxyMZCvNYFPNkKMxjkfac
0iYyKcxjkXjPTAr74hX+mBTm4aUyc+/TA682KszDS1o33sYMhXn4KKnZFB1x
g8Lz+ITf6xTuy0dcMEXM56NrnbVRB5MV5uUTvieIeX00nFecUpi7JPj5SOu+
NlMlnt8v6nkFT7/w007sh1/sw6jg66dY7rI/fjoepdO92Szq+in2f4j9CtD4
b+2Cl4J/QMzzjNi/AN1wbduV1HxH+BYQ9a4T+xkQ+1ci9iMA+x6U+837Ymj2
Owjvs6HZ/yC830HIqxC87yHIrxC8/yHIsxDkQQjyLQT5EIa8C0NeGJp5hCE/
DM08wpAnEcjHCOSLoZlHBPLG0MwjAjxUyFMV8kgFHirwUIGHCjx+Sf0Pt7cL
rA==
                    "]], Null, {}, {}}}}, {{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Line[CompressedData["
1:eJxdlTtoU1EYx+NjyuAU3azoYgVx0LmeOMW1nbMoqKMKDlJXu7jEQZA6uLSL
CAFBMIKItkq1tFK1mqpV8+gj79yb3IeDg7nnu/cc/B1I4HfveX3/3xdy9OLV
qUv7UqnUntHn/uizN2XHoj+eL5w+l72VKeaq07dVee7aRLp8MuZ7qjNZGpt5
fCo7+m5Plh6q89XpTHEpeT+v9PObx7MPZqPxSOa3j8XziyqanrtwOCvPn6h0
dMCdQ/H6p2p1JRoHsvp5+pmKVo3N7I/3ey7rq3/ViXxhwR9/Eb8fyrmll0pv
k6mp+ejac6/ieevxPV6rCb3xsjqjx6JK7innv4l5VukcFt6qpG65z5JKcpnS
B75TSW6y7n38/kZ8z2XDco8VM/+6vsiqYbn/B5X6b6wZlnrWzH4699xH817q
sxydli98Miz1fjYsXi3LvuuGj+hgvxiWPCxfuRyNr4Yln7JhraFoWfLaMBxE
2/kbyO+b4bN6w++GJU/L4v2HYcl307D00Sby/mn4oL7gL+RvWW+X/w0fFdRT
gZ8K6rMsvqqotwp/VdRfg88a8qjBbx351OG7jry24H8L+VmWfthGnpalP7aR
7w76ZQd5W5b+2UX+lqWfduGjAR8N+GjARwM+mvDRhI8mfLQM39U+WvDRgo82
fLThow0fHfjowEcHPrrw0YWPLnz04KMHHz346MNHHz768OGgHgd+HNTnwJeD
eh34c1C/C58u8nDh10U+Lny7yGsA/wPkZ1l+nwPkaVn6Y4B8h+iXIfK2nPzP
JSz5W5Z+GsKHBx8efHjw4cGHBx8efHjw4cOHDx8+fPjw4cOHDx8BfATwEcBH
AB8BfATwEcJHCB8hfITwEcJHCB9/DP8D17qtfw==
                    "]], 
                    Null, {}, {}}}}}}}, {
                   AspectRatio -> GoldenRatio^(-1), Axes -> True, 
                    AxesLabel -> {
                    "\!\(\*SubscriptBox[\(I\), \(out\)]\)Value", "PDF"}, 
                    AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> Full, 
                    Method -> {
                    "MessagesHead" -> DiscretePlot, "AxisPadding" -> 
                    Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "RangePadding" -> Scaled[0.05]}, 
                    PlotRange -> {{0., 1.5}, {0., 34.395}}, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                  Placed[
                   Unevaluated[
                    PointLegend[{
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    PointSize[0.005833333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, {
                    "\!\(\*SubscriptBox[\(I\), \(Sout\)]\)", 
                    "\!\(\*SubscriptBox[\(I\), \(Rout\)]\)"}, 
                    Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
                    "Column", 
                    LegendMarkers -> {{None, Automatic}, {
                    None, Automatic}}]], {Right, Top}, Identity]]& ],
                AutoDelete->True,
                Editable->True,
                SelectWithContents->False,
                Selectable->True]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"], {576., -576.}, {Center, Center}, {360., 360.}]}}, {}},
       ContentSelectable->True,
       ImageSize->Full,
       PlotRangePadding->{6, 5}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6398424444003468`*^9, 3.639846944990679*^9, 3.639856915977396*^9, 
   3.639857116836828*^9, 3.639857418036832*^9, 3.639857517303958*^9, 
   3.639857642932578*^9, 3.639857893618042*^9, 3.639858019031436*^9, 
   3.639858247211458*^9, 3.639858432913506*^9, 3.639858655346801*^9, 
   3.6398593445307713`*^9, 3.6398615748927507`*^9, 3.639862068005272*^9, 
   3.639863231824733*^9, 3.639863410989543*^9, 3.639935118441704*^9, 
   3.639935151571912*^9, 3.639935321114347*^9, 3.639935667637836*^9, 
   3.63995466132917*^9, 3.640011701953862*^9, 3.640011745885036*^9, 
   3.64001181849667*^9, 3.640012446414996*^9, {3.640012530039764*^9, 
   3.640012558663392*^9}, 3.640012597184106*^9, 3.6400205350144777`*^9, 
   3.644705778201475*^9, 3.644705838060408*^9, 3.644706089680009*^9, 
   3.64475488636027*^9, 3.644755051869104*^9, 3.6447550873768883`*^9, 
   3.6447552042618856`*^9, 3.644755374372609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"b", " ", "X"}], "+", "a"}], ",", " ", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"LogNormalDistribution", "[", 
     RowBox[{"mu", ",", " ", "sigma"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{"%", ",", "X"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", " ", "valA"}], ",", " ", 
        RowBox[{"b", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"mu", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"sigma", "\[Rule]", " ", "0.1"}]}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"valA", ",", " ", "0", ",", " ", "2", ",", " ", "1"}], "}"}]}], 
    "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"X", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.644709744916635*^9, 3.64471006259625*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"TransformedDistribution", "[", 
   RowBox[{
    RowBox[{"a", "+", 
     RowBox[{"b", " ", "X"}]}], ",", 
    RowBox[{"X", "\[Distributed]", 
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"mu", ",", "sigma"}], "]"}]}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.644709784526443*^9, 3.644709836575015*^9}, {
   3.644709890339456*^9, 3.644709970981102*^9}, 3.6447100631102533`*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVlHk01AsfxiVklPVaZkpEly4hJBHz+/5CcsXNWiKEJFtdZQtpsZTsypal
QqLsNKSyRShRdJGxzD6DZsbImqW394/nfM5zznPOc55/HiXPy3be/Hx8fJW/
9X9qo4XtK8nZIHvlBTbPFOUz70TPLivmwnvivw+c5v34K2/rxcwploMEd8C3
5/tZObJHlSxb8RU0628ipzZW9kXa+p+bVeyFbhU/z1bXo3qY1bzeAK0xyG3H
vOPXSjA2uPMtwtJjDLAn68H/eo7xRRk5jb8ejIF1/1Q7Lv2ZcXaxw4Rg9xjw
uzhGuwURjN/rZKRQV8fgnG6NUca+LuOl1gFo1yBCI463UPB2yFjlH1FeoTsR
UjBqj+PxFGOHccuiqAwiKIyKl22tnTOO9btr79xFhH2BNxFLk03jhpUuAYMV
IiyDyyJOYzueGr+VILN/HIa8AnuuaWLxUjJHfX64jsM3p1hDnq0K3qQ4Gvsl
bRwi0VhsWJEu/orOm96qd+PwoYmlFa2C4p+0rkYkLY0DzyTw4ZGWE/jP1oc1
/NQmQK5Bqz+76DSebzx44vjZCcj+VdLstOKF1/arS1FJnQAt0awdr9/8i3df
4cLWjgkI64r75/B/kfiUeE0eaWECfF9vzmouxeNbpP2LWvZNgp1T7RODvgw8
u6jMPt95EvQdti20JBbi5XUYAhHJk2CCW49yLSrDW7XuJZxumwQePYfe31SP
j7T28Dn0YxJ6iOHPcM6t+OfEQuwfqlPwZYBl8KClBz/mO9475zQFVZQzbuTz
Q3jMCi6yP3EKiCfDLXJ1JvEG8ac1KlqmoEtXJTbJiYm/KJ05kcCbgiczIq/S
OTy8la1v90EpEqCUWHUttzX8eazw46L9JIhyvlFk1iaARE6VhkseIwH9aFwj
7pg4klF6zPamGwnEXD4d3+0nhzwPpKlxw0hw7YB77HyAEtKhF8Pvlk4CTJ+j
IX+PGjK2pkTse06C2VydY3cXdZH5jrZ6o87ffbvlBUhNRgjmnnvS8wkSyG7c
v/1V1QzZY7t5HrdMAhG7d0YdStaIAbYAf1eCDBZpowlP5hwQmykj2WU1MlT2
0W+ZzbkiF0vHON6mZEgIfUTx/tsbuRl4rfvrWTLcWRDuE5W/hGTrYR+bhpLh
KUuwkK0VglStEcLrUsnguEFfOvDsOvK+w9FWqZwMEmzqQcPSWGQyYUEtrYMM
eu9uiwUVJCFLNvf5fxHJYCrWpVbSfB8Rw+oSAxfJcLFs8txzqTxEdepz/bgY
BQZdl0uuRxUhSOnlpBN/UUBY+SMubk854hgo5t18lALpP3tKT/yqQQL0KvFq
LhSQ5Us5P00lILFrJ2RzgilgMqiQNlvdguR3zHCEUigggV19eTWiE2lISOgO
eUYBj1PFN3brf0T6bP56TGujgGJSbIQ+3yBClesOtx+jQNAFpKGfMIL8nPS2
7fhBAc6sk/f8rilEqlRAXUeUCqFWZQoidjREPbCY/7EqFcamQpt3/TuDmOiZ
EMVQKmy+EVwQUeIhzmuk+utnqND/51DM9V1LSFDHjaTvV6gQODlUW+K/jqxI
PqgkJlIh3zJDWk2eH6I9yvo/lFDBP040q2NTCARr33BfvaXCzYjiwRw5UUji
+yJRPkyFBqVKlvkpKfjDhq6Tw6XCL8Pa9i5hOXj4aNXujjANLALsRq79Jw9K
XNHgUCUa0BRNlXauK0EZopzpfYQGMbjSpg0XVTiQok9wsKeBZ+/TCb+G/UCY
sBwxDaCBtlRGwtVdOoDXdF/RjaPBw0bjbf1ih6Az6ipOuZAGo1LiDdbDhnCi
784Rycbf3m1KvzgXYHBXvgvfZxqYZQZJhpmawhn/miguiwYyH6t29vkeB1Jz
Z8HkFjq05WKGityswEfkW8unnXRIsECGCMq2wDnDnnpzkA7+74v6LhQ7QEj5
li0VVnQoaov9mdnjBOsrMsp53nQQ9/F5WV3hCjEW6qb3oukQPWymMkLwAJEc
5Py1bDooKS9eeCPrDelMu7iLNXSwz7q3dy/GF7CHfUpP99Ihpjp94XZxIDyK
j+w2p9Bh2+Wan/PRQaA6nMo6tEYH6yqPgrTcYKhUKcGoSDPAKkLl1h3tcNAL
aVKX1mSAnVTYTm+HKHjd2XdiqzkDHnWya5sTb4KJNDlg3o0BATcEC+bMY6DX
azGZHMaAWWOMFeNCPNjUY6o/pzGgKS7uQPNyAozwK3xuLWfAWZJz6VOhFHCz
0+VVdTAg5x32sqBtOtCfmEsVEhkQjiTx2r7fhwCe88HkBQaMTd+ym5/Mgh/o
ZYcoUSZc+RRNrNB+CBFpMSH+qkzQeNHeWTVbAFtI2VnOwATG1h9huqJP4O6B
isa/nZjwh0n5wJJXMYjfaBs1CGLCtskvAqJ8pZDV/3V13z0m3PUwc2hklsFu
hemdcsVMKH5cIJmuVAElgRtGQm+YMFu44JzcUA3730q6Ln5lwsgD0+ifQ7VQ
t0M1msZmwpBs+OvaLQ1gcPbIoyEhFrz0ZiR7+BCg9cU/bR2KLLj0ae+uPzGv
wHzNk1xrwIKw9Yt5h2ZfQ59lGP8TWxbU5FWz5yRbwf5h4t40PxZMu3KG6Gj7
792PzG7EsGDr2K/PZYrvwMOwwftSPguw325spu7rAtbdnnjXlyyQNzEe4jp3
w9I+Xo8R83de5m1+qHUfXA8TnFHnm4ZNzk/ycckBEOjGbd+JmwaHClIpV+AL
JMpqaWB0p+HXakVVS/4gSF0wsV6xnIZe4/EcNduvkPvy1CWm1zTkvsg/AHuH
YY+gf+pw1DQcdBQ6yS89Clol9780VE1D4bPH9faO4yCdo73c1jsNlQvtYnHE
SVhL/CT/iTYN7jKD9rzfv91zddtF+s4ZiN++h6hQS4Uqn5Jk3qEZWGxsukow
p0Omy9H6DZsZsDMLH8jgMcDTNHJT5s4M6IcdwXj8psVh7J/KRTMQp33b48iV
73Bg/8u/td7OwMOWcxoqVziwLsV9YP5jBmQNLS25p3mQSfHcH+Y+C7WVghHv
MUsQNfzLJiZiFvRXnvJpWS2D54f80NTMWQiGRzFuWSugVTfc/uzjLJRlWQ9W
wxr03LJ0Gj38HTQ3z53T9uVD1/foxhlKsMGUcNbJV14IpUgPPD+2nw3fceNp
9/qE0F7hgM+25myI85XZzLu2Dc2ae7rLL4oNwaRYzwc9wmgUzeRoaDYbGpoG
NWN8MajX6NSF23VscL/ttvuqoAiq3Yare8hig93g7PFEje2obANhpHQrByTv
B/l+I2xHN57Zb9QpcCD4QkdayJEdKC1vTrnVkAMFqc3xfI070A+pyRYfHThw
zGw+WElDFK2JUb80cpkDqJ2LdXyuKJoV1n2feo8DfpneqrRNUTTK//wr7lMO
6PBpJi67iKFe7lum1to4QDhv0xpbI4Za2hcKCI9zwKlTY+n0uhiqfdxIXXqZ
A9lujtePgTgqazR6co8UF941GY+pXRNH17VCQjQ0ufBcUYE4XS6OUpSl8gws
uLAeYJt35Ys42itb3WbmxQVt1onIV1xxtEbEimETzYU6ZwchN34JNGuTtd01
lwsLBQ6rICyBRs3H6fg2cGFx+zeXBIwE6sVQPh0ywAWbOs0+MyEJ1HKsNerW
DBdKnF+bbdkQR/XSF3M+bHJhnK1AvDsrjv4Pw+ZOVw==
      "]], 
     LineBox[CompressedData["
1:eJwVlXc4Ff4Xxy8qIyMzRGRXEqIk93OuiKyMJCtJ3KyQrySJiogoW0NIsoVE
SCoySySzkGRFyuXu+ev313lez+v9PO9z/jo7vIIdfLgxGAwfFwbz/yl19HCJ
rMcq1FvOGAefE8ZdeHFRr+Ufdwt/TM05K4wr2B1p5BawCkYzAvwPxIVx/YXR
pvRLq9ChoL5x4LUQji0Ta30/bhVUbrXpxHgJ4dz5kt1HH62CaIS8sn+uIO52
TKp3ePkqBHqrPDLUFcQ1kzMDJV+ugogkQ7iqfTNu69yjqOMDqyAzqLNQ+VUA
N/iuOrefmwBL5Z61D37w4bgOvigKEiGA2rLdVZI7H067prFSSI4AsgEkSbcR
XlxK3rsWK30CvLyrvOX8+024o1e+THSdI8CZVxr57lkbcK16FLm3HwlQirOM
JuEwuJUKhsrpcQJ8xSZON4dzQE4Zs4c9R4B8IcrpmSA2XBblxxpxCGDvT8E6
+jNB74/sqUadNZBclFZyyaTCWR8Fn5NoDZJcFlSelFMgfUL5PNlyDSjzWnzr
HWT426t5Vc97DdaMnS/KCZKgvAQ9qsleg6CbD40Wxggwvt3kqe2TNZC17Nk2
JEMAvmzzqj/Va9Dc1vPQwnMVfOLsXmv2rEHjs+bSdMYKZDIcOz4Mr4G+4nhL
etlvaAt16fOfWQOxBRe5KK9lUDzjNVnKWIOhzma3EuIi2I7h58z51gH/s0Ku
sm8Bom0DVuYl1kE2/H6RYu08TGDDWCpa6zCA22b0InsWcmTj5R97roPPhgWR
U6PTQP75qeRY0DrYcu9s2/f1OzhWbdVlXlkHizcNpjGyUyCGKzM7mbMOfKcJ
XAdGv0II/9rAhqf/vLnH51CHcegfNHR7/nwdVhgMuuL0KCT7fAwW+rQOu8w2
cvDaw7CkJUlv/rYORdF5e7oJX8CCeirO99c65N074rK3fRA23f57r30DEYSN
JK5WZgyAt6OB8gUxIlB5iy7uUu6HdvnrVdsVicB3U9HV0bAPrtWItV0+RIRY
u8Ik7YYemLrsZq1uQYST4u5LNdLdgDUpGhlyIkLZwI0qtfROoA/rL+8NJcKd
gtTbIx3t4JwffXEyhgjDhqUZEtFt8NK3i5OUQgRtCVFjO4t3EMZwlpgvJcKj
24yb+rtaYfD947yMBiKQNn5f+aLeAjp3ljSM3xNh2yrHIti0GVJP7qv785kI
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
oBGy
      "]], LineBox[CompressedData["
1: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
flP4HxCL07w=
      "]], LineBox[CompressedData["
1:eJxFzlkowwEcB/C/o5AXNCtH/uzRMXOUq1DuPchVJIytlWMlNIpFSBQLMTdP
rjmmZhEv+1se/KcxLyPkPuY+ohHmKP1+3/r27fP29eKXpgktCYLw/+3fcqJH
Vt6kvVHEf+JXo3NMZD94tiG48ZGUg48LFMw7cglck1qSf0PSYLv3QVrE3gWX
aerabstPwW+O3bN7rejagskN7Si6jdhykBvQk5EsmTD8DHy0vDp8YHEOTpm3
m9N3XIC3LT30ajk6Ly3wSaFBi56yg6Qv6Bb/mcWkrEuwejqZ0pBGMHu0a0ul
uAIz+jgmikZ/tOrcdWfotQqbwnPXazA/psbs3IyWnfB9qng3YInhO6WxGs3X
DlW2y9BspWFlYh29Vs/N2gm5BX96BjaFOdyBTxibU3E+aNpWpE+NR/c8jrkV
S9AcykU5YEQzVQvb41b34K+J9C+lB1rbLk1cz0ALeBaHHxSamz5ibbuP5iRE
eDNM6E+2WOzr94B/WU6DoYlomjlHxQrQPWajfW4/WvLcFFCkQgsuWJniTTR3
Vy2pv0YHd772ac3oHzNoyfc=
      "]], LineBox[CompressedData["
1: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
9HvO587/8Nu99r9DAgGck7K8SmdlKP8DNyXw2A==
      "]], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJxFzlkowwEcB/C/o5AXNCtH/uzRMXOUq1DuPchVJIytlWMlNIpFSBQLMTdP
rjmmZhEv+1se/KcxLyPkPuY+ohHmKP1+3/r27fP29eKXpgktCYLw/+3fcqJH
Vt6kvVHEf+JXo3NMZD94tiG48ZGUg48LFMw7cglck1qSf0PSYLv3QVrE3gWX
aerabstPwW+O3bN7rejagskN7Si6jdhykBvQk5EsmTD8DHy0vDp8YHEOTpm3
m9N3XIC3LT30ajk6Ly3wSaFBi56yg6Qv6Bb/mcWkrEuwejqZ0pBGMHu0a0ul
uAIz+jgmikZ/tOrcdWfotQqbwnPXazA/psbs3IyWnfB9qng3YInhO6WxGs3X
DlW2y9BspWFlYh29Vs/N2gm5BX96BjaFOdyBTxibU3E+aNpWpE+NR/c8jrkV
S9AcykU5YEQzVQvb41b34K+J9C+lB1rbLk1cz0ALeBaHHxSamz5ibbuP5iRE
eDNM6E+2WOzr94B/WU6DoYlomjlHxQrQPWajfW4/WvLcFFCkQgsuWJniTTR3
Vy2pv0YHd772ac3oHzNoyfc=
      "]], LineBox[CompressedData["
1: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
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.644709784526443*^9, 3.644709836575015*^9}, {
   3.644709890339456*^9, 3.644709970981102*^9}, 3.6447100709854717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   RowBox[{"b", " ", "X"}], ",", " ", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"LogNormalDistribution", "[", 
     RowBox[{"mu", ",", " ", "sigma"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{"%", ",", "X"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "\[Rule]", " ", "valB"}], ",", " ", 
        RowBox[{"mu", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"sigma", "\[Rule]", " ", "0.1"}]}], "}"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"valB", ",", " ", "1", ",", " ", "3", ",", " ", "1"}], "}"}]}], 
    "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"X", ",", " ", "0", ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.644710109124542*^9, 3.64471011998938*^9}, {
  3.644710158038241*^9, 3.644710190476062*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"LogNormalDistribution", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"log", "(", "b", ")"}], "+", "mu"}], ",", "sigma"}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.644710121731925*^9, 3.64471019101257*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
NFdqG32tfeDLepqyFfgM9Ux5rMNpsA/bVsU1dRdCUN2GecKoydH7tp5PCePB
KDnnL8b7dvvgYdYR/D4kEB1SxPYvPdgHk/dLNiIPAtASxy+TOx77gGMiNCjb
+qN2tTHlQcH7QBevUiwf4IcqLJBlqb3YByPVRjcfRV+Ui909kjF2H4SB0pI6
2RtttzW0ep2+D0GWJ5NonnuiH2Ibr1tk70PKXfdV4HmEBlRevXoubx9Se71K
/ZoeopJMp+mLvh3V/3ulDNNxQ+kJ4TuetftA2LowNyviik5bHY5hTfvwwEta
ZIvDBU0qHSlp6doHkqNbgJrLGXUd03kTPbgPF8rFzsRfckI1aeteGE7sg+3W
JzO2j/dRnFmW+fjqPsi9Y2OQ97BDe0LZNT7s7AN2rlH6v8N7aH5hiJQT7uBo
v5feP0y0Qa0o7Wj2aQ8gv9Y87T2FNYqK929WsxyA+3rTjyfdlugJY42Rp6cO
IOyA99PjUgu0Ke9iMfO5A1i3927yzDZDM3vS0nouHsC3JfMvi4WmqDcp0/NU
yQMI7lEXqk6+g4oarN+5oHAA7+V6jjOrGaNUT6xUV1QPIEc8i2On9hY6+uGf
xFftA6C4oCzbqH0TjSOWUMnfOYC1xa2Exnf6KI3Aj/txVgeQa6798Lq/Hhp4
vaNzyu4ARnjZd0LtbqAP0mZeh3kcgCOHNV72rg4607BBMuRzAJs2rBRmHtqo
6QreRizoAP59PtHhF6eFaspxiP+LOoBb1RUfG0Y10B+2/C8FEw5gNk0v+uRt
dZQQI77vmXIANiTZD/fmVdHz46r1/308gE/PSZgTZJXRdBqDCw++HIDtqeje
gGPX0BOXLSLrvh6AoVFdglmPIkoe/PjWvboD6GXNedSaI4965z79Xt50AFaq
X1+MfJJD1//F8NF1HADduGXQaoksOirwaTF/4ACUzhezrc0CelOrRPfY+AEI
tHBTuaugaLtHXYnB7AEI5uj1cVUQ0O+N/f77mwfAlfyQ4svQFVRydXpK8+AA
xDNJxjPCpNFcjg31dFIiVGxM32pSlUKT7WjZlRiIQEi6uaG5JYEyx570SmAj
QsKX4BeM45fQ0G9nR2Y5idCsr/Gqc1Ac9aBFP0acI4KBp1F52J4ounRZlWH0
IhE8nOKkL3OKota39d0kJIlw/nwcwSdSBL2Rdx965IjQWbq7bOF3AW3u8sy8
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
H9TRSAg=
      "]], LineBox[CompressedData["
1:eJwUV3c81t8Xt7fHCEnlKztJVlY+91xkpKgUIQlJkr2SJFSSrITKSspIGQlZ
ISQpI2QUGRnZe4/n9/z+el7vzzn3nPf7fe59Pffus3ExukxDRUVVS0dF9f9f
nwJmdDnlHYR4c6XEtOxjl7QcpXbPegcuae3mi9/l2Q+SIzPnSPkQoBJG3/em
h11JY2BptjMfFl34xVQVhTlunr5mNfFfCbxzJRq6hk/sZF5L+Ooo0wDvu9Mh
S6hG0q36dtikextYeLVxMzlLysq8evyjIKcbfh49qPnudpDisKH9nj6Vfthv
maEazfJC+YlA8N4XVn9BJPB4PM/fLFVV9+Jc2u8joEkW+Yee6x2p6Uw45SIx
DjTnTkp+W/JWj7ExXlxSGAed4lxSCe9Ndbsp0lM/PA572wSc16duq7PQBvU9
MBuHmvN2WlWiweqnZOydXz0ch6NUcyJNwrHqwiX7uA88HQcHyaDFucan6ota
vwvfvRqHLxGM3612Jqk/MTPcqvg4DjHJ11UtVl+q/7mrGNY9Mw6VbYfnHHLy
1fM4pg9ZbY5DmOVJuecthepB8RltI0wTwNbz5piDV4m6WJ7A7sV9E3A6Xe7k
fsNP6stq7RW+MhNgGNjK9VmyVr3+c7gN9ZEJcAhjytX2+aIef0qXIUR3AibO
fvb6avhN3fE3VRbp7ASE9tBxin9qVkd2pQaxVhOgeCvycbpHqzrnnMfcbqcJ
0LYwCrno/FN98ObB2NQbE7D7T2J+cH+X+nuGUZX9wRMw0m3SotzTo373UUpP
bvQEsDdTse0u61c32WMeoPR8AhJebkqIX/qrLpmxQ/Tjmwn4k+++1eMxor4u
1/hFq3gCHtQlZnRujql/Lw++1lA7AdEf1RYmOabVk3Uxx+kfExDz8eGOT1Zz
6q6ta/mdvRNwt9W21J1nUV3jwnsTy/EJuHfhvbK57Io69z/H9aHlCXh424op
s2ZdfchdPPka7SRYJHbQ5PVtqxdt9WnMc0xC0aeWb7u+UxMhIc+GffZMgkr4
m/5fgXSE+Y4zD8iSk5D0amxyMomRkE5mOxh8eBLSHGbOjcqwEtuSdS1smpPA
otmUd0mbg2h+f9vzsSFlfUrghNA6F5GCVPkFzk9C7NgHe99MHsL963xZypVJ
YLI/826yZCdx9OzbixKekyCvm1R7XH03wdd3mTYnYBKI9CFBPfiP+Hf1vwzF
8EnwvtWjajK+jyhd7NIvezYJdD9SQ0+HiBJht6OnNdInIbPYZI36ngRxgeVE
dH3+JBjYjPKbTEkRMrH0SicrJwEWBLVmm2UIKqHK7p/fJmH408JATrIc0Zrl
c8uiaxL2bFeflxJVJF4dlt/3d2gStkzc3m3SKBPeVRO1V+cmgeHwrTleXTVC
93ia/ezWJAyxusfMbBEEf4cl23WWKRBWfRtjuVuDGLfiz9vimwLztppLpwO1
iPKJH2fuikzBd7voZR81HSLC++EKi+wUsNxq+VR0+hhhRa2d8Eh9Cvx2vJvQ
bztByIVtI/5jU+Bjbm922+4UIX910zbbZApuTWfelfltRCjqrIdq2k6BxWs3
8W9ZxsRhkdW8TrcpuNxxL45m0JRQolrucLw9BatuNSaHIy0Ild6FTerwKTBQ
Lb53ztqKUC2dE34SPwVd+T+y3L/YEGpPZvSkM6cgPGDXoYt3LxPqnlPOnwqn
oPGl5sbMS3sCnZ6IMamZgjq+JfG7Co4EyIyVTrRMgUhfiPGefa4EZh3tD/gz
BdrWYnRRru6E5r8hBr7JKWC7+k+3isuLOPp5UPrNGsWPBH3GcA4fQju13wgz
TkNWvEiXqvdNQuf2H5+fPNNg5rAS9OzMbULPoifZQXgadkRrGjz/HUjoq/6q
JR+aBkfq4d+mZneJ43xd4zHENPieH9rskL5PnFj4ySl1fBqMidvq8tahhGFL
m1Kl6TQs8p4t/ksTQZzK/mFx1m4ayCtbfiscj4jToc1BYx7ToPHzhw6T7WPC
6Epjpn/gNFSGmEz4MMQRZ49+a9oROQ39n2pN5aifESb7vi5mJk6D/iOFqhMX
E4lz23UCKGsaxJZpYpL5UgjT37W47cM0SBK9njfUUwnz4mo7+8/TIDg4pkH3
+hVhEVsVttU6DZfoHJ+t2WYQF9wr8qP7p6HP9seVPb5ZhOXJ8i6J6Wl4c+lT
hfFCNmElXbpdvjENkavbMw7TeYQNc7GoEfMMxMikXdkj/J64NFKoP8o3Ay22
xKVziYWEbc17Vz/RGZBlKbkec7mYsEt5F8clPwMJwkn22vfLCPtbueXpMAP9
RJPHLGslcdU8e/CIwQzgqGnVjNufCAflN0w/zGfgqCoHp9KHGsKR57WMnf0M
ENvyFqMKdYTzXPrZDa8ZeJqbrdK0VU+4NL3yjbozAxzbLLeH9n4nXN+kpog9
moFna/SGIsnNhHtISl1p8gyImvXQNtf+IDwuJ0+efDsDmT+3qE8ttxGemonc
wyUzoPpTMNHOoYPw/i9exffLDPibTrO/lOwmrm8+seT4OQNeCUIPr6j2ED7d
sXdfDc6Ae6P58FZaH+Fb9DhLdXYGHhUYZJwrHyBuPn7U0rQ1A7N57Youf/4S
qFh34x39LNBXSsw8ghGiMl0nwo9tFsg1PT+LRv4ROFZ7n+6OWVjVEyiP+j1B
VN05WsAlQMm/6sr1QnyG0HDX0u0RmoXzZ+xU0u3niGorzV/pErNg+uVPxKr7
AqF5UsPJTWYWHnypbSR/WCJqCEylfngWDlyIrWNBq8RRaXjMoD4L0t8ehLCz
bRCfBZD4D81ZaJH+c+Xd/m1Ch5koSTg2Czpi/Oh9MxWqWzlywu7ULERL050/
UkaDdEfU+mTPzYJgxI5z4T10yK6tffL+hVlgHjfmF+FgRHernNf/XJqFKneR
44G+zCg1m4lJyWEWWGzubgiJsqFP8am84a6zUPDh64sNLg7Uf19dZMh7FjYk
SSLHxbjQtmeH7JFbFH6aJ+qCx7nRHhtXFH1nFvSNWy886uFBR06ynBh7MAsm
kh9GX5H5kLn6KzMcNQtvPS+fszDdhXz2oytP4mYhvT7yW9nEbhTH1+U5nTgL
mQdVrqlWCqJCWvcg7ZezYMG14+alSSHUPssalfiaEhffZnF+Lozme9OSFnJn
wSqZuhL7iSLOb/BGv2gWdsqZeuYEi6NDxd3FL8pnwcDOh7qvWhIZpnnUrVbP
wtAtiQMmhw8gx2j29pNfZ8EhkFd4Y/AgCr2dMZDePAvX9c4fi7KXRa8dNWa2
fs7CmkNnZh2NPKo3+715tmcW6jL/dWrWKKARHS+Wt4Oz8FryfZVD9mFEp8jB
Tzs2C+ov4tynapWRyL7XYuYzs6D5/sBkPbsa0iRpKbxbmgVH+i9Gp8LUkdVG
D2banIWv2xvJ8tqA/P95G16kmQPRAca/VYIaKOknp0UR0xy8kLyseOGjJiqv
zrrKzjEHr1ePM9kFHkW/co9et+Wdg3IBdRouZx20M9Qnmlt4DvR8Wlm8m/WR
0nXulKuScyBtuU2/ddwAnbV9m10lMwc5Y5nJl6lOIffTOmU7D89B5qHcPydu
nEaPUH+985E5yDNlyMY7zqC8A74dnzXmwCTozTDVj7OoiZ9naI/eHBy8Xf/y
bqEJYl3QJTecnYPBcBlyH9kcSfUPsAmfnwMfs3K6fscLSK/xpsAN6zmY/2a+
7s9oRbn+8Eq2XJkDHveQOS0va3QvI/ewhPMcKD40puWkuYRexRzT8vecg5GN
gxes82xRdeDfUz995yDrSbXbSJAdIp/f6Xjn/hyUNL55fjzFAQkee3fjV/gc
zKo3Njybc0TqSsfvy8XMgeaFQz/IHi7IXGQ4JiR+DkbdqTKzeN3QDc7bqX0p
c0BYDwj2hrujp1v8eUoZc+AauzzTKOqJisbzP4Znz4HVXhum3h4vtFA70nWk
dA4uvrygWFh6A3HnB4xEV81B9t+reeIjN5Hsc4HFsbo5+Pnl2Vd25I8Mwwqo
NRrnQPVpgu5fmwDkdMOQ42nbHITuTCR7VgWiMLt/e2a6Kf7YuNC9Vr2Dss4E
Sen0z8EbvcyRiJa7aPRgkfbi5Bx4h9+VumoVgoRvOV0+sDAHRW03ZjvPhCKL
76L3bNYo8/jcli7pFIbidve8ekam6G3Wd+XMjUAtDo9rW+jnweiCho1qRBRi
KdUfYmSbB8FCVgn5nkdIm5mGDrjngSzEucan9RiVZrhqZQvOA89x4ke1TRxa
XJa4NCQ6Dy91NyRs/3uKZHT6gnYfmAeBQ0KdrzefIfvYuFQjuXlwbJb82L6Z
gF4OGVQ/UKZg65BefeFk9EeBfrCKmAc9rbKG78opiP9OOfWq1jx4DTxdKfN4
gcL2HdCwOzUPA8wGHiflXqE610GrJJN5OJz58JxgURqiqnoW0G4xD0dv2lGH
m2QgNY7TKayX5iEkLrDfnec18rJkqtK8Og/dPlbPa+eyUF52Zd8Nl3mQPpTd
GDv7Fo1vepPzvOZhyPtqisCOXGSZMIz+C5qHefHD8hdH3qGn44mWJiHzsMbs
Q31L8T1qUz3rHx4xD82f8eXHzwoQ6QFrcm3MPNSHLHbv2VmE9LqqP27Ez0N+
jY57Vs4HFCTh2yv/Yh46JP5xD1uXoHJvua2rGfNQ15r5MUK+DMnxpqh3vZ+H
WrHE7XKFSuRoe86Co3QeFlVHuyUKqlD6e5KfTtU8TAsduKgy8An109Ql3Kqb
hyfGOF9NuAYJGN0qK/g+D/RyLxIcfGrR2ReKvyda54FF4dE07/BnFDk7sS7c
PQ/UzehG0tUviC7SXO3R8DyYp7If3V/VgNAfLvP6iXkIO2DMdy72O/I5+PUG
eW4eWq8neBeFNKF8v4BnSquU/qVtF1kNW9DUN+USp+152G1yxTXP/geS3D3T
9YpuAVQ+FhudiG1FNg7pq79ZFoDX04t+pr0NdTDxqujvXACuJNvQtkcdiNP0
+7nAvQsgcP3Q0SCuLqSfced6scgC7NINkNrxuhvdXabcCPcvwOyVuMZRs9+o
Unu+SFx2Ad7//XLbU6wXrce87rigtAAMx7fUNNj7kOKQ1XKM+gKw1Q3oej3o
R5lBzYdpjy1AAMN3NrPKQTT4I9hY7SQl3780S33xL9q7D3m5GS8Ai2p0bvGR
YRRd+bagz3oBjNKC9LMZ/qHvJNt2PvsFWNRI2LIOG0MMlrsXDZwX4B9LyWPJ
/RPo5uYDhXLfBejIpaFhzp5GTZ6XYnwDF+BxS2r4kNUsEppSX1IJWQB1ZZ7z
Qn5zyP0yn8lKxAI0JEqyKL6eR7W9M0WFsQvgandFaP/YAuIz+brTM3EBRK73
7t9JLCH7plQf+ZcLcNTB3Vo0fRmxVRqr5eYtgMzA3tag8jVkqXwowenDAiju
TT3s6riB8nKZNg9ULIAE78ekIqUtZJxS9jHz2wIY35KsFouigkz+WMErrQsg
qK5bYPuCGtajnG+LdS/A9IGbzlQ1NJAcuE8jdWQB1qKEGufV6GF2bf2F1dQC
DHvt+KLymAE03dtp/ltcgAsS7MplZEYYtblfm0C9CCfvlfP27WIFtd9WYuZM
i6B23TSv8ysbhJ1RC+bnWAS/pQDN8mgSyB6d0o3dswhfp9haDdS4IKi8LvOM
yCK8ZVNhVdTjhnbFFGZuqUXoLT8TbnN5B/iInfkWoUxZv1/0ckMLLzQkSUsb
oEXI3Z/mXCC0E/bwMYSzai+CXfnVcb07/PCJocQwxGgRbtMmHdO6uxt4bkfn
6pgtAn+8y0C26F6wW7nGSW+1CDavIw81/hYEln+CrYFOi1BmqQ/nj+0DC6tV
eey5CNJaj7089IUhp+vH421fSr+TAtMnzETA6Otd45shi5BZXsmxnCoGrzQs
i1QjFynnCwfJ9YnDconyztXYRZA7u3iGQVoSErLGuzxfLkIIt6zRm3UpmBau
VVXIWoSOmaHbkv7SgBOS4ufyFkGRlfT6Ga8MDD08ZeFcsQiFw2GGrNWyoEQn
9VH68yLIHpIXCs+RgxA/WsGJb4vQ1S2/lzpDHg46FfVd6V4EprPM27MfFSFg
OBKL9y+CLl9p+OPew9B64eqLoZFF0Eox3fZiVQZvwz2XrBcXIX+a3exBjCrU
1y3V/LexCAzU38K45tRAAJpF/1AvgVbZw4QQS3WoOBQ0Ys6xBMdEznGruwBw
Zp7X3cW3BCSRM1doQzHYCB3O7NyzBGEDipXOdhrAyPXv6lmpJfjl0/OAA7Rg
+b6F9nPZJRC68Ez9j9RRGNluERpXWoLcT/ZfZ4W0oW6ypPO2FiXO8Hbs5kFd
KLok877hGKWfZJVGw1E9SP+VGsF7agmSVTgOMNkfg+D6h9pvLJaAyYm6VKz9
OHgD1b5lmyXgGxE8t7rXAOyKPDfx1SUwuq6fluJlCDqvLrzv8FqCF6/nlzQy
TwFDwKF9NJFLkBQkEbc9cAaWl19unohdApPzL+eHPp+FESf+ricJS8AvuKpH
9d4Y6s5TRx7MXAKd6LNz4lnnoKjVy8EnZwnYhvJJAwWmkH5sXLumYAk2Jli6
DzaYQbBy26bppyVo5lhuXeO1AO8c3a6XX5agVUOWgTC4AHZi5e+nG5dgNhRY
E6IsQWdHmsPdX0uweIXkmpFsBQwz3l25C0vwPsI5wj7pEixfnni/vrYEijWq
Wg9cbGGk52KkNtUyZN7XehF87DLUNejp/GZbBtOHcXl7+a5AkcbHfeI7lkH2
6nwvYraH9GK5Ldddy1A9EVJ+nP4qBKcLFDCILwPMfz9wfNc18N4bGXlaehly
/l570ybnCHYxtNcS5ZdB/wN/g8dZJ9AJmtwnD8vwaw//lyMlLsBgWRF5wXQZ
yiv7tDjvucNyu/y1TMtlaGJOJ3SRB4wcz9BZsF0Gh4vRusNbHlCnGrUV4kbB
5ApV/kdeUJRH1912fRn61BYrOC97Q7rEjQJB/2Xwy/oZq4yvQzCvzbWC0GWQ
jrRd/ct2A7zDOnTIUcuQvRZ0smP7BtjRHhfWf7IMrfq+cS2rvqAzp9Dd93IZ
nOe08mvobwF9I70u68dloJLdkNzzOQDYnBIv9dYsg0WDVdFP50DgYVcIyG1Y
BvOOqRhHwSAQNbAqOdO1DALCd+73Rd4B6anln2J9y2CpeSyYx+guKIaHz68M
L0NPbH9ul8A9ONpYeiBxYRnWGX3jGqqC4YTTaT3n9WXon71Rapp8H86y/7PF
1CugztHwS+lOCFwy4E0eIq2A25sb13IuhUJQowvnQakVmMzO/XPqXgSEOjEc
JMuuwHbiWyT4MhKi2ZOO/VBeAeBRGFmyjYJUg4YgL+0VqGM9dqjk2SPImrJ6
rntiBUT6/bNPH4mG/PCVsl1nVoD18rza4EA0fGoUXfpotQLUCtXUV1EM1DuV
cUVdWYGzAh1Hni/GQAu7kYyN8wqci3MINsiLhX6D21cY/FaAoWum9YnKE6Bq
6u42fLIC3P6VPWlR8cDk7LoslLwCC8J56ee9E4CTxLhj4dUKrP9T9HhhkwhC
hoonnuSvgJ10i5n7yWSApoiKvsYVqLXPcpWGF6DjLPb7XfsK+E0+uXah6QUY
kspX7vxeAZ45oXo361SwNByTlRxbgdGqxsy4xy/Bv0nrpSvdKvyJfc+/Wyod
gp1/VWqyrkJoYl9C7q90iCC59fBwr0KeFs9qS2QGJBkm85b8twqcoa9LuJle
Q3nT6n3qI5T8bobPjApvodY58lWbBqVe0OOd11my4TtJ/FOa3iocNCbnSY5m
Q4/hmfVjJqswSHXAKi8vFzaash2j3VZhoIBTwbPmHQj+sE446rMKqj7vpfm1
8kGzjbdh2X8VVqfonVM+50No5y2J82Gr4P46M+9h23vg7zcYFMlYhbEDY0c4
eYpAfZCaqyN7FTQq/h3c9bYIrIYKIaRgFS5f4P5jo/sBMv7tTZr8tAofnpxZ
HLlfDEpzU+cKe1bh6I7TjCtyZWC+8CL4yt9VuJ0VPqY/XAa3lowLd42vQnxl
3mH1xHKoXfvI7b+yCpZ/Ho6J8lbAGZqIRh3uNdgyakoUj68C1x0yWl26a+DD
Gtj4m78WYngH3UIN1+A2a5wyV3QtfNgZl6JuvAZqs7fEnNg/w/bu7a0UmzV4
kjZU95alDsJFm4qv3lqDfDHdpvb/6iFPPGh09901MCLFuNVn1UO7pBJfU+ga
mGsGizKrfIU9B5M95J+uwVHJGLc7Zg2QddhZZiN/DdoFhm1ai79Dk7LwheyS
Neii+deRZtII86odDy9WrQGV9uSR0eVGUEVorKZxDZq8FjWqUTPU65Behf2j
5LP3vN+93ALD53J2CQqug80bC8PT/W2QbrpVbSG6Dn9+qUa9Vm8He7MTjglS
6zCUnJInHN8O4+bjFfzK6xCqNfDthulPmL0gbrvj1Dowdxa+/DLYAZuXknOY
gtahYPrgOzaZX1BhO3VON2QdstJslh4n/oLbl9WpgyPWYZNdxo1g+w00V36d
oU1YhwHbybnF6d/A5MC3tvV+HZ4d8tr591Mv7HCN0FoYXgdqYdF6t6Z+aHft
nZSbXIeaKvEjj0kDEOcmHec6vw4yGpW7iJMDwO/R8G9qex2Ee7kfircOgKA3
Q8S/nRugQbvMdfjPIEj5+Xf1HtuArcF0Tm3SMGiEODvVZ2+AccJrP/naMRDI
7zsXUbAB9gl3M6N2jcPi71OaZ8s2ILQkyNfEZRzSDyns7K/fgE+0r9hIeyaA
rXOlauXvBmwfceHqvTEJHWKBPBICm+AjvNVw9ugMXKt5XHYveBNYhBnUMvwp
76gpuvTj4Zvwwrjsd9lbyjtwp3cUV8wmmC2FSTb9mocWB9PLSS82wbype/4v
5R6uxL2Xo7B8E75n/uZNml4AKut0m6H5TSDvuyAebL4EsdvFzFoXt+Dk4MhN
Tr5VYJP47Bx7eQtoyFSn5YhVuHvyR9votS0ouXLLm9+Wcq5SxpLCfLZgsuDZ
ZYV3q2CoKSDf8WgLaGcalVz11oAh+Kb51dot+BFSpP7u6jrcyrlfWdawBatU
sVq3w9ZhseOxKOnHFnQuGids5KzDoMTb6fzeLcgruZ+zRplD5deeoM3lLXAe
HDUe9t4AH3b0JnL/NiTua6YzddqEmcP6nIOHtuEuq8KIY+gm2FmaeCkqbYP/
ze6vuzM24WyuM3RrbgP/7jpJrb5NkDv9vE3YYhuKPSQuxutvQeaNNypeNtvA
UnjvmLXtFgilfkj6Yr8NguYOAyW3toC00HzF0WsbvmYKnduTuwXjMVSbhRHb
cNnrlU442zZYf2SzZordhg83vtjUC29D1zB/nXnCNsjU5qlHqGxDnZJcFDlj
GzxXEvd9oPRJ7bIWPfZpG6Ts2+uvvtuGXdTODxK+bMNmwd3qkZptiNrvOz3V
uA2/HPIYx35SdPhGF0f/2oY9Y46yN1e34fyemhM9C9vQcKvl1hdlMow7zc0X
rm8D05RuSbQuGXwq/3sWSU2GkAlTna8mZIiz8RvW5CBDfGKMj7cHGcQKsh7u
4SNDU+dR7ckAMhTQd8st7yGDCFtC/rdwMrRmHvZ/LUWGt/r3BOvSyGC9fkn0
jhwZjEyfhfbnkWH2eHSDhQrl+y5D90tlZLidVOWqBGQQPCqbaviZDKSZaT5O
HTIcUbs186KJDEl478exE2TgjtyrcqGTDNLRxy/VnCGDYU2yTUAfGcr+3mBO
MicDUpG2ZB0lg/7hzFxvazJ8srgvvD1Fhu7gDuNT9mTQ5CPnmi6Swb6LbnO/
Cxm+X7Hj2L1OhpX9Cqm03mTINGMx0iaTIfimtV6vHxn+i26rn6CmwryNkdNF
d8ggfkpm9R8tFX4lWBETFUrRTT51Ip6eCiu4Tqo5PCJD4ZXEP2QGKlz9SWBA
6ykZctIiv+9iosKndxy7v/c5Ga5vVyn/o+B+2+sHVyi+JJt2aF9jpsIuRWlt
LW/JMGN9S+glBW8ztt/Iek+GWOtLS5EUHG5GI3S3lAxBxdLLchS8541s3YVP
ZPDncjR9QKn3ZtPSUbmeDC80nxnHMVJhNcNwbq5mCr8BxgNmFD5fn5cVj/8k
g1R4765WOipsOjdmWdtDBpcJxivUFD0jmvz0yX/JwGkjf36Uigp7xei8uT5O
Bj326/eYtshAN+J5+vQcZS5xZ3/nrZAhWvnlitQqZX80al+sp3zf9+BHEh3F
t6LtosqTE2QwnSLvm6GhwreE9+XrDpFBiG/n0nkKj4dK8/N5lL6jSKa+nqKj
fY+Xdlg7GbyjLJxTOSk+evgYJlZT5ljiocHBQ4WHislvW4vJQD8YyuO3kwon
yu1w8s8hQ4xCSamxIBU+apiVqUrx2cKiJbx6HxXujREi64dR9uG9UatDYlTY
ivzD8edtMuR38DIyS1Nh37x/98wuk8GXLP3L6xAVPlH05YjxOTJoSB7NHpSn
1PNJ3NukR4aWG+5nylWp8KE5iw9HKPv4aeoD8f0EFZ4tKkuTFyDDxW8pa7GY
Cq+blEm/YSbD9J7m5y66VNi+ofS12Og2sFUdmBQ2psKbTraz1onbMPjsdP1t
UyqsaDuQMRRCOece11/1nKfCVCx7JpY9t8FGosYizoYKq+zaQd18nBKPMG9k
dqXCMQXbma6LW2Bz4UHObCgVtk5fupQsvwUqyrmhBhEUPxIsLAr4t4Cd66dd
1iMq3Nalu+28vQnFtUL/2T6lwvLVR/s66zeBXbo4sjONCjuHWf55bkaJr4+4
VlRRYUZyRNtxxw2IaGcz2F1LiR/PtjI12IBLOfL7fb5Q4X0af0uEZDaAZOM/
INdE2Yek0cLx6XW49JXXKO03FY46mCwU7rQOpKdHFcKWqbC78qdwY6s1uHw4
dclMmhonu/2q3SO+AqERvBy3DlHjn94GYRO0K5AzGiKZIk+NcxLff0sfWIbl
Zy7nR1So8ZHsCwyjicsQsq3+yV2bGjujD0ZvuZch60tn2ENLapwxIKuisLkI
02bsoh+jqPHdC3aCLE3zwP0+gOh/TI2jy8MdzN/MgxLbogntE2r8qrnre2HI
PNyu+PXgWBI1LhtOY3ykNQ+cIpkzP19TY/cAIZmZkjmQn9Qsm66mxlJfCcPZ
17Nw3d/HSGiJGs8+XV4zUp4CyUk/tvur1PiEzY1jnPOT0GUWWDe1QY3vHfxE
z589CSqHQ9XKaGhw4UZAEKvoJKxOJAibcNLggEuyUqm8E+BrVjn/8AAN/nBU
s9WDaQz8FRker1jTYPeb1L7O8sMgk8piYHmZBjN8yNnQWB2CPxwcjJ/tafBM
i/FPn4ohgImdN6NdaPDa+2gm7hNDQJW6/9LBWzQ4bvCj/8a1vxDEYaBw6SkN
xiMF0QMVA3Bv/HFbUxMNDlmf+mBxqRfudg43bPygweIaIqfukii4Vrla8icN
vltfuf9CaQ8EJf/OC/pNWS+bc2ofTw/4G4lEKP2jwTnmJbvGmn+Bd2m+XjI1
LU62KhHgse8Crww6/I2OFjMtxskICnaBZ4yJ8iojLY6x1N7Z2t4J7s7rYkYk
Wvz+htCy4tFOcBHWpGXYTYuj/AwZfkp1gH3oj49OirQY8xmhIb52uHJdpDBe
mRab1zHiI51tYGfr9faLGi1WqqpokX3aBrZoV8I+DVp8bWDFfnF3G1jPW/n8
NKDFvzTCvOukWsHcfFaeuELB1PFqnbYtcEKKI5MtnhZ3yWQUloc0gFm9S+b+
JFp8aOtZhfuhBrCza8nUSaHF9jSLrMKdXyEg9dHrgHRanFdWJnF5/1coEOB5
s5hPiy9ev3xIv/sL7GHdldPzjRaPS0vML9p+hv2vb+SsNdHijcdfEy8JfAYl
3V85fK202P+zNs5pqYVTdxJyT3XR4pCVarEWqIW7G3vf1Q7RYt7nz27tkKyB
yQnhgrdblP7Z3pO0/32CtQd3Cr5S0eF9HmXbpgNVwCA5VDBCS4c3NQ7rOL2q
AiHbtEIhFjqczOPu8l26Cs72SHyI4aPDjm8DK+zDKqD8u3Sp3yE6/PS7Cs9Z
xTL46hBe+kyeDqud3J+t01wKHUzTpUWH6fCnMQXBwGulMHs0t2z2CB3e3RXv
VJVRAqIf5T7a6tHhCjfjdfZDxRCerVR1wpoy4/P9gXu9C0HcStI625YOq/yt
YhfdWwgV3AI0JHs6vL7H+q/r5wKYvb6l1exMh63KahWbdhXAWc3aL6f96HD6
Qbgu8yMfphYL7fNv0+G98usS24H5EJyRwbzjDh2Osmy5tqyQD8VsD4+3P6DD
HWuOZkYJ72BP5+lmkycULMC0x/h6HhQ+0HL9EE+HVzyrgxjk8sBQ/TAXfzKl
3h5WiQeduRDwgv9M9ys6bM4pE5NfnwND1/o6zufTYVUjy8dcNW/hLZXTH6tG
Opzy1feRI/dr0H5veftTCx0OPr0ab/kqE/5cPiUk3E6HXQK4bOhVMoHzm4LN
3190OHc0i8HcNgM8Y9eHL/+jzMMEjwa0pAG73mRw3QQdnnuYX3DDJQ3S13sl
JGbocMTwrMc6Rxp0Xfx09d8SHWZlP+jhb/wKjkiFTDnQ0mMuopLYnkuF9p4b
Ed8Y6PFYudb2y8RUcIy8dkiahR475pO9MvVSIXnR0G2Kkx5LL+Ysl7x6ATSV
vEsugvTYGoscuOGYAg1nXm56qtJj0o1D9V8cEyH/3uCvBHV6nO2tKYXmEyD+
w76SaqDHHoG09PE3EsBhd4oXpw49HhT98Hw0PB6Y/yZOvzGix/iqyLDo96cw
y9PzvdWYgkUTqbmsnkKXzu43a6b0mO6Jhnvu0hPIzHp2RfciPf7r1L9rQuwJ
6LnH9Q9eo8fBTz+Of3gWC7KvflYwu9DjoOd5j6LUYoG/gydJ1p0eT6p+HJ/s
iYFR1cdm/j70+J8EkSUgHgPB1FGtu+7RY7Zl3/r3X6Phc9SD2lPJ9NiyOEf1
wukoeFtdn3r9BT2+eR0NbjFGQcwiY2DyK3rcaxral3o7EmxNg4nJLIpfsuG6
25cjgE7oTtH9D/RYPdSKacEgDCZPV8fklNJjqTtDVNcaH0L7HWqPnx/p8cPo
W+doTz6El6O3D4nU0uNTbk23PE1DQTPXL7OihR5f+bDjgO+dEJAaKAsebqPH
wrvONfHuCAHuHRu2bJ30eLo0U+Pxq/sw6H1jn3kvxa/g3wRfYzAEIu/4pTF6
3MHfF+CpcA+qGl3CpGkZsKtjZUrKySBQ5MGsTxgY8MeiBwNUC4GQac4ZSs3C
gIfmCP1dTwMhcjTvfgcnA6Y/PppydjQALKnngwIEGXDx5Cj3Wfnb0KpbTT2x
jwGLvuiv2I72B52I6ABjMQZsEXInL2P5FhzcreAvJc2AS6taXCrr/GBT0fNG
uyoDziSpMj4P8QXXm0dXEUGpr/KXo418A4Y+8Vx/jRnw4pkr6Sk3bsA3w0JP
f10GzDTf+K3b0wfi7ZddJI0ZcITlSfP7Id6gmuhj5+fKgM1pxBNu7faAt4N6
wyMeDPjDau7NQx/cQWj/LtvT1xlwopPBsfaz7sBUVGIt7s+Afd8Wv26NdYOu
5nWLlocMeOqXaFrOQVc4wfftt1okJT+QgZ4hzwWqLBLM06IZ8P6XxzjZmFwg
Y+yIqe8zBiwu84R/7pMTeNPeOiOawYAJvsuRnuevwfgxg9aILAasbHDh3vmv
DmAZtff0WjYDPro3xEdSzQG091YYNhVQ9NGlWBCiV4FHmXzMp5oBv5Xbq9HH
fwXyHQLx914G7G4/Ly544xIo2ljViw8w4AtMbQfPcF2CIjM4FTjEgB9eHOJ4
+sYGSvS2LipNMOAS50QWqRFrqBK/cTtllQE/j33w1dbdCjQFTRk3NhjwxOmC
C+wCVlDDqxxpTKb4T/avWw6+CHV0S8ksDIy4QZh+H6uyJTQOulZ47mDEzdmG
DR0V58Hw10mdZj5GXOpfXJEjeR5afsg07RdgxHfK3llHxZpDe9Vk7x8hRlz1
WeHKYR8z+JVsv6Unw4g5n7OseV08B//MrdT3HmPE5M3k13uzzoCDEdReP8GI
R/nsXgujMzB5TPBE60lGfI90KdWq3QhmVHrO3zdhxLW+P+XOMxrBMp/pzblL
jFj2fdOv/4JPgQ9JmfbEFUY87v8aqqROwRo938N0B0bM0K6qFpZ6EjYX2+LP
uzHigmEnsWJdQ6BtO1n62Z8RS89ptFqWH4e7DTKaQkGM2M2ZLWZu33FgqGZv
8L3HiBnb4zwrQ/WB5d237kNhjHjl5Wp/w+VjwBmpu/bsGQUvn0scBl0QPA4q
zgWMWISD6aDOdS2Y/nRtK+IDIw4g6YfVcGpBpcrT6txSRmxl+M362FtNsBKf
OzFXxYjVys//pzumAanUL609Gxnx2dKLHtS+GNx9msVjWyj6bL5/+yCMQWtm
Y6KwjRFX04//NI0HGOo5673SzYjlPV+RLQwRSBQzPPQdYcRh8W9lrXuPwKqM
wqmEMYreQRq1Yb0jUJ92kbd8khFHTZYlXP6gBg6Pi59vzTNis97uD0JJqvDW
2aEggEzx6+ses8UHyiAr1tQbzM+EO/1HTt3tVQCqxPXUjN1MGNideD3dFeAH
t4R9vSATNlJ6rRPNrADuVAHzzGJM2PR3uI0MkofC33KM4XJMuLju20BlpSwE
G1l+z1Zkwn19rxc2bGXB5GvooyZlJhz0ZNCTh00WVov+7uZETPjBO9+3DpUy
oBYdK/tYnwm/l62P9FSWBhbm6qX3Bkx4Zv3u7eKkA/D79nRp+ykmHL897CTJ
eAD8nHS1+c4x4TX+ezQn/u6HCr01s2eXmPBcWTvbXIUEaJEt7jz3Y8L5Cpei
d62IQEqowBhtABN2064mUwWIwCZvl6H9HSb84fCkVjyrCBRJnxGQC2XCPULj
JulSwiBpfuxd9RMmnFdgLREdLAR3hxl2SiQw4Zd38257iAjBgGut38NkJty/
q0X24L3/IP4+6J1NY8KtDWl//5AEga3wcN9wPhPuemCUJnt2N9jjhaP6RUyY
PSomyjZXAD5/y8vKKWHCVrEzq5YkAfAfPOB9vYoJ/zMJoTbq5IdZDmF25iYm
/DAjQWspmg9OJPS5O/1gwgTPGp8gCx+8Fk/q+tHOhJsr47Wd7/KCDcH/Kv43
E05QqiWrB/FAuwPpiPQYEz7tOaHwPoUbZJe/pURNMuGRv1csFA5xQ3jgA4al
GYqfoln8xlVcoPOUrvXjMhMWXU7l0hjnhOLP6/Yn6ZixgZTBN8MiEvCcLm56
z8iMT+oTZ9TX2cGtx0uRn5UZHwjRtwvTZAephVlyPxczbg+gFZ3pY4VEodE4
9/8ouPXwPoHjzLD65tVmhzAzXtne3O2RywTGyjY2R8SZcSidr4n7TiYgGfYe
pDvIjAUzecdI8wwQcLOtNlaNGat9CKh+0EwHPQyPpNYJZlwkuz/qlyEdqEYb
RllqMGOq5T0bCj9oYT7z63kJPWacusT4p+QPDdh2VM4XGzPj8L75MeXd1MA5
0BD715QZd/VXHZ/+QAVlEz9VSBbMWGe01K3ThAq4qSf9L9lQ9HLMJ4kokVHl
AX5Wkgsz/su3uafu+iZyUBLJUXFnxnxWccttPzYQn4bM6UtezNjHzp/68aEN
5Ghy9EnxTWY8fb3gcNvSGhIIdBW5FMKM42hlPVXfrKC6hzfrwh8y46OiVLxv
hFaQW1zw1eIIZjye8zv78LNlVP8mMZc9lhnvmFLiOv14CXl31B8pfsGM79QW
vWx7vYCEB9r+DL5ixjFHGS8RSguoceJPIHsmM/YK7K2Cz/NIlHrpi00OMw7J
O+jePj6HfhzYd5a9jBk/0s0zLTGaRX5K0ivKFczY8JToQvXQDJLUUI63+UTx
8w0X4Sg5g/xNDPo/fGHGSu4/3ezLp5B04A1Hm3ZmzHXYtv0GzwTqeniXI7yT
GVsY7N2i8hxHd+Ii8z/8YsaFqU7aBzrH0K83aatsA8y4TLse78z8h0I6ftz9
MMWMP/GNBEq4jyDFgR6JwVkK33Yj9ueTw6hvYrSBbZEZu7FMtQk5DCMl6m1O
m3VmHMYqrL7tNIT+HpBKYmNkwdkvloXOPBlEEUqHsTILCxage+J5QnIQqWng
v9bsLLiJr/Nlc9kAijIx2f9hBwserP3xQ3W8H6HAoEJrIRZ8SM2tQbHuD1pR
T7T2E2HBHq7lLEZcf1DeaiH7E3EWbMse0xZo1YtEXMcuf5dmwfyxYu8+svQg
poun+JRVWbDm2pMbmmHdqFrAofq0Ogse8h/VCVvqQjc77jg7AgsO/N1NIJsu
NG3woe6FNgveEcY6Fa7didrUBa+zGbHgwpGuzW65nyhsVVlEwpgFv2i+Un6x
oB3pFJxu1jBlwVZ15+5WqLaj4gP3JK5bsmDV+a+VdSfaULLAZOeAAwu2iVcR
NYr+gc510N/ddGLBEw11nVP7fyDO6P9kd7qxYCPZg27jNS3oDvOZkBPXWbBh
fEF0ylYzsl8tUflwhwXzTSuM1O9tRPsK2oZ+BFP8s2MTUXL9jn65TEVNPmDB
IcnVOQl135DBqNDYvigWzML/eNeSfwOS77j/LCyRBTfsfnoxaHc9mnz0Qjvj
OQsOSPaJOfnwC0ozKJv7lEqpX3dE13G7DvF/nj62kknh9/uont70Z7T13njd
upAFV07QvIyYr0FFLi7pfsUs+Fkp/8su3xrkeuCB0ZMyFlx0m795iL4GDaaW
Z33/xIIFyx/K0olWo/pHIueVm1jw/ju3eIr8q1CgAcFo9IMF83Af6L28uwqp
MZ9779jOgiNN5NVrPCtRdkAoa+ovFux/9cYMx/ZHFO0yV8Y2yoJdKosTzLTK
UCckMl0bZ8E9dHvHOqNK0R5OXeOvUyz4Va/cfNtgCcrIS5y+t8iCQ+XFz7Y/
Lkblc7r7yNSs2Dkr9A29RBGirp53ukDPine7HxXziy1EOtFJpWVMrFjyrNfD
54yF6If8whkfDlYcqrvzXNTyezTikRw8t4cVp+dJBuRuvkMHjh5rOynEis+3
J38XDH6HXHkW/8sRYcWKFVO+kdzv0EbBsRIHKVZ832WrRVIxD3EuL078VWbF
funRt2/LZiPjuucqmkco+Z7ZO71d3qL4OP17KYgV8wto9Rq/f4PElFMEL2iz
4syLumtnjmUhNZ/jpzuMKPyHD7Uyv8lAt/WWkxRNWPFJ6auRtKQMVMv/Yjza
jBULTp58TPZMRydLlu+ctGLFqkHedE8N05Dt+ouieidW/BgUT6UcfIleN5yg
lXBjxc1Qar2VnYqm41dO3vOk9Bd8EfFcLhXdOGIwpnGTFfdcVbC8qPkCRfit
7i4LYcV2u2XT1Tmeo7YTL+13hbHisyIaXX8hGfHvNSy8HsmKj1J3PurzSkIv
P740VIxjxaS+AdvjcwmoeNswMPslK86fmx21EX6GtprWGlkzWPGbjLFrfL5P
kebzVwIOWayYreG5/L6OJ6gR1t+Lv2Ol/H/mXfweH4cGA9JGnlew4pKog9ER
Z2KQd0uSa+0nVrxkq5XP0/4YsQjFrf+rZcWLRr22ueceI/nKYJL8N1bcb8z7
t/NKNLqzdUWptpMVS+UcmqfJikL8BlZV/36x4jNaUkIqGlHobaKpPvsfVjxA
HKWaKYxE7UeOWZoMseJ2+m9KOQcikKivVPC/WVa864vogQ3Dh6j4qzAn+yLF
v12Hqb6lhqITu3bHy62w4rpMp3MN6w+QZzFrju8WK/4TeOLWXFEI+rw8+ZON
hQ2TJ3LPqFwIRuY6wxfl2Nmw2L3gmx3N99B0bO+YMScbPhRyeGtE+x7iO9y0
lczHhp8UtVSwqN9Fdh65YnIibHinRdotKcMgtF6dkWsszob9OsvZxH4Fogju
FFXf/Ww4yeXJxyX7QFT0Lsqg5hAb9vXinGiLCECMs25exupsmDN/funywi2U
CA6UVxkbPqnhsZ/v8C0kG2nzIFmTDc/eF/3setMPmcqcSRrVY8NP7awu5vPe
RJmOip9vGLPhlTTvIftbPki9XPpksikbDj0StPPqwHXUwirWXX2ewudeHSMc
u47WsninWG3YMN2OKQ92UW+kP7bMk+zMhpleiP8tp/VEf1Rmkqvd2HCx5HWY
ueOB3ENGJUc92bCDQBanHqMHipfoUpe9yYYN3+7k/m+nO5q4XGJbfZ8Nm2Rv
6ZubuSK2Bs1IqYdsOJ2GE5FaXJC0zPeS6AgK3+prLT4Lzshx+Q/pUiyFn1pf
Ru9xJzQZTFdC+5INK6AMwTfIAbFNhP+9ls6Gzc+SiWMhV5H0yZ2k9tdsOO1U
qu/3DnvkuFPq0qs8NvxzycloO/AKmsw4ya5dwYZfSTxjfMl+GbGxdStnf2LD
cPQlseJri6RdbWx4P7NhQTuzVWLyEnJU8fow/I0NN/wnQKj8skFT9fHWwd1s
+PIjD/XdA1aIdFA0bLqHDStp275SvWaFZB5lF5n0s+E9YtmNbHMXkbNZFavE
KBtex6X2r1Us0fTYcOGXRYpfQgymHOznEcnQpf/QKhu+ct+tP/ekOZLJX2V5
usGGz0XKCLg+MUPOvqxW9jTsuJ68V6v2sCmaZpFjYeZkxywezcaCWcaI5FKq
6LaDHY8Tivf5uY2RTJvWxW4+dnwi8oKLvP9Z5JxgUvB6LzuO4h8dOWtzBs0c
8LPUP8COrTxNxq+eO404o+gf5Muw42vlP7+49Z5CsosR7wXk2bEDz4umBrtT
yLX8BdOECju2fj+leoDhJJo98SX/oQ47ToiyuGxfeRxxvjvVu3CMHX/8vP2h
cUMfyfL+YrQwYMc5VzIhhNBHrr2TFtJn2fF/KsuvHVr00KwTN2OjNTt+Qrrw
QEBWB108Pea8YcuOhb7J2T1J0kZNilUd++3ZMUeunkErSRu93XBKD3Zmx56l
KlTCm1rI/sFXbXyTHX/3t7PPJGugTseUbGd/djynVvo0KkQD6Zy6zpsUyI5n
/P/q3OPRQKI7xYbX7rNjAeXpYO3DGPW/Crj7PoYddyiWkg7KEuhkyLnJgSfs
eG2/y3SGszqquCZzljOB4p/L4K9d+UdQonyPiNMLdrynYdcjG101ZFqlXCOe
w451am4UymUqoy8vSQeM37FjfUg3YGZVRkr3h6PvFLBjE7MAswk3JcRj+Nim
v5Qdtz0MErM7fhg1/56mjv/Cjgk6dTl/KQWEKj9frW9gx2/9Gw9OZsmjt6mJ
P5Yb2XEQTV3aSxl5FHpV/8WZdnb8I9S14BnIIZ2VNMw+wI5pTr9R+MlyCBX+
8ss8MsSO0xiMwn4ckUGiFWc4HUbZsaZ+JBZ3P4ho7lH3102x41s+w1kG0wdQ
BfeF2wHr7LjkdqjditB+dHBZYTRni6L3n9A29w1JlNjNcrKXioR3WrskB/+U
QL4pxYJqjCTs05xXQJcgjpRkeCoWdpCwefvfJgdjUZTGNSEmvJOEzV4ULZ9s
FEE8S5/CTwmQ8PW9uxzL9UTQfJnLhWwhEnb7os7SfEwY5Rz7tml3kIS/Z6e1
erkLoQN/8pzuyZIwt9Txg4YMQijTPe7PSwUS/uOU87pZ9T+UmmBd1a9Kwu3+
pRGyr/ai2KmVO+Y6JDxh13zxYKEA4g7qXfQ5RsKNgjT6iF4ARfDVXH5ygoSb
o8XyvpvtQiEQodtuRMIVywYXpzn4kd8jUVbDiyScPhDPfzSbF62Jsfg52pAw
T+bT82qCvMi7dGYy9DKlvlDnRFc0D3L9W9r05RoJvzejfZEXvANdOnw6WsOH
hL/lX3xhEseF+r8q0VrdJGHSwrzCTmEuZGG5x9Pfn4RHfsrsac3jRCb3R43L
7pJwcVzPQls2B9LvvrXr8CMS3qw5WqB1nw19cboUeiaGhFNaZGdsGljRUZpj
G25PSFjyOxfTeW5WhA7w9OYkkTD/kOEZ0zxmJHcrK0Uyi4RnCQGdo/sYUQ5X
FJduNgnnW3I/GrjPgKTSvYIu55HwvfZGE9d5eiTajG1Ti0j4afQcw2YrHeLf
1ymxp4aEFVorHEQqaVBsYflTtToS3r0spfJckwZx66cym30l4ds516ZPfqVG
bB5OE7HNFD/4bT9u9lEhci1tLkcPCafpWizmW20TfmZj/8n0kTCz4sVbiXFb
xOpUU9SJQUq9V7tSyn9sEvN88e4P/pHwYdLuBf5zG8SIvawS7RIJW0PVQGn8
KjHDlaF7eZWiL+NK3O6xFWK1dK/Zlw0Sjvd45uylvkIws7P6PaThwCS7Zywh
c0uE9LvhTzs4OXDb5b1hwY8WiMPmFm1eOzjwWMzN7wx0CwSibRvq5OPALq9P
8N72nSdOGVcxJu7lwI7cO66Ous8RHmvxBqIHOHDSffpblntnCL9UrovBMhzY
RNLoNJ36NHH3eIjrPzkO/GbskhDZaoqIS/J6/FaFA+u1K+/FHyeIUo1T3Yo6
HDi/RblQv/QfUTNeNx53jAMH/Y4wHGf4R3x/TGyunuDAEbr77eJMR4neYan/
Pp7hwEef/Uy6yzJCUIXSX9a25sB5F1/E0qb9JZgV/LwzbDlww6NZSX2+vwR3
z/x9ZnsO7PlS90/cw0FCRKY/q9GZA7/jcBRrCRwgdFpLZ439KPpigmmfKvQR
J2/K0RTf5sCdka+VI0/9IUxFM3cI3OHAYiONX2c8egkH71ilPw84sLplvKJS
428iXMDVz+4JB/bu3/5P8HMXEVczEl4fz4F19vL9SOTsIpIdLzyXSubAliod
CUrWnURehX719CsOfOXZ8Kv9XB1Eu40Y0/V8Dtyhc8REL7ON6GVN3NVdyIEf
ZB/e3cbfRowUcB84UsKBgxeNLZzDW4kVBipDciUHfm6BGWyCfhACb349vt/I
gbmunO7wkW0m3NuSB3NbOHBWxJ2C4PNNxNcNG7muNg7Muk82UzWskfA5MdEk
+YsDp78Kerqy9Y3onNpgbhjhwBLvTK1GBb8SMnxVpvNjHBhnGVyU8qgngtHd
DIEpDkzzPP3m5rcvhFIkm/a1BQ6sVvi3tC20jtB/SsIMVJzYpHeJW1itlvB+
63olnpoTqxY0tbzJrSFSq1ojZGgpOHnp11/JGmL9X1yvCQMnrjXvntgQqyZe
q/53M4ONE9+0Cjx6RK+KaDcITD1C4sR8v+XKtN5VElQ2f782c3Bic+4sMnVX
BWEamsG/ys2JbZa7u98pfSSYfh8q0tvFiWeLvFRLFEsJxZlHvT0CnJjmyNzz
gYASwop2kc5tDycOpr9w/OePYqL4QPGZZ/9x4nJ9OyIp8ANxxQ/PjYlx4odO
Ja3GvIVEdFQqv78EJ3YkRs/73C0gKl7RYe79nNg+8943n5X3BF9jfYSaNCdW
YpCnfvMvn6jbe1r6oTwnLqKOIP+3lEfMy70/858iJ950cOu7HpBHCOrw3nx/
mBN/8+WYnSLlEV7O3V9/q3BiHUmX8qqrOYRopfUVaeDEZL0NcUvtN8SptpqI
KsyJ1So/0IQ+yCL8RsWKzmpyYk415rzy1tdEO8c43S1tTtwfgDxyPDKJO1bu
qY3HOfFC6bEM9ck0YnF7T/wdA05cWvOLO0EvjbBL+vJI9SQnzipkDSx+/YrQ
/7UnMM2I0p8x7kjajZcE99kvF2+ZceL2ybLcnBMviLvzbucUznPiIOu9hnbf
UojlqD0nxywo8Qa6g30GKUR3oxsy/l+DVRpOZdeFMxRSPPs5oUhfmTJEUhq0
t1aRhKjQK94kYyiODKkUlYjCkRQyJbMSosxJhugYKkqoNxmSUmRM4nt+3te+
1tpr3cO1tw0Fz1py2ozKEknynpXSqk4U3Hsl/s3e8A6hB+qW9R6n4JXWxxsq
/nEkMNBjSawLBQ8WOuR9Lo4lTs/q/vC7MXpmZKR7khiitt2js9uLgpmY1rrE
oGiS/F7q9Q0finkfVUWt+28S2reuQd+XguvK5Sdb9G+SyUKpksJzDJ8HaUVt
6ShSoVZ3+/olCkhKPC6d5hC1JnbErkAKPqiln/M4wyHJrlLB01coYAMnuuJP
BAnMZPvYhzD3Z/0x75YJJ0YyUuaYQ0FY8KCV5LNQUllVa/QrkoIL+xJvbZ0O
IepH2bqZURTYXJIU26QZQljxtRuX3aag6lH4Y7GqYNIpxqa/J1Bg4ePBu0Ts
CjEqlFyckkTBdjuL4CifQFJ5sJbH4i4FleuNuOXdl8ndCMnR56lMfWFgmuvj
S+S4UG3LnRwK3JSkdxfcCSCdGe71Bx5QoKw3KF28KoAY6Uk+FXhIQY+6sRvX
wJ+oX3bP9Sxg9Dgx3pRw9jyZml0RZljC5Ot0da6I0lkyMmYY8ruUAknrTIlg
pzNkcOj8lYxyCjooh2FOji/p7Og5z1dFQeCv+3WPdU6TysIst7I6xi+1Vlyp
PC/yJKfLxfkFBSuDJdK+iHuRvJSlThKNFBjdclSRvuRJ7nI8jno2UbBFtvmu
rsMpEnhi236VNgr4GxfLb7Rik/N2rkbv2ynQvmDN+vLcnfhYJugHv2POfy3/
6dDhRpz0eXb2dlIwqafQGil2khjINWy400NBVubJJ0e6nImO1B/Vvb0U+Nl5
VvlLORNMqypP9TH8LjRPVzl2nKguiJQxHWT4UrHd6j/rSKhuC5bwTyaP/TvU
Bt3sidCbUNGSEQaTfG3Zd3aEt7Fc2OkXBRXmVcLPdOzI2JPV/M8nKFCI17mZ
qmRL3kYNjp+dpSD+v6SqMjkb0hIqOao4R8F+++TQE4ePkhcXjYbfzjP4R6Sq
KdualLjn9WvwISi2Hv6mVPAviTf0fTskxGBx648VAYdJ9K7s1zHCCHrqjb0m
qi1I+LbuZr2lCNy2KvbkLLYg/muhPoVCID9dpjCedYjY8gkWW0ogsHS9QzXK
mhGrmW2FgisQXM+Q9qkPMyVmo655jyURXNmmMiM9e5Ds/q8lk16FIHDd6ppD
/QeIYtnt2EY5BOmrzdosmkzICw92oZUCArmzqd2TP43JccW9Ld/XIniD+fVv
LjcmWdEz/KIqiPkPbXioeM6IKLOPsE03IFh6J0nb6+Je0qiw+VqfBgJe49CH
z1r0icsHkXTvTQjij9ulfpLRJ9kGVV23tyAYqmwqF3mnR1TkZfd0EwR6ta/H
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
      "]], 
     LineBox[CompressedData["
1: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
1S5KLW9uktHgULqP+tdq7H/F8PNw
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{3.644710121731925*^9, 3.6447101923041563`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.644754701397306*^9, 3.6447547053350887`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1280, 1548},
WindowMargins->{{Automatic, 1}, {Automatic, -10}},
DockedCells->Cell[
  BoxData[
   DynamicModuleBox[{$CellContext`showHide$$ = True}, 
    TemplateBox[{"\"Show Input \"", 
      CheckboxBox[
       Dynamic[$CellContext`showHide$$, {($CellContext`showHide$$ = #)& , \
$CellContext`ShowInputCells[$CellContext`showHide$$]& }]]}, "RowDefault"], 
    DynamicModuleValues :> {}]], "DockedCell"],
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]

